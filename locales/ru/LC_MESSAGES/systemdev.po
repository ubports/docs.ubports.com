# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, The UBports project (Creative Commons BY-SA 4.0)
# This file is distributed under the same license as the UBports package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: UBports\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-07 11:45-0600\n"
"PO-Revision-Date: 2022-01-18 23:05+0000\n"
"Last-Translator: Eugene Markoff <uralhistory@gmail.com>\n"
"Language-Team: Russian <https://translate.ubports.com/projects/ubports-docs/"
"documentation-systemdev/ru/>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<="
"4 && (n%100<10 || n%100>=20) ? 1 : 2;\n"
"X-Generator: Weblate 3.11.3\n"

#: ../../systemdev/calendars.rst:2
msgid "Working on the Calendar feature"
msgstr "Как работает \"Календарь\""

#: ../../systemdev/calendars.rst:4
msgid "The Calendar feature is provided by several components:"
msgstr "Календарь работает благодаря нескольким компонентам:"

#: ../../systemdev/calendars.rst:6
msgid ""
"The `Calendar App <https://gitlab.com/ubports/apps/calendar-app>`_, "
"providing the user interface"
msgstr ""
"Приложение `Calendar <https://gitlab.com/ubports/apps/calendar-app>`_, где "
"находится интерфейс пользователя"

#: ../../systemdev/calendars.rst:7
msgid ""
"`Evolution Data Server <https://github.com/ubports/evolution-data-server-"
"packaging>`_ (often shortened as \"EDS\"), which is the backend where your "
"calendars are stored"
msgstr ""
"`Evolution Data Server <https://github.com/ubports/evolution-data-server-"
"packaging>`_ (сокращенно \"EDS\"), где хранятся сами календари"

#: ../../systemdev/calendars.rst:8
msgid ""
"`sync-monitor <https://github.com/ubports/sync-monitor>`_, the service "
"responsible for managing the synchronisation with remote calendars"
msgstr ""
"`sync-monitor <https://github.com/ubports/sync-monitor>`_, служба отвечает "
"за синхронизацию через сеть с другими календарями"

#: ../../systemdev/calendars.rst:9
msgid ""
"`SyncEvolution <https://github.com/ubports/syncevolution-packaging>`_, the "
"service responsible for performing the synchronisation to a WebDAV/CalDAV "
"remote calendar"
msgstr ""
"`SyncEvolution <https://github.com/ubports/syncevolution-packaging>`_,служба "
"отвечает за синхронизацию с удаленным календарем WebDAV/CalDAV"

#: ../../systemdev/calendars.rst:13 ../../systemdev/online-accounts.rst:30
msgid "Debugging"
msgstr "Отладка"

#: ../../systemdev/calendars.rst:15
msgid ""
"The most convenient way to run commands on the device and collect logs is by "
"opening a remote shell. This can be done by using :doc:`/userguide/"
"advanceduse/adb` or :doc:`/userguide/advanceduse/ssh`. In the following "
"sections, it's assumed that you've got access to a terminal console to the "
"device."
msgstr ""
"Самый удобный способ запускать команды на устройстве и получать лог-файлы - "
"через shell. Это можно сделать с помощью :doc:`/userguide/advanceduse/adb` "
"или :doc:`/userguide/advanceduse/ssh`. Далее предполагается, что у Вас есть "
"доступ к терминальной консоли устройства."

#: ../../systemdev/calendars.rst:19
msgid "Scheduling and account issues"
msgstr "Ошибки с учетной записью и запланированными делами"

#: ../../systemdev/calendars.rst:21
msgid ""
"If you are not sure whether the calendar is being synchronised, or whether "
"the operation is successful, ``sync-monitor`` is the component that needs to "
"be examined. This service should always be running in the background, and "
"its logs can be found in ``~/.cache/upstart/sync-monitor.log``. In order to "
"see them printed in real-time as you operate on the device, you can run this "
"command:"
msgstr ""
"Если Вы не уверены, действительно синхронизация календаря прошла успешно, то "
"следует проверить ``sync-monitor``. Эта служба должна быть всегда запущена в "
"фоновом режиме, лог-файлы можно найти в папке ``~/.cache/upstart/sync-"
"monitor.log``. Чтобы увидеть актуальные на текущий момент времени данные , "
"выполните команду:"

#: ../../systemdev/calendars.rst:27
msgid ""
"These logs should be enough to give you an idea on whether your calendar "
"accounts are recognised, and whether a synchronisation is scheduled, "
"happening, and completing successfully."
msgstr ""
"Данных в лог-файлах достаточно, чтобы можно было понять, есть ли проблемы с "
"аккаунтами пользователя и как проходит синхронизация."

#: ../../systemdev/calendars.rst:31
msgid "Calendar data synchronisation issues"
msgstr "Ошибки синхронизации данных календаря"

#: ../../systemdev/calendars.rst:33
msgid ""
"Follow these steps one you are confident that a synchronisation of your "
"account is at least attempted, and want to investigate a synchronisation "
"failure or issues with missing or duplicate items. On the device, it's "
"possible to run ``syncevolution`` in debug mode. To do so, kill any existing "
"processes:"
msgstr ""
"Выполните следующие действия, чтобы убедиться, что предпринималась хотя бы "
"попытка синхронизации учетной записи, и вы хотите исследовать сбой "
"синхронизации или проблемы с отсутствующими или повторяющимися элементами. "
"На устройстве можно запустить в режиме отладки команду ``syncevolution``. "
"Для этого завершите все существующие процессы:"

#: ../../systemdev/calendars.rst:39
msgid ""
"Then, start the ``syncevolution`` process with the proper environment "
"variable:"
msgstr "Затем запустите процесс ``syncevolution`` с правильной опцией:"

#: ../../systemdev/calendars.rst:45
msgid ""
"At this point, open the Calendar App (if it was not open already) and "
"manually trigger a synchronisation (note that the Synchronisation action is "
"only available if your device is connected to the internet): all the logs "
"will appear in the terminal."
msgstr ""
"Теперь запустите приложение «Календарь» (если это еще не было сделано) и "
"вручную запустите синхронизацию (обратите внимание, что запустить её можно "
"только в том случае, если устройство подключено к Интернету): все журналы "
"появятся в терминале."

#: ../../systemdev/calendars.rst:47
msgid ""
"In some cases, the output from ``syncevolution`` might not be enough: for "
"example, the raw HTTP data is usually not printed. Should you need to see "
"that as well, then you'll have to modify a configuration file as well. "
"``syncevolution``'s configuration files are located under ``~/.config/"
"syncevolution/``,  in a subdirectory whose name takes the form ``<provider-"
"name>-<account-id>``.  There might be stale directories as well, referring "
"to old accounts which have been since deleted. To find out what accounts are "
"still valid, you can invoke the ``account-console`` tool like this:"
msgstr ""
"В некоторых случаях вывода ``syncevolution`` может быть недостаточно: "
"например, необработанные данные HTTP обычно не показываются. Если они нужны, "
"то придется изменить файл конфигурации. Файлы конфигурации ``syncevolution`` "
"находятся в папке ``~/.config/syncevolution/`` в подкаталоге с названием в "
"формате ``<provider-name>-<account-id>``. Также могут быть устаревшие "
"каталоги, относящиеся к старым учетным записям. Чтобы узнать, какие учетные "
"записи еще действительны,  можно использовать утилиту ``account-console``:"

#: ../../systemdev/calendars.rst:53
msgid ""
"This will print the list of the current valid accounts. Once you've figured "
"out what is the account you are interested in, open the file ``~/.config/"
"syncevolution/<account>/peers/target-config/config.ini`` and set the "
"``loglevel`` variable to a higher value (``11`` seems enough to print all "
"the HTTP traffic):"
msgstr ""
"Будет напечатан список всех действующих учетных записей. Как только станет "
"известно имя нужной учетной записи, откройте файл ``~/.config/syncevolution/"
"<account>/peers/target-config/config.ini`` и поставьте большее значение в "
"переменной ``loglevel`` (цифра ``11`` вполне подойдёт для вывода всего HTTP-"
"трафика):"

#: ../../systemdev/calendars.rst:65
msgid ""
"Note that in order for these changes to take effect, you'll need to restart "
"the ``syncevolution`` process again, as explained above."
msgstr ""
"Чтобы настройки вступили в силу, нужно перезапустить ``syncevolution``, как "
"описывалось выше."

#: ../../systemdev/guides.rst:2
msgid "System Software guides"
msgstr "Инструкции по системным программам"

#: ../../systemdev/guides.rst:4
msgid ""
"These guides will give you general instructions on building and testing your "
"own changes to Ubuntu Touch system software. They are not not an exhaustive "
"reference on everything you will come across during development, but they "
"are a great starting point."
msgstr ""
"Здесь содержатся общие инструкции по созданию и тестированию ваших "
"собственных изменений в системном программном обеспечении Ubuntu Touch. Они "
"не содержат всего, с чем можно столкнуться во время разработки, но они "
"являются хорошим подспорьем."

#: ../../systemdev/guides.rst:8
msgid ""
"If you get stuck at any point while going through this documentation, please "
"contact us for help via `the UBports Forum <https://forums.ubports.com>`_ or "
"your preferred communication medium."
msgstr ""
"Если в какой-то момент у Вас возникли вопросы или трудности, пожалуйста "
"обратитесь на `форум сообщества UBports <https://forums.ubports.com>`_ или в "
"группы Telegram."

#: ../../systemdev/index.rst:2
msgid "System software development"
msgstr "Разработка системного ПО"

#: ../../systemdev/index.rst:4
msgid ""
"This section has various documents which will teach you how to work with the "
"system level of Ubuntu Touch. This includes the Kernel, Android HAL, Ubuntu "
"UI Toolkit, Unity8, and all of the other software that makes Ubuntu Touch "
"what it is."
msgstr ""
"В этом разделе находятся различные документы, в которых описывается работа "
"операционной системы Ubuntu Touch. Тут также рассказывается о работе Ubuntu "
"UI Toolkit, Unity8 и компонентах, которые делают Ubuntu Touch тем, чем она "
"является."

#: ../../systemdev/index.rst:6
msgid ""
"This section does not cover most of the *applications* preinstalled on "
"Ubuntu Touch. See :doc:`/contribute/preinstalled-apps` for more information "
"on those."
msgstr ""
"В этом разделе не описываются уже предустановленные в системе приложения. "
"Для них выделен раздел :doc:`/contribute/preinstalled-apps`."

#: ../../systemdev/kernel-hal.rst:2
msgid "Kernel and hardware abstraction"
msgstr "Абстракции уровня ядра и аппаратного уровня"

#: ../../systemdev/kernel-hal.rst:4
msgid ""
"This page documents the resources and processes to build the kernel and "
"hardware abstraction for UT devices. This document is useful if you would "
"like to work on:"
msgstr ""
"На этой странице описаны ресурсы и процессы для построения абстракции ядра и "
"оборудования для устройств UT. Этот документ полезен, если вы хотите "
"поработать:"

#: ../../systemdev/kernel-hal.rst:6
msgid "A hardware related issue (camera, sensors, radios)"
msgstr "Ошибки, связанные с оборудованием (камера, сенсоры, радио)"

#: ../../systemdev/kernel-hal.rst:7
msgid "A Linux kernel related issue"
msgstr "Ошибки, связанные с работой ядра Linux"

#: ../../systemdev/kernel-hal.rst:8
msgid "An issue related to the system-image upgrade process"
msgstr "Ошибки, возникающие при обновлении образа системы"

#: ../../systemdev/kernel-hal.rst:10
msgid ""
"This document is not useful if you would like to modify :doc:`../contribute/"
"preinstalled-apps` or :doc:`System software <../systemdev/index>`. See the "
"respective documentation for each."
msgstr ""
"Этот документ не поможет, если Вы хотите изменить главы: :doc:`../contribute/"
"preinstalled-apps или: doc:`Системные программы <../systemdev/index>`. "
"Смотрите соответствующие разделы документации."

#: ../../systemdev/kernel-hal.rst:14
msgid ""
"There are a few different groups of Ubuntu Touch devices with respect to how "
"the kernel and hardware abstraction is implemented:"
msgstr ""
"Есть несколько различных групп устройств Ubuntu Touch в зависимости от того, "
"как реализована абстракция ядра и оборудования:"

#: ../../systemdev/kernel-hal.rst:16 ../../systemdev/kernel-hal.rst:29
msgid "Android 5.1 based ports"
msgstr "Портированные версии на основе ОС Android 5.1"

#: ../../systemdev/kernel-hal.rst:17 ../../systemdev/kernel-hal.rst:64
msgid "Halium based ports"
msgstr "Сборки, основанные на Halium"

#: ../../systemdev/kernel-hal.rst:18
msgid "Linux kernel"
msgstr "Ядро Linux"

#: ../../systemdev/kernel-hal.rst:31
msgid ""
"Android 5.1 based ports of Ubuntu Touch consist of the Linux kernel for this "
"device plus a minimal Android system that is used to enable all the "
"hardware. Every device has it's own fork of the Linux kernel. They are all "
"heavily modified for the specific hardware used in that device. These forks "
"are also based off quite old Linux kernel versions."
msgstr ""
"Сборки ОС Ubuntu Touch на базе Android 5.1 состоят из модифицированного "
"специально для устройства ядра Linux и базового набора сервисов Android, "
"которые нужны, чтобы устройство заработало. У каждого устройства есть свой "
"специально модифицированный набор версий ядра Linux. Все они сильно "
"переработаны для работы с оборудованием и комплектующими этого устройства. "
"Эти модифицированные и переработанные сборки построены на устаревших версиях "
"официального ядра Linux."

#: ../../systemdev/kernel-hal.rst:33
msgid ""
"For some devices continuous integration (CI) has been set up to build both "
"the Kernel as well as the Android system. Other devices have to be built "
"manually from their repositories. For a third group of devices, we do not "
"unfortunately, have the full source code available. The Bq and Meizu devices "
"have kernel sources, but the \"Android device tree\" is not publicly "
"available. The manufacturers of these devices provided binary builds instead."
msgstr ""
"Для некоторых устройств настроен механизм непрерывной интеграции (CI) для "
"создания сборок ядер и системы Android. Для некоторых устройств сборки нужно "
"формировать нужно вручную из репозиториев. Для многих устройств, к "
"сожалению, в свободном доступе нет исходных кодов ядер системы и драйверов."
"Компании Bq и Meizu свободно распространяют исходные коды ядра, но файл "
"«Android device tree» не является общедоступным. Вместо него, эти компании "
"предлагают уже откомпилированные сборки ОС Android."

#: ../../systemdev/kernel-hal.rst:37
msgid "With CI"
msgstr "С помощью системы CI"

#: ../../systemdev/kernel-hal.rst:36
msgid "Nexus 5 (hammerhead)"
msgstr "Nexus 5 (кодовое название hammerhead)"

#: ../../systemdev/kernel-hal.rst:37
msgid "OnePlus One (bacon)"
msgstr "OnePlus One (кодовое название bacon)"

#: ../../systemdev/kernel-hal.rst:38
msgid "Fairphone 2 (FP2)"
msgstr "Fairphone 2 (кодовое название FP2)"

#: ../../systemdev/kernel-hal.rst:40
msgid "Manual builds"
msgstr "Ручные сборки"

#: ../../systemdev/kernel-hal.rst:40
msgid "Nexus 4 (mako)"
msgstr "Nexus 4 (кодовое название mako)"

#: ../../systemdev/kernel-hal.rst:41
msgid "Nexus 7 2013 Wifi (flo)"
msgstr "Nexus 7 2013 Wifi (кодовое название flo)"

#: ../../systemdev/kernel-hal.rst:49
msgid "(Partial) Binary builds"
msgstr "(Частично) Откомпилированные сборки"

#: ../../systemdev/kernel-hal.rst:43
msgid ""
"Bq Aquaris E4.5 (`krillin <https://github.com/ubports/kernel_krillin>`_)"
msgstr ""
"Bq Aquaris E4.5 (`кодовое название krillin <https://github.com/ubports/"
"kernel_krillin>`_)"

#: ../../systemdev/kernel-hal.rst:44
msgid ""
"Bq Aquaris E5 (`vegetahd <https://github.com/ubports/kernel_vegetahd>`_)"
msgstr ""
"Bq Aquaris E5 (`кодовое название vegetahd <https://github.com/ubports/"
"kernel_vegetahd>`_)"

#: ../../systemdev/kernel-hal.rst:45
msgid ""
"Bq Aquaris M10 HD (`cooler <https://github.com/ubports/kernel_bq_m10>`_)"
msgstr ""
"Bq Aquaris M10 HD (`кодовое название cooler <https://github.com/ubports/"
"kernel_bq_m10>`_)"

#: ../../systemdev/kernel-hal.rst:46
msgid "Bq Aquaris M10 FHD (frieza)"
msgstr "Bq Aquaris M10 FHD (кодовое название frieza)"

#: ../../systemdev/kernel-hal.rst:47
msgid "Meizu MX4 (`arale <https://github.com/ubports/kernel_arale>`_)"
msgstr ""
"Meizu MX4 (`кодовое название arale <https://github.com/ubports/"
"kernel_arale>`_)"

#: ../../systemdev/kernel-hal.rst:48
msgid "Meizu Pro 5 (`turbo <https://github.com/ubports/kernel_turbo>`_)"
msgstr ""
"Meizu Pro 5 (`кодовое название turbo <https://github.com/ubports/"
"kernel_turbo>`_)"

#: ../../systemdev/kernel-hal.rst:49
msgid "Nexus 7 2013 GSM (deb)"
msgstr "Nexus 7 2013 GSM (кодовое название deb)"

#: ../../systemdev/kernel-hal.rst:51
msgid ""
"Detailed steps for the three CI enabled devices can be found under  :doc:"
"`HAL for Nexus 5, OnePlus One, and Fairphone 2 <ubp-5.1>`."
msgstr ""
"Подробные инструкции для устройств под подготовке сборок  с поддержкой CI "
"можно найти в главе:doc:`HAL для Nexus 5, OnePlus One и Fairphone 2 "
"<ubp-5.1>`."

#: ../../systemdev/kernel-hal.rst:53
msgid ""
"For the Nexus 7 2013 Wifi (flo) head  over to the `Community Ports "
"repository for flo <https://gitlab.com/ubports/community-ports/flo>`_."
msgstr ""
"Для смартфона Nexus 7 2013 Wifi (flo) можно найти CI-сборку в репозитории "
"`Community Ports repository for flo <https://gitlab.com/ubports/community-"
"ports/flo> `_."

#: ../../systemdev/kernel-hal.rst:55
msgid ""
"The port for the Nexus 7 2013 GSM (deb) was created by a community member. "
"Unfortunately those repositories have disappeared over time. So this build "
"also falls into the group of prebuilt binaries."
msgstr ""
"Сборка для смартфона Nexus 7 2013 GSM (deb) создавалась одним из участников "
"сообщества. К сожалению, со временем эти репозитории были утрачены. Остались "
"только откомпилированные файлы и образы системы."

#: ../../systemdev/kernel-hal.rst:57
msgid "Todo"
msgstr "Планы по развитию"

#: ../../systemdev/kernel-hal.rst:58
msgid "Document the process for Nexus 4 (mako)"
msgstr "Подготовить инструкции для смартфона Nexus 4 (mako)"

#: ../../systemdev/kernel-hal.rst:66
msgid ""
"Newer ports to Android devices are based on `Halium <https://docs.halium."
"org>`_. In some aspects Halium is similar to the 5.1 based ports:"
msgstr ""
"Новые сборки ОС для устройств Android построены на `Halium <https://docs."
"halium.org>` _. Во многом сборки на основе Halium похожи на сборки на основе "
"Android 5.1:"

#: ../../systemdev/kernel-hal.rst:68
msgid ""
"It also uses the device specific fork of the Linux kernel provided by the "
"manufacturer."
msgstr ""
"Тут также используются специально модифицированные для устройства версии "
"ядра Linux, подготовленные производителем."

#: ../../systemdev/kernel-hal.rst:69
msgid "It also uses a minimal Android system to enable some hardware."
msgstr ""
"Некоторые компоненты Android нужны для корректной работы аппаратной части "
"смартфона."

#: ../../systemdev/kernel-hal.rst:71
msgid ""
"However, Halium permits a more generic way of porting to Android devices. "
"This allows the work to be shared between multiple projects that bring "
"different flavours of Linux systems to Android devices. Halium ports are "
"also based on newer Android versions 7.1 and above."
msgstr ""
"Однако Halium позволяет создавать универсальные сборки для Android-"
"устройств. Это позволяет распределять работу между несколькими проектами, "
"которые портированием различных проектов на основе ОС Linux на устройства "
"Android. Сборки Halium также основаны на более новых версиях Android 7.1 и "
"выше."

#: ../../systemdev/kernel-hal.rst:73
msgid ""
"Some examples of Halium ports are those for Sony Xperia X and Oneplus 3. "
"Basically all devices that are listed on `devices.ubuntu-touch.io <https://"
"devices.ubuntu-touch.io>`_, expect those explicitly mentioned above as 5.1, "
"or below as Linux based ports."
msgstr ""
"Хорошие примеры сборок на основе Halium - сборки ОС для Sony Xperia X и "
"Oneplus 3. Практически все устройства, перечисленные на страничке `devices."
"ubuntu-touch.io <https://devices.ubuntu-touch.io>`_, работают на сборках на "
"базе ОС Linux, кроме нескольких смартфонов (о них рассказывалось выше, "
"работают на основе Android 5.1)."

#: ../../systemdev/kernel-hal.rst:75
msgid ""
"All new ports of UT to Android devices should follow the Halium process. "
"Further details can be found under :doc:`Halium porting <../porting/"
"introduction/index>`"
msgstr ""
"Все новые сборки UT для Android-устройств должны формироваться на базе "
"Halium. Более подробную информацию можно найти в разделе :doc:`Создание "
"прошивок Halium <../porting/index>`"

#: ../../systemdev/kernel-hal.rst:78
msgid "Linux based ports"
msgstr "Сборки на базе ОС Linux"

#: ../../systemdev/kernel-hal.rst:80
msgid ""
"Linux based port refers to devices where a Linux kernel is used without any "
"Android parts. The following devices are in this group:"
msgstr ""
"Сборки на базе ОС Linux выпускаются для устройств, на которых используется "
"ядро Linux без каких-либо компонентов Android. В эту группу входят следующие "
"устройства:"

#: ../../systemdev/kernel-hal.rst:82
msgid "`Desktop PC (x86) <https://devices.ubuntu-touch.io/device/x86/>`_"
msgstr "`Настольные ПК (x86) <https://devices.ubuntu-touch.io/device/x86/>`_"

#: ../../systemdev/kernel-hal.rst:83
msgid "Librem 5 (librem5)"
msgstr "Librem 5 (кодовое название librem5)"

#: ../../systemdev/kernel-hal.rst:84
msgid "Pinebook (pinebook)"
msgstr "Pinebook (кодовое название pinebook)"

#: ../../systemdev/kernel-hal.rst:85
msgid ":doc:`Pinephone (pinephone) <kernel-pinephone>`"
msgstr ":doc:`Pinephone (кодовое название pinephone) <kernel-pinephone>`"

#: ../../systemdev/kernel-hal.rst:86
msgid ":doc:`Pinetab (pinetab) <kernel-pinephone>`"
msgstr ":doc:`Pinetab (кодовое название pinetab) <kernel-pinephone>`"

#: ../../systemdev/kernel-hal.rst:87
msgid ""
"`Raspberry Pi (rpi) <https://gitlab.com/ubports/community-ports/"
"raspberrypi>`_ (see also this `blog post <https://ubports.com/blog/ubports-"
"blog-1/post/raspberry-pi-266>`_)"
msgstr ""
"`Raspberry Pi (rpi) <https://gitlab.com/ubports/community-ports/"
"raspberrypi>`_ (также прочитайте `эту заметку <https://ubports.com/blog/"
"ubports-blog-1/post/raspberry-pi-266>`_)"

#: ../../systemdev/kernel-pinephone.rst:2
msgid "PinePhone and PineTab kernel"
msgstr "PinePhone и ядро PineTab"

#: ../../systemdev/kernel-pinephone.rst:4
msgid ""
"This document describes how to build and install the PinePhone or PineTab "
"kernel. First the recovery system is explained. Then the actual building and "
"installation. At the bottom there are some references."
msgstr ""
"В этом документе описывается, как собрать и установить ядро для устройств "
"PinePhone или PineTab. Сначала рассказывается системе recovery. Затем про "
"подготовку сборки ОС и установку. В конце документа приводятся справочные "
"материалы."

#: ../../systemdev/kernel-pinephone.rst:7
msgid "Recovery"
msgstr "Recovery (Система восстановления)"

#: ../../systemdev/kernel-pinephone.rst:9
msgid ""
"The Ubuntu Touch image contains a `recovery <https://github.com/ubports/"
"jumpdrive>`_ boot mode based on \"jumpdrive\". To get into the recovery "
"press and hold the power and volume-up buttons until the led turns on."
msgstr ""
"Образ Ubuntu Touch содержит режим загрузки `recovery <https://github.com/"
"ubports/jumpdrive>`_, основанный на \"jumpdrive\". Чтобы попасть в recovery, "
"нажмите и удерживайте кнопки питания и увеличения громкости, пока не "
"загорится светодиод."

#: ../../systemdev/kernel-pinephone.rst:11
msgid ""
"The recovery presents the PinePhone as a network device over USB and runs a "
"telnet server. When you connect the PinePhone to your desktop via USB, you "
"will see the rndis device show up in your desktop's ``dmesg``::"
msgstr ""
"Режим Recovery позволяет подключить PinePhone как сетевое устройство через "
"USB, а так же использовать подключение через telnet-сервер. Когда PinePhone "
"подключается к настольному ПК через USB, можно увидеть, что устройство rndis "
"отображается в ``dmesg`` на настольном ПК::"

#: ../../systemdev/kernel-pinephone.rst:19
msgid "You can log in to the recovery system with ``telnet 172.16.42.1``."
msgstr "В систему recovery можно зайти командой ``telnet 172.16.42.1``."

#: ../../systemdev/kernel-pinephone.rst:21
msgid ""
"The recovery also exposes the eMMC and the microSD card over USB. Assuming "
"you have already installed Ubuntu Touch on your microSD card you will see "
"something like this in your desktop's ``dmesg``::"
msgstr ""
"В режиме \"Recovery\" также через USB доступны eMMC и карта microSD. Если вы "
"уже установили Ubuntu Touch на карту microSD, то на десктопе будет примерно "
"такая картинка `` dmesg``::"

#: ../../systemdev/kernel-pinephone.rst:35
msgid ""
"The eMMC with jumpdrive contains two partitions: pmOS_boot and pmOS_root."
msgstr "На карте eMMC с jumpdrive есть два раздела: pmOS_boot и pmOS_root."

#: ../../systemdev/kernel-pinephone.rst:37
msgid ""
"The microSD card with Ubuntu Touch contains 10 partitions: loader, scr, "
"persist, boot_a, boot_b, recovery_a, recovery_b, cache, system and userdata. "
"To update the kernel you want to mount boot_a. Check which device is the "
"SDcard in your OS and mount boot_a. In the example above this is sdc4. "
"Inside that partition you'll see the kernel vmlinuz and related files: "
"``config-5.6.0-pine64`` ``dtb`` ``initrd.img`` ``modules/`` ``System."
"map-5.6.0-pine64`` ``vmlinuz``."
msgstr ""
"Карта microSD с Ubuntu Touch есть 10 разделов: loader, scr, persist, boot_a, "
"boot_b, recovery_a, recovery_b, cache, system и userdata. Чтобы обновить "
"ядро, нужно смонтировать раздел boot_a. Проверьте, какое устройство является "
"SD-картой в системе, и смонтируйте раздел boot_a. В приведенном выше примере "
"это устройство sdc4. На него записано ядро vmlinuz и связанные с ним файлы: "
"`` config-5.6.0-pine64`` `dtb`` `initrd.img``` `modules/` `` System."
"map-5.6 .0-pine64`` ``vmlinuz``."

#: ../../systemdev/kernel-pinephone.rst:40
msgid "Building the kernel"
msgstr "Сборка ядра"

#: ../../systemdev/kernel-pinephone.rst:42
msgid ""
"To install dependencies, get the `source code <https://gitlab.com/pine64-org/"
"linux/-/tree/pine64-kernel-ubports>`_, configure and build the kernel, run "
"the following::"
msgstr ""
"Чтобы установить файлы зависимостей, скачайте исходный код `<https://gitlab."
"com/pine64-org/linux/-/tree/pine64-kernel-ubports>` _, настройте и соберите "
"ядро, выполните следующую команду::"

#: ../../systemdev/kernel-pinephone.rst:51
msgid "Install the kernel"
msgstr "Установка ядра системы"

#: ../../systemdev/kernel-pinephone.rst:53
msgid ""
"Boot into recovery and mount boot_a. Make a backup if needed. Then copy over "
"your newly built kernel and if needed modules::"
msgstr ""
"Загрузитесь в recovery и смонтируйте раздел boot_a. При необходимости "
"сделайте резервную копию. Затем скопируйте новое ядро и, если необходимо, "
"модули:"

#: ../../systemdev/kernel-pinephone.rst:61
msgid ""
"Afterwards be sure to unmount the partition so it is cleanly written. Now "
"you can reboot the PinePhone. Once booted, you can verify that the kernel "
"has been successfully updated by checking the build date with ``uname -a`` "
"on the device."
msgstr ""
"После этого не забудьте размонтировать раздел, чтобы он был чистым. Теперь "
"можно перезагрузить PinePhone. После загрузки можно увидеть, что ядро было "
"успешно обновлено с помощью команды ``uname -a``."

#: ../../systemdev/kernel-pinephone.rst:64
#: ../../systemdev/mms-infrastructure.rst:53
msgid "References"
msgstr "Справка и помощь"

#: ../../systemdev/kernel-pinephone.rst:66
msgid ""
"`Pine64 wiki <https://wiki.pine64.org/index.php/PinePhone>`_ has general HW "
"info, pointers to other PinePhone OS projects, HW revisions, serial UART "
"over headphone jack (also in their store), spec sheets, known HW issues, etc"
msgstr ""
"В `Pine64 wiki <https://wiki.pine64.org/index.php/PinePhone>`_ есть общая "
"информация об аппаратном обеспечении, ссылки на другие проекты ОС PinePhone, "
"схемы подключения последовательного интерфейса UART через разъем для "
"наушников (готовое устройство доступно в официальном магазине), справочные "
"таблицы со спецификациями, известные проблемы с оборудованием и так далее"

#: ../../systemdev/kernel-pinephone.rst:67
msgid ""
"`Main UBports repository <https://gitlab.com/ubports/community-ports/"
"pinephone>`_ has instructions for how to install UT images on the PinePhone"
msgstr ""
"В `Основном репозиторий UBports <https://gitlab.com/ubports/community-ports/"
"pinephone>`_ есть инструкция по установке образов UT на PinePhone"

#: ../../systemdev/kernel-pinephone.rst:68
msgid ""
"`UBPorts issue tracker <https://gitlab.com/ubports/community-ports/"
"pinephone/-/issues>`_"
msgstr ""
"`Баг-трекер UBPorts <https://gitlab.com/ubports/community-ports/pinephone/-/"
"issues>`_"

#: ../../systemdev/kernel-pinephone.rst:69
msgid ""
"`PinePhone forum from Pine64 <https://forum.pine64.org/forumdisplay.php?"
"fid=120>`_ is where many other communities gather that work with the "
"PinePhone"
msgstr ""
"`Официальный форум PinePhone <https://forum.pine64.org/forumdisplay.php?"
"fid=120>` _ - это место, где общаются многие группы пользователей и "
"поклонников PinePhone"

#: ../../systemdev/kernel-pinephone.rst:70
msgid ""
"`sunxi <https://linux-sunxi.org>`_ community is where much of the "
"`mainlining effort <https://linux-sunxi.org/Linux_mainlining_effort>`_ for "
"Allwinner devices including the PinePhone takes place. Note their `build "
"instructions <https://linux-sunxi.org/Mainline_Kernel_Howto>`_."
msgstr ""
"В сообществе `sunxi <https://linux-sunxi.org>` _ занимаются `адаптацией ядра "
"<https://linux-sunxi.org/Linux_mainlining_effort>` _ для устройств "
"Allwinner, включая PinePhone. Обратите внимание на их инструкции по сборке "
"<https://linux-sunxi.org/Mainline_Kernel_Howto> `_."

#: ../../systemdev/kernel-pinephone.rst:71
msgid ""
"`Crust firmware <https://github.com/crust-firmware/crust>`_ implements a "
"deep sleep state and runs on a dedicated System Control Processor outside "
"the main CPU and DRAM."
msgstr ""
"`Прошивка Crust <https://github.com/crust-firmware/crust>` _ реализует "
"состояние глубокого сна и работает на выделенном процессоре управления "
"системой (System Control Processor) вне основного процессора и DRAM."

#: ../../systemdev/mms-infrastructure.rst:2
msgid "MMS infrastructure components"
msgstr "Компоненты инфраструктуры MMS"

#: ../../systemdev/mms-infrastructure.rst:4
msgid ""
"`oFono <https://github.com/ubports/ofono>`_ - responsible for providing the "
"data context used to transfer MMS data (image/music). It also propagates wap "
"push notifications to upper layers."
msgstr ""
"`oFono <https://github.com/ubports/ofono>`_ отвечает за предоставление "
"контекста данных, используемого для передачи данных MMS (изображение/"
"музыка). Также передает push-уведомления wap на верхние уровни."

#: ../../systemdev/mms-infrastructure.rst:6
msgid ""
"`nuntium <https://github.com/ubports/nuntium>`_ - daemon that listens to wap "
"push notifications and activates the MMS data context on ofono on demand to "
"send/receive MMS's. It provides a local store."
msgstr ""
"`nuntium <https://github.com/ubports/nuntium>`_ - демон, который "
"прослушивает push-уведомления wap и активирует контекст данных MMS в "
"приложении ofono по запросу, чтобы отправлять/получать MMS. Обеспечивает "
"локальное хранилище."

#: ../../systemdev/mms-infrastructure.rst:8
msgid ""
"`telepathy-ofono <https://github.com/ubports/telepathy-ofono>`_  - talks to "
"nuntium through dbus and is used to both relay messages from phone-app to "
"nuntium and inject into the telepathy infrastructure MMS's received by "
"nuntium as `multi-part messages <http://telepathy.freedesktop.org/spec/"
"Channel_Interface_Messages.html#Mapping:Message_Part>`_. This component also "
"marks messages as read and delete successfully received messages from "
"nuntium."
msgstr ""
"`telepathy-ofono <https://github.com/ubports/telepathy-ofono>`-  компонент "
"связан с nuntium  через протокол Dbus. Используется как для ретрансляции "
"сообщений из телефонного приложения в nuntium, так и для ввода в "
"инфраструктуру  MMS, полученных nuntium как `сообщения, состоящие из "
"нескольких частей <http://telepathy.freedesktop.org/spec/"
"Channel_Interface_Messages.html#Mapping:Message_Part>`_. Этот компонент "
"также отмечает сообщения как \"прочитанные\" и удаляет успешно полученные "
"сообщения из nuntium."

#: ../../systemdev/mms-infrastructure.rst:10
msgid ""
"`history-service <https://github.com/ubports/history-service>`_ - this "
"component watches the telepathy communication and store the messages "
"received by telepathy-ofono or sent by messaging-app."
msgstr ""
"`history-service <https://github.com/ubports/history-service>`_ - этот "
"компонент следит за работой программы telepathy и хранит сообщения, "
"получаемые telepathy-ofono и и отправляемые программой messaging-app."

#: ../../systemdev/mms-infrastructure.rst:12
msgid ""
"`telephony-service-approver <https://github.com/ubports/telephony-"
"service>`_  - this component is in charge of adding SMS's to the messaging "
"menu and to display incoming text notifications."
msgstr ""
"`telephony-service-approver <https://github.com/ubports/telephony-service>`_ "
"- этот компонент отвечает за добавление SMS к меню сообщений и отображение "
"входящих текстовых уведомлений."

#: ../../systemdev/mms-infrastructure.rst:14
msgid ""
"`messaging-app <https://github.com/ubports/messaging-app>`_ - It renders "
"MMS's in the conversation view and also provides a way to attach media files "
"to a message in order to send an MMS."
msgstr ""
"`messaging-app <https://github.com/ubports/messaging-app>`_ отображает MMS в "
"режиме разговора, а также позволяет прикреплять мультимедийные файлы к "
"сообщению для отправки в MMS."

#: ../../systemdev/mms-infrastructure.rst:17
msgid "General Description"
msgstr "Общее описание"

#: ../../systemdev/mms-infrastructure.rst:20
msgid "Incoming MMS"
msgstr "Входящее сообщение MMS"

#: ../../systemdev/mms-infrastructure.rst:22
msgid ""
"An MMS WAP push notification is received by ofono and propagated to nuntium"
msgstr "Ofono получает MMS WAP push-уведомление и передает его nuntium"

#: ../../systemdev/mms-infrastructure.rst:23
msgid ""
"nuntium enables the MMS context in ofono, retrieves the content from `MMSC "
"<https://en.wikipedia.org/wiki/Multimedia_Messaging_Service>`_ and "
"propagates the new MMS to upper layers."
msgstr ""
"nuntium включает MMS context в приложении ofono, извлекает контент из `MMSC "
"<https://en.wikipedia.org/wiki/Multimedia_Messaging_Service>`_ и передаёт "
"новое MMS-сообщение на верхние уровни."

#: ../../systemdev/mms-infrastructure.rst:24
msgid "A new MMS arrives at telepathy-ofono."
msgstr "Новое MMS-сообщение поступает в приложение telepathy-ofono."

#: ../../systemdev/mms-infrastructure.rst:25
msgid ""
"If automatic retrieval is not enabled or not available at the moment, a "
"control message is sent to the app"
msgstr ""
"Если автоматическая переадресация не включена или недоступна в данный "
"момент, в приложение отправляется системное сообщение"

#: ../../systemdev/mms-infrastructure.rst:26
msgid "messaging-app request the retrieval of the message to telepathy-ofono."
msgstr ""
"Компонент messaging-app запрашивает передачу сообщения в telepathy-ofono."

#: ../../systemdev/mms-infrastructure.rst:27
msgid ""
"After the message is retrieved from MMSC, it is delivered to the apps via "
"normal text channel in a multi-part message (one text/html part, one text/"
"plain part and one part per attachment). If the control message was "
"previously delivered, this real message have a flag telling it is a "
"replacement for the previous message."
msgstr ""
"После поступления сообщения из MMSC, оно передается в приложения через "
"обычный текстовый канал в сообщении, состоящем из нескольких частей (одна "
"текстовая/HTML-часть, одна текстовая обычная часть и одна часть для каждого "
"вложения). Если системное сообщение было доставлено ранее, у этого реального "
"сообщения есть флаг, указывающий, что оно заменяет предыдущее сообщение."

#: ../../systemdev/mms-infrastructure.rst:28
msgid ""
"The new message history service saves the attachment parts to disk, and "
"replaces the paths on text/html to point to the new attachment locations. It "
"also saves a flag and the content type."
msgstr ""
"History service сохраняет новое сообщение в виде вложений на диск и меняет "
"пути файлов в text/html части, чтобы они указывали новые папки. Также "
"сохраняется флаг сообщения и тип контента."

#: ../../systemdev/mms-infrastructure.rst:31
msgid "Outgoing MMS"
msgstr "Исходящее MMS-сообщение"

#: ../../systemdev/mms-infrastructure.rst:33
msgid ""
"messaging-app creates a new text channel in telepathy-ofono, or uses an "
"existing channel."
msgstr ""
"Компонент messaging-app создаёт новый текстовый канал в telepathy-ofono, или "
"использует уже существующий канал."

#: ../../systemdev/mms-infrastructure.rst:34
msgid "messaging-app sends the MMS as a multi-part message to telepathy-ofono"
msgstr ""
"messaging-app отправляет MMS-сообщение как сообщение, состоящее из "
"нескольких частей в telepathy-ofono"

#: ../../systemdev/mms-infrastructure.rst:35
msgid ""
"nuntium enables the MMS context in ofono, sends the MMS through MMSC and "
"signals the upper layers about the current status (sent, draft)."
msgstr ""
"nuntium активирует MMS context в ofono, отправляет MMS через MMSC и "
"сигнализирует на верхние уровни о текущем статусе (оправлено или сохранен "
"черновик)."

#: ../../systemdev/mms-infrastructure.rst:36
msgid "telepathy-ofono sends signals to applications with delivery reports."
msgstr "telepathy-ofono отправляет сигнал приложению отчеты об отправке."

#: ../../systemdev/mms-infrastructure.rst:39
msgid "Incoming MMS diagram"
msgstr "Диаграмма \"Входящее MMS-сообщение\""

#: ../../systemdev/mms-infrastructure.rst:None
msgid "incoming-MMS.png"
msgstr "incoming-MMS.png"

#: ../../systemdev/mms-infrastructure.rst:46
msgid "Outgoing MMS diagram"
msgstr "Диаграмма \"Исходящее MMS-сообщение\""

#: ../../systemdev/mms-infrastructure.rst:None
msgid "outgoing-MMS.png"
msgstr "outgoing-MMS.png"

#: ../../systemdev/mms-infrastructure.rst:55
msgid "initial source: https://wiki.ubuntu.com/Touch/Specs/MMSInfrastructure"
msgstr ""
"Исходный документ: https://wiki.ubuntu.com/Touch/Specs/MMSInfrastructure"

#: ../../systemdev/online-accounts.rst:2
msgid "Working on the Online Accounts subsystem"
msgstr "Работа над подсистемой онлайн-аккаунтов (учётных записей)"

#: ../../systemdev/online-accounts.rst:4
msgid "The Online Accounts subsystem consists of the following components:"
msgstr "Подсистема онлайн-аккаунтов состоит из следующих компонентов:"

#: ../../systemdev/online-accounts.rst:6
msgid ""
"The `Accounts UI <https://github.com/ubports/ubuntu-system-settings-online-"
"accounts>`_: this provides the user facing components and the base classes "
"for the whole Online Accounts feature. More in detail, you will find these "
"subdirectories:"
msgstr ""
"`Accounts UI <https://github.com/ubports/ubuntu-system-settings-online-"
"accounts>`_: здесь предоставляются пользовательские компоненты и базовые "
"классы для всей подсистемы онлайн-аккаунтов. Более подробно смотрите "
"подкаталоги:"

#: ../../systemdev/online-accounts.rst:8
msgid ""
"``click-hooks``: the programs run when a :ref:`Click application <click>` "
"making use of the Online Accounts functionality is installed or removed"
msgstr ""
"``click-hooks``: программа запускается, когда устанавливается или удаляется :"
"ref:`приложение Click <click>`, позволяющее использовать функционал онлайн-"
"аккаунтов"

#: ../../systemdev/online-accounts.rst:9
msgid ""
"``client``: the library that client applications can use to request access "
"to an account"
msgstr ""
"``client``: библиотека, которую клиентские приложения могут использовать для "
"запроса доступа к учетной записи"

#: ../../systemdev/online-accounts.rst:10
msgid ""
"``online-accounts-service``: the main service, implementing the logic to "
"process client requests; it has no UI, but is able to attach the ``online-"
"accounts-ui`` on top of an application's UI"
msgstr ""
"``online-accounts-service``:основной сервис, реализующий логику обработки "
"клиентских запросов; у него нет пользовательского интерфейса, но он может "
"прикрепить \"online-accounts-ui\" поверх пользовательского интерфейса "
"приложения"

#: ../../systemdev/online-accounts.rst:11
msgid ""
"``online-accounts-ui``: the user interface which pops up when applications "
"interact with online accounts (for example, the dialog that appears when an "
"application requests access to an account)"
msgstr ""
"``online-accounts-ui``: пользовательский интерфейс, который появляется, "
"когда приложения взаимодействуют с онлайн-аккаунтами (например, диалоговое "
"окно, которое появляется, когда приложение запрашивает доступ к аккаунту)"

#: ../../systemdev/online-accounts.rst:12
msgid ""
"``plugins``: the base classes and QML elements that account plugins can use "
"in their implementation"
msgstr ""
"``plugins``: базовые классы и элементы QML, которые могут использовать в "
"своей реализации плагины аккаунтов"

#: ../../systemdev/online-accounts.rst:13
msgid ""
"``system-settings-plugin``: the user interface for the Accounts panel in the "
"System Settings application"
msgstr ""
"``system-settings-plugin``: пользовательский интерфейс для панели Аккаунтов "
"в приложении \"Системные настройки\""

#: ../../systemdev/online-accounts.rst:15
msgid ""
"The `Account plugins <https://github.com/ubports/account-plugins>`_ define "
"the available account providers and implement the user interface and logic "
"for creating the accounts"
msgstr ""
"`Плагины учётной записи (Account plugins) <https://github.com/ubports/"
"account-plugins>`_ задают провайдеров учетных записей и реализуют "
"пользовательский интерфейс и логику для создания учетных записей"

#: ../../systemdev/online-accounts.rst:16
msgid ""
"A set of components from the `Accounts&SSO project <https://gitlab.com/"
"accounts-sso>`_: while development happens in the upstream projects, the "
"UBports forks add the Debian packaging. These projects are:"
msgstr ""
"Набор компонентов из `проекта Accounts&SSO <https://gitlab.com/accounts-"
"sso>`_: пока разработка происходит в этих основных проектах, сообщество "
"UBports делает форк соответствующих пакетов Debian. Эти проекты:"

#: ../../systemdev/online-accounts.rst:18
msgid ""
"`libaccounts-glib <https://github.com/ubports/libaccounts-glib>`_: account "
"management API for C/GLib applications"
msgstr ""
"`libaccounts-glib <https://github.com/ubports/libaccounts-glib>`_: API "
"управления учетными записями для приложений на C/GLib"

#: ../../systemdev/online-accounts.rst:19
msgid ""
"`libsignon-glib <https://github.com/ubports/libsignon-glib>`_: "
"authentication API for C/GLib applications"
msgstr ""
"`libsignon-glib <https://github.com/ubports/libsignon-glib>`_: API "
"аутентификации для приложений C/GLib"

#: ../../systemdev/online-accounts.rst:20
msgid ""
"`libaccounts-qt <https://github.com/ubports/libaccounts-qt>`_: account "
"management API for Qt applications"
msgstr ""
"`libaccounts-qt <https://github.com/ubports/libaccounts-qt>`_: API "
"управления учётными записями для приложений на Qt"

#: ../../systemdev/online-accounts.rst:21
msgid ""
"`signond <https://github.com/ubports/signon>`_: authentication daemon, "
"exposing a D-Bus API. It includes the ``libsignon-qt`` library, which offers "
"an authentication API for Qt applications"
msgstr ""
"`signond <https://github.com/ubports/signon>`_: демон аутентификации, "
"открывающий API D-Bus. Содержит библиотеку ``libsignon-qt``, предлагающую "
"API аутентификации для приложений на Qt"

#: ../../systemdev/online-accounts.rst:22
msgid ""
"`signon-plugin-oauth2 <https://github.com/ubports/signon-plugin-oauth2>`_: "
"OAuth (1.0 and 2.0) plugin for signond"
msgstr ""
"`signon-plugin-oauth2 <https://github.com/ubports/signon-plugin-oauth2>`_:"
"плагин OAuth (версии 1.0 и 2.0) для signond"

#: ../../systemdev/online-accounts.rst:23
msgid ""
"`accounts-qml-module <https://github.com/ubports/accounts-qml-module>`_ "
"authentication and account management API, for QML applications (can be used "
"when implementing account plugins, too)"
msgstr ""
"`accounts-qml-module <https://github.com/ubports/accounts-qml-module>`_ API "
"аутентификации и управления учётными записями для приложений QML (может "
"также использоваться при реализации плагинов учетной записи)"

#: ../../systemdev/online-accounts.rst:25
msgid ""
"The `account-polld service <https://github.com/ubports/account-polld>`_, "
"which runs in the background and checks every 5 minutes for new account "
"activity (the interval is decided by the `Ubuntu Push service <https://"
"github.com/ubports/ubuntu-push>`_)"
msgstr ""
"Сервис `account-polld service <https://github.com/ubports/account-polld>`_, "
"который работает в фоновом режиме и каждые 5 минут проверяет активность "
"новой учетной записи (интервал определяется сервисом `Ubuntu Push service "
"<https://github.com/ubports/ubuntu-push>`_)"

#: ../../systemdev/online-accounts.rst:26
msgid ""
"The `account-polld-plugins-go <https://github.com/ubports/account-polld-"
"plugins-go>`_, a repository of plugins for the ``account-polld`` service. "
"The plugins in this repository are written in Go, but plugins can be written "
"in whatever language and can reside in different repositories"
msgstr ""
"Сервис `account-polld-plugins-go <https://github.com/ubports/account-polld-"
"plugins-go>`_, репозиторий плагинов для сервиса ``account-polld``. Плагины в "
"этом репозитории написаны на Go, но плагины могут быть написаны на любом "
"языке и могут находиться в разных репозиториях"

#: ../../systemdev/online-accounts.rst:33
msgid "Account creation issues"
msgstr "Ошибки, связанные с созданием учётной записи"

#: ../../systemdev/online-accounts.rst:35
msgid ""
"It may happen that the account creation fails, either due to communication "
"issues with the remote server, or to some bug in the account plugin itself "
"(this can easily happen while developing a new plugin). In order to debug "
"such situations, you can open a terminal (it's easier if done from a remote "
"shell -- you can gain a shell on the device using :doc:`/userguide/"
"advanceduse/adb` or :doc:`/userguide/advanceduse/ssh`) and start the "
"``online-accounts-service`` in debug mode:"
msgstr ""
"Может случиться так, что создание учетной записи не удастся, либо из-за "
"проблем со связью с удаленным сервером, либо из-за какой-либо ошибки в самом "
"плагине учетной записи (это легко может произойти при разработке нового "
"плагина). Для отладки таких ситуаций можно открыть терминал (это проще, если "
"сделать это из remote shell - на устройстве это можно сделать с помощью :doc:"
"`/userguide/advanceduse/adb` или :doc:`/userguide/advanceduse/ssh`) и "
"запустить в режиме отладки ``online-accounts-service``:"

#: ../../systemdev/online-accounts.rst:42
msgid ""
"If you believe that the issue might be caused by some errors in the "
"authentication phase, you can also enabled extensive logging by ``signond`` "
"like this:"
msgstr ""
"Если вы считаете, что проблема может быть вызвана некоторыми ошибками на "
"этапе аутентификации, вы также можете включить расширенное ведение логов с "
"помощью ``signond``:"

#: ../../systemdev/online-accounts.rst:50
msgid ""
"At this point, repeat the operation that was failing, and you'll get all "
"debugging output printed on the console."
msgstr ""
"На этом этапе повторите операцию, в которой произошел сбой, и Вы получите "
"все выходные данные отладки, выведенные в консоль."

#: ../../systemdev/qtmir-qtubuntu.rst:2
msgid "QtMir and QtUbuntu"
msgstr "QtMir и QtUbuntu"

#: ../../systemdev/qtmir-qtubuntu.rst:4
msgid ""
"`QtMir`_ and `QtUbuntu`_ are `Qt Platform Abstractions`_ (QPAs) for the "
"Ubuntu Touch platform. QtMir can be thought of as a server for Unity8 while "
"QtUbuntu is used for client applications. Each of them allows their "
"respective domains to use Qt's high-level abstractions of surfaces, windows, "
"controls, and more, without worrying about the underlying operating system."
msgstr ""
"`QtMir`_ и `QtUbuntu`_ являются `Qt Platform Abstractions`_ (QPAs, "
"абстракции Qt-платформы) для платформы Ubuntu Touch. QtMir можно "
"рассматривать как сервер для Unity8, тогда как QtUbuntu используется для "
"клиентских приложений. Каждый из них позволяет своим доменам использовать "
"высокоуровневые абстракции Qt окон, элементов управления и так далее, не "
"беспокоясь о базовой операционной системе."

#: ../../systemdev/qtmir-qtubuntu.rst:7
msgid "QtMir"
msgstr "QtMir (server)"

#: ../../systemdev/qtmir-qtubuntu.rst:9
msgid ""
"The `QtMir`_ QPA allows Unity8, the shell of Ubuntu Touch, to be written in "
"QML and Qt C++ while operating on Mir Surfaces and Windows. It also allows "
"the desktop to be represented and reasoned about as a `Qt Scene Graph`_."
msgstr ""
"`QtMir`_ QPA позволяет писать Unity8, оболочку для Ubuntu Touch, на QML и Qt "
"C ++ при работе на Mir Surfaces и Windows. Это также позволяет представить "
"рабочий стол и рассматривать его как `Qt Scene Graph`_."

#: ../../systemdev/qtmir-qtubuntu.rst:11
msgid ""
"You'll find most of QtMir's logging in Unity8's logs, normally stored at ``/"
"home/phablet/.cache/upstart/unity8`` on Ubuntu Touch. Different logging "
"categories, like ``qtmir.sessions`` and ``qtmir.surfaces``, relate directly "
"to different modules within QtMir's codebase."
msgstr ""
"Вы найдете большую часть лог-файлов QtMir в лог-файлах Unity8, которые "
"обычно хранятся в директории``/home/phablet/.cache/upstart/unity8`` на "
"мобильном устройстве Ubuntu Touch. Другие лог-файлы, такие как qtmir."
"sessions и qtmir.surfaces, напрямую относятся к различным модулям в кодовой "
"базе QtMir."

#: ../../systemdev/qtmir-qtubuntu.rst:13
msgid ""
"While Unity8 shows almost all QtMir logging by default, you can enable even "
"more verbose logging by placing the following content in the file ``/usr/"
"share/upstart/sessions/unity8.override``:"
msgstr ""
"Хотя Unity8 по умолчанию показывает почти все лог-файлы QtMir, можно "
"включить еще более подробное ведение лог-файлов, если внести изменения в "
"файл ``/usr/share/upstart/sessions/unity8.override``:"

#: ../../systemdev/qtmir-qtubuntu.rst:19
msgid "Then restart Unity8:"
msgstr "Затем перезапустите Unity8:"

#: ../../systemdev/qtmir-qtubuntu.rst:26
msgid "QtUbuntu"
msgstr "QtUbuntu (client)"

#: ../../systemdev/qtmir-qtubuntu.rst:28
msgid ""
"The `QtUbuntu`_ QPA uses the `Mir client API`_ and `Ubuntu Platform API`_ to "
"provide Ubuntu Touch apps with a stable hardware compatibility API."
msgstr ""
"`QtUbuntu`_ QPA использует клиентский API Mir и Ubuntu Platform API, чтобы "
"предоставить приложениям Ubuntu Touch стабильный API для совместимости с "
"оборудованием."

#: ../../systemdev/qtmir-qtubuntu.rst:30
msgid ""
"Since QtUbuntu is used directly by apps, any logging output from it will be "
"located in an app's log file. Most of the time, QtUbuntu gives no logging "
"output. However, if you would like to receive more output, you can set the "
"``QT_LOGGING_RULES`` environment variable appropriately. Since apps on "
"Ubuntu Touch are started using Upstart's user session, you can set this for "
"all apps until you restart your device with the following command:"
msgstr ""
"Поскольку QtUbuntu используется приложениями напрямую, вся служебная "
"информация будет находиться в лог-файле приложения. В большинстве случаев "
"QtUbuntu не выводит лог-файлы. Но если хочется получить больше информации, "
"можно настроить переменную среды QT_LOGGING_RULES. Поскольку приложения в "
"Ubuntu Touch запускаются с использованием пользовательского сеанса Upstart, "
"можно задать эту опцию для всех приложений с помощью следующей команды (она "
"будет работать до перезагрузки устройства):"

#: ../../systemdev/qtmir-qtubuntu.rst:36
msgid "We plan to replace QtUbuntu with QtWayland in the future."
msgstr "Мы планируем заменить QtUbuntu на QtWayland в будущем."

#: ../../systemdev/qtmir-qtubuntu.rst:39
msgid "Components"
msgstr "Компоненты"

#: ../../systemdev/qtmir-qtubuntu.rst:41
msgid ""
"QtUbuntu has a number of sub-components to provide other features in the "
"Ubuntu Touch platform. In theory, these could be used on other platforms to "
"provide similar features. In practice, this has never happened."
msgstr ""
"В QtUbuntu есть несколько вспомогательных компонентов для обеспечения других "
"функций платформы Ubuntu Touch. Теоретически их можно использовать на других "
"платформах для обеспечения аналогичных функций. На практике этого никогда не "
"было."

#: ../../systemdev/qtmir-qtubuntu.rst:43
msgid ""
"`QtUbuntu-Camera`_ provides the ``aalCamera`` (Android Abstraction Layer "
"Camera) plugin to `QtMultimedia`_. This plugin allows apps to access Android "
"device cameras through the QtMultimedia standard API. We are trying to "
"replace this component with the `gst-droid`_ plugin for GStreamer for all "
"new Android device ports."
msgstr ""
"QtUbuntu-Camera предоставляет модуль ``aalCamera`` (Android Abstraction "
"Layer Camera) для `QtMultimedia`_. Этот плагин позволяет приложениям "
"получать доступ к камерам устройств Android через стандартный API "
"QtMultimedia. Мы пытаемся заменить этот компонент плагином `gst-droid`_ для "
"GStreamer на всех портах системы для новых Android-устройств."

#: ../../systemdev/qtmir-qtubuntu.rst:45
msgid ""
"`QtUbuntu-Sensors`_ provides Android haptic feedback, GPS, orientation, and "
"accelerometer sensors to `QtSensors`_. We are trying to replace this "
"component with `sensorfw`_, a single daemon capable of providing these "
"functions using Android or standard Linux kernel drivers."
msgstr ""
"`QtUbuntu-Sensors`_ обеспечивает тактильную обратную связь с Android, "
"датчиками GPS, ориентации и акселерометра для`QtSensors`_. Мы пытаемся "
"заменить этот компонент отдельным демоном`sensorfw`_, который может "
"предоставлять эти функции с помощью Android-драйверов или стандартных "
"драйверов ядра Linux."

#: ../../systemdev/qtmir-qtubuntu.rst:47
msgid ""
"`QtUbuntu-Media`_ provides hardware encoding and decoding of audio/video "
"content on Android devices to `QtMultimedia`_. It is tightly integrated with "
"`media-hub`_."
msgstr ""
"`QtUbuntu-Media`_ обеспечивает аппаратное кодирование и декодирование аудио/"
"видео контента на устройствах Android в `QtMultimedia`_ Компонент тесно "
"связан с `media-hub`_."

#: ../../systemdev/reference.rst:2
msgid "System Software reference"
msgstr "Справочник по системному ПО"

#: ../../systemdev/reference.rst:4
msgid ""
"This section includes reference guides on how different parts of the Ubuntu "
"Touch system interact to create the user experience."
msgstr ""
"В этот раздел включены справочные руководства о том, как различные "
"компоненты системы Ubuntu Touch работают для создания пользовательского "
"опыта."

#: ../../systemdev/reference.rst:6
msgid ""
"There's not much here yet, but maybe you'd like to add some reference "
"material? Check out :doc:`our guide to contributing to documentation </"
"contribute/documentation>` to learn more."
msgstr ""
"Тут пока мало информации. Может быть, Вы хотите дополнить эти инструкции? "
"Прочитайте :doc:`главу о том, как можно помочь </contribute/documentation>`."

#: ../../systemdev/testing-locally.rst:2
msgid "Making changes and testing locally"
msgstr "Внесение изменений и локальное тестирование"

#: ../../systemdev/testing-locally.rst:4
msgid ""
"On this page you'll find information on how to build Ubuntu Touch system "
"software for your device. Most of the software preinstalled on your Ubuntu "
"Touch device is shipped in the device image in the form of a Debian package. "
"This format is used by several Linux distributions, such as Debian, Ubuntu, "
"and Linux Mint. Plenty of `documentation on deb packages <https://www.debian."
"org/doc/manuals/maint-guide/index.en.html>`__ is available, so we won't be "
"covering it here. Besides, in most cases you'll find yourself in need of "
"modifying existing software rather than developing new packages from "
"scratch. For this reason, this guide is mostly about recompiling an existing "
"Ubuntu Touch package."
msgstr ""
"На этой странице Вы найдете информацию о том, как скомпилировать системное "
"приложение Ubuntu Touch для своего устройства. Большая часть программного "
"обеспечения, предустановленного на устройстве Ubuntu Touch, поставляется в в "
"виде пакета Debian. Этот формат используется несколькими дистрибутивами "
"Linux, такими как Debian, Ubuntu и Linux Mint. В сети доступно множество "
"`документов о стандарте deb <https://www.debian.org/doc/manuals/maint-guide/"
"index.en.html>` __, поэтому мы не будем здесь подробно об этом рассказывать. "
"Кроме того, в большинстве случаев потребуется изменить существующее "
"программное обеспечение, а не разрабатывать новые пакеты с нуля. По этой "
"причине это руководство в основном посвящено компиляции уже существующего "
"пакета для Ubuntu Touch."

#: ../../systemdev/testing-locally.rst:6
msgid ""
"There are essentially two ways of developing Ubuntu Touch system software "
"locally:"
msgstr ""
"Есть два способа разработки системного программного обеспечения Ubuntu Touch "
"на локальном устройстве:"

#: ../../systemdev/testing-locally.rst:8
msgid "`Cross-building with crossbuilder`_"
msgstr "`Кросс-компиляция с помощью инструмента Crossbuilder`_"

#: ../../systemdev/testing-locally.rst:9
msgid "`Building on the device itself`_"
msgstr "`Компиляция приложения на самом устройстве`_"

#: ../../systemdev/testing-locally.rst:11
msgid ""
"We'll examine both methods, using `address-book-app <https://github.com/"
"ubports/address-book-app>`__ (the Contacts application) as an example."
msgstr ""
"Мы рассмотрим оба метода на примере программы `address-book-app <https://"
"github.com/ubports/address-book-app>`__ (Контакты)."

#: ../../systemdev/testing-locally.rst:13
msgid ""
"We only recommend developing packages using a device with Ubuntu Touch "
"installed from the devel channel. This ensures that you are testing your "
"changes against the most current state of the Ubuntu Touch code."
msgstr ""
"Мы рекомендуем разрабатывать пакеты только с использованием устройства с "
"Ubuntu Touch, установленным из канала разработки. Это гарантирует, что Вы "
"тестируете программы в соответствии с самым последним состоянием кода Ubuntu "
"Touch."

#: ../../systemdev/testing-locally.rst:17
msgid ""
"Installing packages has a risk of damaging the software on your device, "
"rendering it unusable. If this happens, you can :doc:`reinstall Ubuntu Touch "
"</userguide/install>`."
msgstr ""
"При установке пакетов есть риск повредить программное обеспечение на "
"устройстве так, что ничего работать не будет. В этом случае придется :doc:"
"`переустановить Ubuntu Touch </userguide/install>`."

#: ../../systemdev/testing-locally.rst:20
msgid "Cross-building with crossbuilder"
msgstr "Кросс-компиляция с помощью инструмента Crossbuilder"

#: ../../systemdev/testing-locally.rst:22
msgid ""
"Crossbuilder is a script which automates the setup and use of a crossbuild "
"environment for Debian packages. It is suitable for developers with any "
"device since the code compilation occurs on your desktop PC rather than the "
"target device. This makes Crossbuilder the recommended way to develop non-"
"trivial changes to Ubuntu Touch."
msgstr ""
"Crossbuilder - это скрипт, который автоматизирует установку и работу среды "
"кросс-компиляции для пакетов Debian. Он подходит для разработки на любом "
"устройстве, поскольку компиляция кода происходит на настольном ПК, а не на "
"целевом устройстве. поэтому Crossbuilder рекомендуется использовать как "
"основной инструмент разработки для Ubuntu Touch."

#: ../../systemdev/testing-locally.rst:26
msgid ""
"Crossbuilder requires a Linux distribution with ``lxd`` installed and the "
"unprivileged commandset available. In other words, you must be able to run "
"the ``lxc`` command. If you are running Ubuntu on your host, Crossbuilder "
"will set up ``lxd`` for you."
msgstr ""
"Для работы Crossbuilder требуется дистрибутива Linux с установленной "
"программой``lxd`` и доступным непривилегированным набором команд. Другими "
"словами, нужно иметь возможность запускать команду lxc. Если на настольном "
"ПК установлен дистрибутив Ubuntu, Crossbuilder настроит lxd самостоятельно."

#: ../../systemdev/testing-locally.rst:28
msgid "Start by installing Crossbuilder on your host::"
msgstr "Сначала нужно установить Crossbuilder на десктоп::"

#: ../../systemdev/testing-locally.rst:33
msgid ""
"Crossbuilder is a shell script, so you don't need to build it. Instead, you "
"will need to add its directory to your ``PATH`` environment variable, so "
"that you can execute it from any directory::"
msgstr ""
"Crossbuilder - это скрипт для оболочки shell, он не требует сборки. Нужно "
"будет только добавить его каталог в переменную окружения PATH, чтобы его "
"можно было запустить из любого каталога::"

#: ../../systemdev/testing-locally.rst:39
msgid "Now that Crossbuilder is installed, we can use it to set up LXD::"
msgstr ""
"Теперь установка Crossbuilder закончилась, и можно использовать его для "
"настройки LXD::"

#: ../../systemdev/testing-locally.rst:43
msgid ""
"If this is the first time you have used LXD, you might need to reboot your "
"host once everything has completed."
msgstr ""
"Если установка LXD происходит впервые, то после её окончания нужно будет "
"перезагрузить компьютер."

#: ../../systemdev/testing-locally.rst:45
msgid ""
"After LXD has been set up, move to the directory where the source code of "
"your project is located (for example, ``cd ~/src/git/address-book-app``) and "
"launch Crossbuilder::"
msgstr ""
"После установки LXD зайдите в каталог, где находится исходный код программы "
"(например, ``cd ~/src/git/address-book-app``) и запустите Crossbuilder::"

#: ../../systemdev/testing-locally.rst:49
msgid ""
"Crossbuilder will create the LXD container, download the development image, "
"install all your package build dependencies, and perform the package build. "
"It will also copy the packages over to your target device and install them "
"if it is connected (see :doc:`/userguide/advanceduse/adb` to learn more "
"about connecting your device). The first two steps (creating the LXD image "
"and getting the dependencies) can take a few minutes, but will be executed "
"only the first time you launch crossbuilder for a new package."
msgstr ""
"Crossbuilder создаст контейнер LXD, загрузит образ операционной системы, "
"установит все необходимые файлы зависимостей и выполнит сборку пакета. Он "
"также скопирует пакеты на устройство и установит их, если оно подключено к "
"компьютеру (подробнее о подключении устройства к ПК см. .:doc:`/userguide/"
"advanceduse/adb`). Первые два шага (создание образа LXD и получение "
"зависимостей) могут занять несколько минут, но будут выполнены только при "
"первом запуске скрипта Crossbuilder для нового пакета."

#: ../../systemdev/testing-locally.rst:51
msgid ""
"Now, whenever you change the source code in your git repository, the same "
"changes will be available inside the container. The next time you type the "
"``crossbuilder`` command, only the changed files will be rebuilt."
msgstr ""
"Теперь, если изменится исходный код в репозитории git, те же изменения будут "
"доступны внутри контейнера. В следующий раз, когда будет выполнена команда "
"``crossbuilder``, будут скомпилированы только измененные файлы."

#: ../../systemdev/testing-locally.rst:54
msgid "Unit tests"
msgstr "Модульные тесты"

#: ../../systemdev/testing-locally.rst:56
msgid ""
"By default crossbuilder does not run unit tests; that's both for speed "
"reasons, and because the container created by crossbuilder is not meant to "
"run native (target) executables: the development tools (qmake/cmake, make, "
"gcc, etc.) are all run in the host architecture, with no emulation (again, "
"for speed reasons). However, qemu emulation is available inside the "
"container, so it should be possible to run unit tests. You can do that by "
"getting a shell inside the container::"
msgstr ""
"По умолчанию crossbuilder не запускает модульные тесты; это сделано и по "
"соображениям скорости, и потому, что контейнер не предназначен для запуска "
"собственных (целевых) исполняемых файлов: все инструменты разработки (qmake/"
"cmake, make, gcc и т. д.) запускаются на ПК без эмуляции (опять же из "
"соображений скорости работы). Однако эмуляция qemu доступна внутри "
"контейнера, поэтому должна быть возможность запускать модульные тесты. Вы "
"можете сделать это, запустив оболочку внутри контейнера::"

#: ../../systemdev/testing-locally.rst:60
msgid ""
"Then find the unit tests and execute them. Be aware that the emulation is "
"not perfect, so there's a very good chance that the tests will fail even "
"when they'd otherwise succeed when run in a proper environment. For that "
"reason, it's probably wiser not to worry about unit tests when working with "
"crossbuilder, and run them only when not cross-compiling."
msgstr ""
"Затем найдите модульные тесты и выполните их. Имейте в виду, что эмуляция не "
"идеальна. Скорее всего, тесты завершатся ошибкой, даже если они успешно "
"завершились на настольном ПК. Поэтому, разумнее не беспокоиться о модульных "
"тестах при работе с Crossbuilder и запускать их только тогда, когда кросс-"
"компиляция не выполняется."

#: ../../systemdev/testing-locally.rst:63
msgid "Building on the device itself"
msgstr "Компиляция приложения на мобильном устройстве"

#: ../../systemdev/testing-locally.rst:65
msgid ""
"This is the fastest and simplest method to develop small changes and test "
"them in nearly real-time. Depending on your device resources, however, it "
"might not be possible to follow this path: if you don't have enough free "
"space in your root filesystem you won't be able to install all the package "
"build dependencies; you may also run out of RAM while compiling."
msgstr ""
"Это самый быстрый и простой метод разработки небольших программ и их "
"тестирования практически в реальном времени. Однако, в зависимости от "
"ресурсов вашего устройства, этот путь может оказаться технически непростым: "
"если на устройстве недостаточно свободного места в корневой файловой "
"системе, Вы не сможете установить все файлы зависимостей для сборки пакета; "
"на устройстве также может не хватить оперативной памяти во время компиляции."

#: ../../systemdev/testing-locally.rst:69
msgid ""
"This method is limited. Many devices do not have enough free image space to "
"install the packages required to build components of Ubuntu Touch."
msgstr ""
"Этот способ подойдет не для всех пользователей. На многих устройствах не "
"хватает свободного места для установки пакетов, необходимых для сборки "
"компонентов Ubuntu Touch."

#: ../../systemdev/testing-locally.rst:71
msgid ""
"In this example, we'll build and install the address-book-app. All commands "
"shown here must be run on your Ubuntu Touch device over a remote shell."
msgstr ""
"В этом примере мы скомпилируем и установим приложение \"Адресная книга"
"\" (address-book-app). Все приведенные здесь команды должны запускаться на "
"устройстве с Ubuntu Touch через удаленную оболочку."

#: ../../systemdev/testing-locally.rst:73
msgid ""
"You can gain a shell on the device using :doc:`/userguide/advanceduse/adb` "
"or :doc:`/userguide/advanceduse/ssh`. Remount the root filesystem read-write "
"to begin::"
msgstr ""
"На устройство оболочку можно установить по инструкции тут:doc:`/userguide/"
"advanceduse/adb` или тут:doc:`/userguide/advanceduse/ssh`. Сначала "
"перемонтируйте корневую файловую систему для чтения и записи:"

#: ../../systemdev/testing-locally.rst:77
msgid ""
"Next, install all the packages needed to rebuild the component you want to "
"modify (the Contacts app, in this example)::"
msgstr ""
"Затем установите все пакеты, необходимые для сборки программы, над которой "
"Вы работаете (в данном случае, это приложение «Контакты»)::"

#: ../../systemdev/testing-locally.rst:83
msgid ""
"Additionally, you probably want to install ``git`` in order to get your "
"app's source code on the device and later push your changes back into the "
"repository::"
msgstr ""
"Скорее всего, Вам захочется установить ``git`` чтобы работать с исходным "
"кодом приложения на устройстве, а затем отправить изменения обратно в "
"репозиторий::"

#: ../../systemdev/testing-locally.rst:87
msgid ""
"Once you're finished, you can retrieve the source for an app (in our "
"example, the address book) and move into its directory::"
msgstr ""
"Когда все закончится, можно получить исходный код приложения (в нашем "
"примере - адресная книга) и перейти в его каталог::"

#: ../../systemdev/testing-locally.rst:92
msgid "Now, you are ready to build the package::"
msgstr "Теперь можно приступать к сборке пакета::"

#: ../../systemdev/testing-locally.rst:96
msgid ""
"The ``dpkg-buildpackage`` command will print out the names of generated "
"packages. Install those packages with ``dpkg``::"
msgstr ""
"Команда ``dpkg-buildpackage`` напечатает имена сгенерированных пакетов. "
"Установите эти пакеты с помощью команды ``dpkg``::"

#: ../../systemdev/testing-locally.rst:100
msgid ""
"Note, however, that you might not need to install all the packages: "
"generally, you can skip all packages whose names end with ``-doc`` or "
"``dev``, since they don't contain code used by the device."
msgstr ""
"Однако обратите внимание, что установка всех пакетов может и не "
"потребоваться: как правило, вы можно пропустить пакеты, имена которых "
"заканчиваются на `` -doc`` или `` dev``, поскольку они не содержат кода, "
"используемого устройством."

#: ../../systemdev/testing-locally.rst:103
msgid "Next steps"
msgstr "Дальнейшие шаги"

#: ../../systemdev/testing-locally.rst:105
msgid ""
"Now that you've successfully made changes and tested them locally, you're "
"ready to upload them to GitHub. Move on to the next page to learn about "
"using the UBports CI to build and provide development packages!"
msgstr ""
"Теперь изменения успешно внесены и протестированы локально, можно загрузить "
"их на GitHub. Перейдите на следующую страницу, чтобы узнать как формировать "
"пакеты с помощью UBports CI!"

#: ../../systemdev/ubp-5.1.rst:2
msgid "hammerhead, bacon and FP2"
msgstr "hammerhead, bacon и FP2"

#: ../../systemdev/ubp-5.1.rst:5
msgid ""
"This page documents how to build the Kernel and the Android image for the LG "
"Nexus 5 (hammerhead), OnePlus One (bacon), or Fairphone 2 (FP2)."
msgstr ""
"На этой странице рассказывается, как собрать ядро и образ Android для LG "
"Nexus 5 (hammerhead), OnePlus One (bacon) или Fairphone 2 (FP2)."

#: ../../systemdev/ubp-5.1.rst:9
msgid ""
"We highly suggest that you follow the :doc:`Halium porting guide <../porting/"
"introduction/index>` if you want to bring up a new device. The steps in here "
"are only relevant for hammerhead, bacon and FP2."
msgstr ""
"Перед созданием сборки для нового устройства настоятельно рекомендуется "
"прочитать :doc:`Руководство по созданию сборок на основе Halium <../ porting/"
"index>`. Приведенные здесь инструкции актуальны только для устройств "
"hammerhead, bacon и FP2."

#: ../../systemdev/ubp-5.1.rst:11
msgid ""
"This document assumes you already have knowledge of building Android or "
"Halium. It also assumes that your device has Ubuntu Touch installed."
msgstr ""
"В этом документе предполагается, что пользователь знает, как устроены ОС "
"Android или Halium. Также предполагается, что на мобильном устройстве "
"установлен Ubuntu Touch."

#: ../../systemdev/ubp-5.1.rst:14
msgid "Getting set up"
msgstr "Подготовка к установке"

#: ../../systemdev/ubp-5.1.rst:16
msgid ""
"``ubp-5.1`` ports must be built using Ubuntu 16.04. A container or virtual "
"machine based on 16.04 is recommended for this purpose."
msgstr ""
"Сборки ``ubp-5.1`` должны быть созданы с использованием Ubuntu 16.04. Для "
"этой цели рекомендуется контейнер или виртуальная машина на базе Ubuntu "
"16.04."

#: ../../systemdev/ubp-5.1.rst:18
msgid "Let's get started by installing some build dependencies::"
msgstr "Начнем с установки некоторых файлов зависимостей::"

#: ../../systemdev/ubp-5.1.rst:24
msgid "Create a directory for your ``ubp-5.1`` source::"
msgstr "Создайте каталог для исходного кода ``ubp-5.1``::"

#: ../../systemdev/ubp-5.1.rst:29
msgid "Next, we'll initialize the repository::"
msgstr "Далее, инициализируем репозиторий::"

#: ../../systemdev/ubp-5.1.rst:35
msgid ""
"The ``allthefixings`` branch is provided for convenience. It adds all of the "
"current UT device ports to the tree at the expense of a bit more downloaded "
"data. If you are download-sensitive, initialize using ``-b ubp-5.1`` and use "
"the manifest in `build-scripts <https://github.com/ubports/build-scripts>`__ "
"to pick the repos you like."
msgstr ""
"Для удобства предусмотрена ветка ``allthefixings``. В этой ветке находятся "
"все текущие порты устройств UT за счет немного большего количества "
"загруженных данных. Если вам это критично, инициализируйте её с помощью "
"ключа`` -b ubp-5.1 '' и используйте манифест из скриптов для формирования "
"сборки `build-scripts <https://github.com/ubports/build-scripts>` __, чтобы "
"выбрать репозитории, которые Вам нужны."

#: ../../systemdev/ubp-5.1.rst:37
msgid "Finally, we'll download the source::"
msgstr "В итоге, мы скачали исходные тексты::"

#: ../../systemdev/ubp-5.1.rst:42
msgid "Set up and build"
msgstr "Установка и сборка"

#: ../../systemdev/ubp-5.1.rst:44
msgid ""
"With the sources downloaded, we need to set up our environment and build the "
"images. Make sure you're in your ``ubp-5.1`` directory to continue through "
"these steps."
msgstr ""
"Когда исходные тексты будут скопированы, нужно настроить окружение и собрать "
"образы. Проверьте, что находитесь в каталоге ``ubp-5.1`` перед тем, как "
"продолжить работу."

#: ../../systemdev/ubp-5.1.rst:46
msgid "First, bring in the default Android build environment::"
msgstr "Сначала введите окружение для сборки Android::"

#: ../../systemdev/ubp-5.1.rst:50
msgid ""
"Run ``lunch`` and pick the appropriate combo for your device. The name of "
"the combination should start with ``cm_``, followed by the device name and "
"ending with ``-userdebug``::"
msgstr ""
"Запустите команду ``lunch`` и выберите комбинацию, подходящую для "
"устройства. Название комбинации должно начинаться с ``cm_``, за ним следует "
"имя устройства и заканчиваться на ``-userdebug``::"

#: ../../systemdev/ubp-5.1.rst:54
msgid "With that done, the build can be started::"
msgstr "После этого можно начинать сборку::"

#: ../../systemdev/ubp-5.1.rst:59
msgid "Install the new image"
msgstr "Установите новый образ"

#: ../../systemdev/ubp-5.1.rst:61
msgid ""
"Now that the build is complete, we can flash it to the device. Note that all "
"of these commands should be run from a terminal which has been set up with "
"``source build/envsetup.sh`` and ``lunch`` to ensure the needed tools are in "
"your PATH."
msgstr ""
"Теперь процесс формирования сборки завершён, и её можно прошить на "
"устройство. Обратите внимание, что все эти команды должны запускаться из "
"терминала. Предварительно, в нем нужно запустить команды ``source build/"
"envsetup.sh`` и ``lunch``', чтобы убедиться, что необходимые инструменты "
"находятся в вашем PATH."

#: ../../systemdev/ubp-5.1.rst:63
msgid ""
"We'll begin with the boot and recovery images. Boot your device into "
"fastboot mode and run the following commands::"
msgstr ""
"Начнем с образов boot и recovery. Загрузите устройство в режиме fast boot и "
"выполните следующие команды::"

#: ../../systemdev/ubp-5.1.rst:69
msgid ""
"Now boot your device to ensure your kernel build is sane. You may also want "
"to boot into recovery to ensure it is working as well."
msgstr ""
"Теперь перезагрузите устройство и проверьте, что сборка ядра работает "
"нормально. Можно загрузиться и в режиме recovery, и убедиться, что он тоже "
"работает."

#: ../../systemdev/ubp-5.1.rst:71
msgid ""
"To install your new build of the system image, use the `replace-android-"
"system script <https://github.com/janimo/phablet-porting-scripts/"
"blob/68734ca07998b8e784397df77d9aca4b968b3815/build/replace-android-"
"system>`_. It can be run as follows with your device attached::"
msgstr ""
"Чтобы установить новую сборку образа системы, используйте `скрипт replace-"
"android-system script <https://github.com/janimo/phablet-porting-scripts/"
"blob/68734ca07998b8e784397df77d9aca4b968b3815/build/replace-android-"
"system>`_.. Когда телефон подключён к ПК, его можно запустить так::"

#: ../../systemdev/uploading-changes.rst:2
msgid "Uploading and testing with ``ubports-qa``"
msgstr "Загрузка и тестирование с помощью ``ubports-qa``"

#: ../../systemdev/uploading-changes.rst:4
msgid ""
"The `UBports build service <https://ci.ubports.com>`_ is capable of building "
"Ubuntu Touch packages and deploying them to the `UBports repository <https://"
"repo.ubports.com>`_. This capability is offered to any developer who wishes "
"to take advantage of it."
msgstr ""
"`Сервис сборки UBports <https://ci.ubports.com> `_ может создавать пакеты "
"Ubuntu Touch и размещать их в `репозитории UBports <https://repo.ubports."
"com> `_. Эта опция доступна любому разработчику, который желает ею "
"воспользоваться."

#: ../../systemdev/uploading-changes.rst:6
msgid ""
"This guide assumes that you have a cursory understanding of using Git and "
"making Pull Requests on GitHub."
msgstr ""
"В этом руководстве предполагается, что вы понимаете, как использовать Git и "
"формировать запросы Pull Requests на GitHub."

#: ../../systemdev/uploading-changes.rst:8
msgid ""
"To use the `UBports build service`_, make sure you understand our :doc:"
"`branch naming convention </about/process/branch-naming>`. It is required "
"that you follow the convention for deb-packages for CI to build your package "
"correctly."
msgstr ""
"Чтобы использовать `UBports build service`_, изучите наше: doc:` соглашение "
"об именах веток</about/process/branch-naming>`. Для правильной сборки пакета "
"необходимо следовать соглашению для deb-пакетов для CI."

#: ../../systemdev/uploading-changes.rst:11
msgid "Fork the repository"
msgstr "Создания форка репозитория"

#: ../../systemdev/uploading-changes.rst:13
msgid ""
"The first step to make a change to any repository you don't have write "
"access to is to fork it. Open your desired repository on GitHub and click "
"the \"Fork\" button in the upper right corner. If offered, select an "
"appropriate account to fork the repository to. Then, clone your fork to your "
"computer."
msgstr ""
"Первый шаг к внесению изменений в любой репозиторий, если нет прав на "
"запись, - это сделать его копию. Откройте нужный репозиторий на GitHub и "
"нажмите кнопку «Fork» в правом верхнем углу. Выберите нужную учетную запись "
"и создайте копию (форк) репозитория на своем компьютере."

#: ../../systemdev/uploading-changes.rst:15
msgid "Now you're ready to make changes!"
msgstr "Теперь можно вносить любые правки!"

#: ../../systemdev/uploading-changes.rst:18
msgid "Make and commit changes"
msgstr "Сделайте нужные правки и сохраните их"

#: ../../systemdev/uploading-changes.rst:20
msgid ""
"Now that you have the package source downloaded, you can make your desired "
"changes."
msgstr ""
"Теперь, когда доступен исходный код пакета, можно внести в него правки."

#: ../../systemdev/uploading-changes.rst:22
msgid ""
"Before changing anything, make sure you have checked out the branch you want "
"to work from (probably ``xenial``, assuming you are making changes for the "
"phone images). Then, create a new branch abiding by the :doc:`branch naming "
"convention </about/process/branch-naming>`."
msgstr ""
"Прежде чем вносить какие-либо правки, нужно проверить, что выбрана "
"правильная ветка, с которой хотите работать (возможно, xenial, если вы "
"вносите изменения в образы для телефона). Затем создайте новую ветку в "
"соответствии с :doc:`соглашением о именах веток разработки </about/process/"
"branch-naming>`."

#: ../../systemdev/uploading-changes.rst:24
msgid ""
"After making your changes, commit them with a descriptive commit message "
"stating what is wrong and why your changes fix that problem."
msgstr ""
"После внесения изменений обязательно заполните комментарий к правке с "
"детальным описанием, что это за изменение и какую проблему оно закрывает."

#: ../../systemdev/uploading-changes.rst:26
msgid ""
"You have successfully created and committed your changes. Before pushing "
"your changes, we'll want to make sure your device will install them."
msgstr ""
"Вы успешно создали и сохранили свои правки. Прежде чем отправлять их в "
"репозиторий, мы хотим убедиться, они установлены на вашем мобильном "
"устройстве."

#: ../../systemdev/uploading-changes.rst:29
msgid "Update the ``debian/changelog`` file"
msgstr "Обновите файл ``debian/changelog``"

#: ../../systemdev/uploading-changes.rst:31
msgid ""
"Generally, ``apt`` will not install a new package from any repository if it "
"has a lower (or the same) version number as the package it replaces. Users "
"may also want to see the changes that are included in a new version of a "
"package. For that reason, we will need to update the package changelog to "
"add a new version."
msgstr ""
"Как правило, ``apt`` не устанавливает новый пакет из любого репозитория, "
"если он имеет более низкий (или такой же) номер версии, что и заменяемый им "
"пакет. Пользователи также могут захотеть увидеть изменения, которые включены "
"в новую версию пакета. По этой причине нам нужно будет обновить файл "
"изменений пакета, чтобы добавить новую версию."

#: ../../systemdev/uploading-changes.rst:35
msgid ""
"This is not an exhaustive reference of the ``debian/changelog`` format. See "
"`deb-changelog(5) <https://manpages.debian.org/testing/dpkg-dev/deb-"
"changelog.5.en.html>`_ for more information."
msgstr ""
"Это краткое описание формата ``debian/changelog``. См. `deb-changelog(5) "
"<https://manpages.debian.org/testing/dpkg-dev/deb-changelog.5.en.html>`_ для "
"получения дополнительной информации."

#: ../../systemdev/uploading-changes.rst:38
msgid "Determine a new version number"
msgstr "Укажите номер новой версии"

#: ../../systemdev/uploading-changes.rst:40
msgid ""
"To start, figure out what the current version numbering for the package is::"
msgstr "Для начала выясните номер текущей версии пакета::"

#: ../../systemdev/uploading-changes.rst:44
msgid ""
"This will return a few lines, but the first is the most important to us::"
msgstr "Это покажет несколько строк, но первая для нас самая важная::"

#: ../../systemdev/uploading-changes.rst:48
msgid ""
"The part inside the parentheses ``(0.24+ubports2)`` is our version number. "
"It consists of several parts:"
msgstr ""
"Словосочетание в круглых скобках ``(0.24+ubports2)` - это номер версии "
"нашего пакета. Он состоит из нескольких частей:"

#: ../../systemdev/uploading-changes.rst:50
msgid ""
"The ``0.24`` is the *upstream version number*, the version that the original "
"project maintainers give to the release we are using. For most UBports "
"projects, the repository you'll be working on is the original project code. "
"This makes UBports the \"upstream\" of that project."
msgstr ""
"``0.24`` - это *номер исходной версии*, которую разработчики исходного "
"пакета присваивают пакету. Для большинства компонентов в UTouch, каждый "
"репозиторий содержит актуальный исходный код проекта."

#: ../../systemdev/uploading-changes.rst:52
msgid ""
"If you are making large changes to the repository and UBports is the "
"upstream, you should increment the first part of the version number before "
"the plus (+) and reset the distribution suffix. In our example above, you "
"would make this new version number::"
msgstr ""
"Если Вы вносите большие изменения в репозиторий, а Ubuntu Touch находится в "
"состоянии \"upstream\", то нужно увеличить первую часть номера версии до "
"плюса (+) и сбросить дистрибуционный суффикс. В примере выше показано как "
"будет выглядеть номер новой версии::"

#: ../../systemdev/uploading-changes.rst:56
msgid ""
"If you are making changes only to the package build (files in the ``debian/"
"`` folder), it is best to only increment the version suffix::"
msgstr ""
"Если вы вносите изменения только в сборку пакета (файлы в папке ``debian/"
"``'), лучше увеличивать только суффикс версии::"

#: ../../systemdev/uploading-changes.rst:62
msgid ""
"If you find a package which does not seem to follow the above versioning "
"format, please contact us to ask how to proceed."
msgstr ""
"Если вы найдете пакет, который не соответствует указанному выше формату "
"управления версиями, свяжитесь с нами, чтобы узнать, как действовать дальше."

#: ../../systemdev/uploading-changes.rst:65
msgid "Write the changelog entry"
msgstr "В журнале изменений - файле changelog - напишите о сделанных правках"

#: ../../systemdev/uploading-changes.rst:67
msgid ""
"Now it is time to write your changelog entry! Start with the following "
"template::"
msgstr ""
"Пришло время сделать запись в журнале изменений! Это можно сделать с помощью "
"шаблона::"

#: ../../systemdev/uploading-changes.rst:75
msgid ""
"If you open the ``debian/changelog`` file, you'll find that every entry "
"follows this format. This helps everyone (including computers) read and "
"understand the contents. This is used, for example, to name the output "
"package correctly for every package version."
msgstr ""
"Если открыть файл ``debian/changelog``, то можно увидеть, что каждая запись "
"выполнена по этому формату. Такой формат помогает всем (включая компьютеры) "
"читать и понимать содержимое файла. Это используется, например, для "
"формирования правильного имени пакета при сборке новых версий."

#: ../../systemdev/uploading-changes.rst:77
msgid ""
"Let's assume I, John Doe, am making a packaging change to the ``morph-"
"browser`` package for Ubuntu Touch. I'll replace the different all-caps "
"placeholders above in the following way:"
msgstr ""
"Предположим, разработчик Джон Доу вносит изменения в пакет ``morph-browser`` "
"для Ubuntu Touch. Он изменит поля, набранные заглавным шрифтом, следующим "
"образом:"

#: ../../systemdev/uploading-changes.rst:79
msgid "PACKAGE-NAME is replaced with ``morph-browser``"
msgstr "PACKAGE-NAME меняется на ``morph-browser``"

#: ../../systemdev/uploading-changes.rst:80
msgid "VERSION is replaced with ``0.24+ubports3`` (which we determined above)"
msgstr ""
"VERSION меняется на ``0.24+ubports3`` (как мы договорились выше по тексту)"

#: ../../systemdev/uploading-changes.rst:81
msgid "DISTRIBUTION is replaced with ``xenial``"
msgstr "DISTRIBUTION меняется на ``xenial``"

#: ../../systemdev/uploading-changes.rst:82
msgid ""
"CHANGES is replaced with the changes I made in this release. This will "
"include summarized information from my commit messages along with the bugs "
"fixed by those changes. If I've fixed multiple bugs, I'll create multiple "
"bullet points."
msgstr ""
"В поле CHANGES описываются изменения, сделанные разработчиком в этом релизе. "
"Это будет включать обобщенную информацию из его сообщений о баг-фиксах. Если "
"было исправлено несколько несколько ошибок, будет создано несколько пунктов."

#: ../../systemdev/uploading-changes.rst:83
msgid "NAME is replaced with my name, ``John Doe``"
msgstr ""
"В поле NAME указывается имя разработчика. В данном случае - ``John Doe``"

#: ../../systemdev/uploading-changes.rst:84
msgid "EMAIL is replaced with my e-mail, ``john.doe@example.com``."
msgstr ""
"В поле EMAIL указывается почтовый адрес разработчика, ``john.doe@example."
"com``."

#: ../../systemdev/uploading-changes.rst:88
msgid ""
"You should not use a \"noreply\" e-mail as your EMAIL for package changelog "
"entries."
msgstr ""
"Не следует использовать какой-то старый, или неактивный адрес электронной "
"почты в качестве EMAIL для записей журнала изменений пакета."

#: ../../systemdev/uploading-changes.rst:90
msgid ""
"DATETIME is replaced with the date and time I made this changelog entry in "
"RFC2822/RFC5322 format. The easiest way to retrieve this is by running the "
"command ``date -R`` in a terminal."
msgstr ""
"В поле DATETIME указывается дата и время внесения записи в журнал изменений "
"в формате RFC2822/RFC5322. Самый простой способ это сделать - запустить в "
"терминале команду ``date -R``."

#: ../../systemdev/uploading-changes.rst:92
msgid ""
"Note that no line in your changelog entry should exceed 80 characters in "
"length."
msgstr ""
"Помните, что ни одна строка в одной записи журнала изменений не должна "
"превышать 80 символов."

#: ../../systemdev/uploading-changes.rst:94
msgid "With that, my new changelog entry follows::"
msgstr "Далее можно посмотреть пример новой записи в журнале изменений::"

#: ../../systemdev/uploading-changes.rst:104
msgid ""
"Add your new changelog entry to the top of the ``debian/changelog`` file and "
"commit it with the message \"Update changelog\". Push your changes. Now "
"you're ready to make your Pull Request!"
msgstr ""
"Добавьте новую запись в журнал изменений в верхнюю часть файла ``debian/"
"changelog`` и нажмите на клавишу «Обновить журнал изменений». Это сохранит "
"изменения. Теперь можно сделать Pull Request!"

#: ../../systemdev/uploading-changes.rst:107
msgid "Create your pull request"
msgstr "Создайте pull request"

#: ../../systemdev/uploading-changes.rst:109
msgid ""
"A pull request asks UBports maintainers to review your code changes and add "
"them to the official repository. We'll create one now."
msgstr ""
"Pull request сигнализирует разработчикам UBports о правках кода, они "
"проверят их и добавят в официальный репозиторий. Сейчас мы создадим такой "
"запрос."

#: ../../systemdev/uploading-changes.rst:111
msgid ""
"Open your fork of the repository on GitHub. Navigate to the branch that you "
"just pushed to using the \"Branch\" selector:"
msgstr ""
"Откройте свой форк репозитория на GitHub. Перейдите к ветке, которую вы "
"только выбрали клавишей «Branch»:"

#: ../../systemdev/uploading-changes.rst:None
msgid "Using the branch selector on GitHub"
msgstr "Изпользование branch selector на GitHub"

#: ../../systemdev/uploading-changes.rst:117
msgid ""
"Once you've opened your desired branch, click the \"New pull request\" "
"button to start your pull request. You'll be taken to a page where you can "
"review your changes and create a pull request."
msgstr ""
"Откройте нужную ветку, нажмите кнопку «New pull request», чтобы создать его. "
"Вы попадете на страницу, где сможете просмотреть свои изменения и создать "
"запрос pull request."

#: ../../systemdev/uploading-changes.rst:119
msgid ""
"Give your pull request a descriptive title and description (include links to "
"reference bugs or other material). Ensure that the \"base\" branch is the "
"one you want your changes to be applied to (likely ``xenial``), then click "
"\"Create pull request\"."
msgstr ""
"Дайте вашему запросу название и описание (включите ссылки на баг-репорты или "
"другой материал). Убедитесь, что «базовая» ветвь - это та, к которой "
"необходимо применить эти правки (скорее всего, это «xenial»), затем нажмите "
"«Create pull request»."

#: ../../systemdev/uploading-changes.rst:121
msgid ""
"With your pull request created, we can move on to testing your changes using "
"the UBports build service!"
msgstr ""
"После создания pull request можно перейти к тестированию изменений с помощью "
"службы сборки UBports!"

#: ../../systemdev/uploading-changes.rst:124
msgid "Test your changes"
msgstr "Тестирование внесённых правок"

#: ../../systemdev/uploading-changes.rst:126
msgid ""
"Once your pull request is built (a green check mark appears next to your "
"last commit), you are ready to test your changes on your device."
msgstr ""
"Как только pull request создан (рядом с вашим последним коммитом появится "
"зеленая галочка), можно протестировать свои изменения на мобильном "
"устройстве."

#: ../../systemdev/uploading-changes.rst:130
msgid ""
"If a red \"X\" appears next to your last commit, your pull request has "
"failed to build. Click the red \"X\" to view the build log. Until your build "
"errors are resolved, your pull request cannot be installed or accepted."
msgstr ""
"Если последний коммит помечен красным крестом, pull request не удалось "
"выполнить. Щелкните на этот крестик, чтобы просмотреть журнал событий. Пока "
"указанные там ошибки не будут устранены, ваш pull request не будет принят в "
"работу."

#: ../../systemdev/uploading-changes.rst:132
msgid ""
"We'll use ``ubports-qa`` to install your changes. Take note of your pull "
"request's ID (noted as ``#number`` after the title of the pull request) and "
"follow these steps to install your changes:"
msgstr ""
"Для установки сделанных правок мы будем использовать ``ubports-qa``. "
"Запишите идентификатор своего запроса (обозначен как ``#число`` после "
"заголовка запроса) и выполните следующие действия:"

#: ../../systemdev/uploading-changes.rst:134
msgid ""
"Ensure your device is running the newest version of Ubuntu Touch from the "
"``devel`` channel."
msgstr ""
"Убедитесь, что на мобильном устройстве установлена самая последняя версия "
"Ubuntu Touch из канала ``devel``."

#: ../../systemdev/uploading-changes.rst:135
msgid ""
"Get shell access to your device using :doc:`/userguide/advanceduse/adb` or :"
"doc:`/userguide/advanceduse/ssh`."
msgstr ""
"Получите доступ к оболочке вашего устройства. Инструкция :doc:`/userguide/"
"advanceduse/adb` or :doc:`/userguide/advanceduse/ssh`."

#: ../../systemdev/uploading-changes.rst:136
msgid ""
"Run ``sudo ubports-qa install REPOSITORY PR``, replacing ``REPOSITORY`` with "
"the name of the repository you have submitted a PR to and ``PR`` with the "
"number of your pull request without the ``#``. For example run ``sudo "
"ubports-qa morph-browser 123`` to install the PR number 123 to morph-browser "
"repo."
msgstr ""
"Выполните команду``sudo ubports-qa install REPOSITORY PR``, вместо "
"REPOSITORY нужно указать имя репозитория, для которого сформирован запрос "
"PR, а PR - номером вашего запроса без символа #. `. Например, выполните "
"команду ``sudo ubports-qa morph-browser 123``, чтобы установить запрос PR "
"123 в репозиторий morph-browser."

#: ../../systemdev/uploading-changes.rst:138
msgid ""
"``ubports-qa`` will automatically add the repository containing your changed "
"software and start the installation for you. All you will need to do is "
"check the packages it asks you to install and say \"yes\" if they are "
"correct."
msgstr ""
"``ubports-qa`` автоматически добавит репозиторий, содержащий обновленный "
"компонент, и начнет установку на устройство. Все, что нужно сделать, это "
"проверить пакеты, которые предлагается установить, и нажать «да», если все "
"корректно."

#: ../../systemdev/uploading-changes.rst:140
msgid ""
"If ``ubports-qa`` fails to install your packages, run it again with the ``-"
"v`` flag (for example, ``ubports-qa -v install ...``). If it still fails, "
"submit the entire log (starting from the ``$`` before the ``ubports-qa`` "
"command) to `Ubuntu Pastebin <https://paste.ubuntu.com/>`_ and contact us "
"for help."
msgstr ""
"Если ``ubports-qa`` не может установить пакеты, запустите команду с флагом``-"
"v`` (например, ``ubports-qa -v install ...``). Если и это не помогло, "
"отправьте весь лог-файл (начиная с символа $ перед командой ubports-qa) в "
"Ubuntu Pastebin <https://paste.ubuntu.com/> `_ и свяжитесь с нами."

#: ../../systemdev/uploading-changes.rst:142
msgid ""
"Once ``ubports-qa`` is finished, test your changes to ensure they have fixed "
"the original bug. Add the ``ubports-qa`` command to your pull request, then "
"send the link to the pull request to other developers and testers so they "
"may also test your changes."
msgstr ""
"После того, как ``ubports-qa`` закончит работу, проверьте, действительно ли "
"правки перенеслись в исходный текст проекта. Добавьте команду ``ubports-qa`` "
"в свой pull request, а затем отправьте ссылку на pull request другим "
"разработчикам и тестировщикам, чтобы они также могли протестировать "
"изменения."

#: ../../systemdev/uploading-changes.rst:144
msgid ""
"When getting feedback from your testers, be sure to add the information to "
"the pull request (or ask them to do it for you) so that everyone is updated "
"on the status of your code."
msgstr ""
"Получив обратную связь от тестировщиков, обязательно добавьте информацию в "
"public request (или попросите их сделать это), чтобы все были в курсе "
"состояния кода."

#: ../../systemdev/uploading-changes.rst:146
msgid ""
"Every time you make a change and push it to GitHub, it will trigger a new "
"build. You can run ``sudo ubports-qa update`` to get the freshest changes "
"every time this happens."
msgstr ""
"Каждый раз, когда вы вносите изменение и отправляете его на GitHub, "
"запускается новая сборка. С помощью команды ``sudo ubports-qa update``можно "
"получать самые свежие обновления системы."

#: ../../systemdev/uploading-changes.rst:149
msgid "Celebrate!"
msgstr "Вот и всё!"

#: ../../systemdev/uploading-changes.rst:151
msgid ""
"If you and your testers are satisfied with the results of your pull request, "
"it will be merged. Following the merge, the UBports build service will build "
"your code and deploy it to Ubuntu Touch users worldwide."
msgstr ""
"Если вы и ваши тестировщики удовлетворены результатами работ по pull "
"request, он будет переведён в статус \"merged\". После этого сборки системы "
"станут доступны для всех пользователей Ubuntu Touch."

#: ../../systemdev/uploading-changes.rst:153
msgid "Thank you for your contribution to Ubuntu Touch!"
msgstr "Спасибо за вклад в развитие операционной системы Ubuntu Touch!"

#~ msgid ""
#~ "This section covers how to build and install the Linux kernel and "
#~ "hardware abstraction layer for supported devices."
#~ msgstr ""
#~ "В этом разделе рассказывается, как собрать и установить абстракции уровня "
#~ "ядра Linux и уровня оборудования для поддерживаемых устройств."
