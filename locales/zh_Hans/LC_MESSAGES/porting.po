msgid ""
msgstr ""
"Project-Id-Version: Chinese (Simplified) (UBports Docs)\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-28 12:29-0500\n"
"PO-Revision-Date: 2021-10-31 02:28+0000\n"
"Last-Translator: GrieferPig <grieferpig@163.com>\n"
"Language-Team: Chinese (Simplified) <https://translate.ubports.com/projects/"
"ubports-docs/documentation-porting/zh_Hans/>\n"
"Language: zh_Hans\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 3.11.3\n"

#: ../../porting/Intro.rst:2
msgid "Introduction to porting"
msgstr "移植简介"

#: ../../porting/Intro.rst:4
msgid ""
"This first section will introduce you to the specifics of porting Ubuntu "
"Touch to an Android device. Note that it is written with the general public "
"in mind, not primarily the experienced porting developer. In subsequent "
"sections we have made an effort to differentiate by keeping the main text "
"more concise in order to meet the needs of the more experienced reader, "
"while providing links to supplementary reading for the less experienced."
msgstr ""
"第一个章节介绍了移植Ubuntu Touch 到一个安卓设备上的细节。请注意这个教程是为通用目的而编写的，而不是有经验的移植开发人员。 "
"在随后的章节里，我们使正文更加简洁以满足有经验的读者的需求，同时为没有经验的读者提供补充阅读的链接。"

#: ../../porting/Intro.rst:6
msgid ""
"The guide as a whole is written as a sequence of steps describing how an "
"ideal port might proceed. However, porting is unpredictable and messy. Every "
"device is different and in reality you will likely iterate and revisit some "
"steps, skip over other steps and uncover new and undocumented challenges."
msgstr ""
"这篇教程介绍了理想情况下移植的一系列步骤。但是，移植工作经常会遇到烦人的问题。每一个设备都不一样，而且实际上你可能会重复，跳过一些步骤以及发现新的和搜不到"
"的问题。"

#: ../../porting/Intro.rst:11
msgid "What is Ubuntu Touch?"
msgstr "什么是Ubuntu Touch？"

#: ../../porting/Intro.rst:13
msgid ""
"Ubuntu Touch is an open source operating system for mobile devices. It can "
"be ported to devices that originally shipped with Android OS. Alas, the "
"majority of these devices are dependent to some degree on proprietary "
"software."
msgstr "Ubuntu Touch 是一个开源的手机系统。它可以被移植到装有安卓的手机上。不过，大部分的设备上依赖一些专有软件。"

#: ../../porting/Intro.rst:15
#, fuzzy
msgid ""
"To be specific, device vendors tend to keep the code that speaks directly to "
"the device hardware (the low level device drivers) proprietary. These "
"components are commonly called the 'vendor blobs'. The vendor blobs need to "
"be incorporated into an Ubuntu Touch port. Note that these components are "
"specific not only to each device, but also to each Android version. It is "
"therefore necessary to secure the correct version of these components when "
"building a port."
msgstr ""
"具体来讲，设备制造商趋向于把设备硬件的底层代码闭源。这些代码通常叫做“Vendor blobs”。在移植时，“Vendor blobs\""
"需要被集成到系统中。有些代码不仅只适用于某个设备，还只适用于某个安卓版本。所以，在移植时必须确保这些代码的版本正确。"

#: ../../porting/Intro.rst:17
#, fuzzy
msgid ""
"This is why Ubuntu Touch cannot be built completely from source code for "
"most commercial devices. Instead, porting the system to these devices "
"involves integrating the previously mentioned vendor blobs into the rest of "
"the system, which can be built from source."
msgstr ""
"这就是为什么对于大部分普通设备来说，Ubuntu Touch不能直接从源码构建。相反，将系统移植到这些设备上涉及前面提到的“Vendor "
"blobs”，这可以从源代码构建。"

#: ../../porting/Intro.rst:19
msgid ""
"The next component of Ubuntu Touch is a pre-compiled root filesystem which "
"needs to be installed on the device. This component does not communicate "
"directly with the device hardware. Instead, this communication is mediated "
"by a Hardware Abstraction Layer (HAL) which needs to be built for each "
"specific device, because each device has its specific hardware architecture. "
"This component is called Halium and is available in different versions (5.1 "
"which is largely obsolete, 7.1, and 9 as of writing) corresponding to "
"different Android versions."
msgstr ""
"Ubuntu Touch 的下一个组件是需要安装在设备上的预编译根文件系统， 这个组件不直接与设备硬件通信。 相反，因为每个设备都有其特定的硬件架构，"
"它通过为每个特定设备构建的硬件抽象层 (HAL) 进行通信。 这个组件叫做 Halium，有不同的版本（5.1 已过时，7.1 ，以及9）对应不同的 "
"Android 版本。"

#: ../../porting/Intro.rst:21
msgid ""
"The Halium project enables Linux systems to run on Android hardware. It is a "
"joint effort by multiple mobile operating systems, notably Plasma mobile, "
"Lune OS and UBports. UBports porting builds on top of Halium porting. "
"Consequently, you will be using both the Halium porting guide and the "
"UBports porting guide. At times it can also be helpful to test with one of "
"the other operating systems to debug a problem from different angles."
msgstr ""
"Halium 使得Linux系统能够跑在安卓硬件上。它由多个移动操作系统的共同努力写成，特别是 Plasma mobile、Lune OS 和 "
"UBports 。UBports在Halium的基础上移植。所以，你可能需要阅读Halium移植指南和UBports移植指南。有时，使用其他操作系统之一进"
"行测试以从不同角度调试问题也很有帮助。"

#: ../../porting/Intro.rst:23
msgid ""
"Halium is thus an indispensible part of an Ubuntu Touch port and is "
"available in the form of open source software. Developing a new version of "
"Halium is a very considerable task which is the why only a few versions of "
"Halium are available. Each port of Ubuntu Touch has to be based on one of "
"the available Halium versions and vendor blobs from the corresponding "
"Android version. See the first two columns of the table below for details."
msgstr ""
"Halium因此成为Ubuntu Touch移植中不可或缺的一部分，并以开源软件的形式提供。 开发新版本的 Halium 是一项非常艰巨的任务，"
"因此只有少数几个版本的 Halium 可用。"

#: ../../porting/Intro.rst:28
msgid "Thus an Ubuntu Touch port is composed of the these components:"
msgstr "所以一个Ubuntu Touch移植基于以下部件："

#: ../../porting/Intro.rst:26
msgid "The Ubuntu Touch (UT) root filesystem (rootfs)"
msgstr "Ubuntu Touch根文件系统 (rootfs)"

#: ../../porting/Intro.rst:27
msgid ""
"`Halium <https://halium.org/>`_ (contained in the boot and system images)"
msgstr "`Halium <https://halium.org/>`_ (包含在启动（boot）和系统镜像（system images）中)"

#: ../../porting/Intro.rst:28
msgid "The vendor blobs"
msgstr "制造商驱动"

#: ../../porting/Intro.rst:30
msgid ""
"You, the porter, need to build Halium (i.e. halium-boot.img and system.img) "
"and install these together with the Ubuntu Touch rootfs in order to create a "
"functioning Ubuntu Touch port."
msgstr ""
"你，移植者，需要构建Halium（例如，halium-boot.img 和 system.img）并随Ubuntu "
"Touch根目录一起安装以构建一个能用的Ubuntu Touch移植。"

#: ../../porting/Intro.rst:32
msgid ""
"Halium is built using source code for a modified version of the Android "
"operating system called LineageOS. The required source code is available "
"online and needs to be downloaded and configured to build the correct Halium "
"version for each individual device port. The table below shows which "
"versions are required for the different Halium versions."
msgstr ""
"Halium 基于 LineageOS 的安卓源代码。 所需的源代码可在线获取。你需要下载和配置才能构建正确的 Halium 版本。 下表显示了不同 "
"Halium 版本所需的版本。"

#: ../../porting/Intro.rst:35
msgid "Android version"
msgstr "安卓版本"

#: ../../porting/Intro.rst:35
msgid "Halium version"
msgstr "Halium版本"

#: ../../porting/Intro.rst:35
msgid "Lineage OS (LOS)"
msgstr "Lineage OS (LOS)"

#: ../../porting/Intro.rst:37
msgid "7.1"
msgstr "7.1"

#: ../../porting/Intro.rst:37
msgid "14.1"
msgstr "14.1"

#: ../../porting/Intro.rst:38
msgid "9.0"
msgstr "9.0"

#: ../../porting/Intro.rst:38
msgid "16.0"
msgstr "16.0"

#: ../../porting/Intro.rst:44
msgid "Overview of the porting process"
msgstr "移植过程总览"

#: ../../porting/Intro.rst:46 ../../porting/Preparations.rst:2
msgid "Preparations"
msgstr "准备工作"

#: ../../porting/Intro.rst:47
msgid ""
"In this first stage you will choose a target device, gather information "
"about it and choose a suitable workstation (PC or laptop) on which to do "
"your work."
msgstr "首先你需要选择一个目标设备，获得关于它的信息，选择一个合适的工作环境（个人电脑或者笔记本）来移植。"

#: ../../porting/Intro.rst:48
msgid "Set up your Halium build environment and complete a test build"
msgstr "设置好Halium构建环境并测试"

#: ../../porting/Intro.rst:49
msgid ""
"This stage involves downloading all the relevant source code and securing "
"the vendor blobs. You will then build the Halium boot image and system image "
"according to the Halium guide to ensure that all your sources are set up "
"correctly and work in unison."
msgstr ""
"这个步骤需要下载所有与设备驱动相关的源代码。然后，你需要根据Halium指南构建Halium启动镜像（boot image）和系统镜像（system "
"image）来确保源代码设置完毕且可以用。"

#: ../../porting/Intro.rst:50
msgid "Build halium-boot.img and system.img for Ubuntu Touch"
msgstr "为Ubuntu Touch构建halium-boot.img和system.img"

#: ../../porting/Intro.rst:51
#, fuzzy
msgid ""
"Now you need to modify your source tree, after which you will proceed to "
"build the halium-boot.img and system.img to be used in your port."
msgstr "现在你需要处理源代码树，以便构建halium-boot.img和system.img。"

#: ../../porting/Intro.rst:52
msgid "Install and debug the boot process"
msgstr "安装和调试启动流程"

#: ../../porting/Intro.rst:53
msgid ""
"The goal of this stage is to successfully boot into Ubuntu Touch. You will "
"be working from the command line."
msgstr "在这一阶段的目的是成功启动到Ubuntu Touch。你需要从命令行开始搞起。"

#: ../../porting/Intro.rst:54
msgid "Bring up the Ubuntu Touch graphical user interface 'Unity 8'"
msgstr "介绍Ubuntu Touch的GUI, \"Unity 8\""

#: ../../porting/Intro.rst:55
msgid ""
"This stage involves adjusting some configuration and further debugging of "
"your build."
msgstr "这一部分包括对你的构建调整一些设置以及debug"

#: ../../porting/Intro.rst:56
msgid "Complete device configuration"
msgstr "完成设备设置"

#: ../../porting/Intro.rst:57
msgid ""
"Now you need to further debug the build and adjust configuration until all "
"broken functionality is fixed. When you complete this stage you will have a "
"fully functional port, but it will not yet be capable of accepting Over The "
"Air (OTA) updates."
msgstr ""

#: ../../porting/Intro.rst:58
msgid "Build Ubuntu Touch recovery.img"
msgstr ""

#: ../../porting/Intro.rst:59
msgid ""
"The Ubuntu Touch recovery image is a slightly modified recovery image that "
"is tailored to working with the UBports installer"
msgstr ""

#: ../../porting/Intro.rst:61
msgid "Set up the UBports installer for your device"
msgstr ""

#: ../../porting/Intro.rst:61
msgid ""
"When you have completed this stage you will have made it possible for anyone "
"owning the device in question to install and run Ubuntu Touch on it, "
"including the ability to receive OTA updates as they are made available."
msgstr ""

#: ../../porting/Intro.rst:66
msgid "The challenges of the porting process"
msgstr ""

#: ../../porting/Intro.rst:68
msgid ""
"Getting the above components to work properly together always involves an "
"amount of time-consuming configuring and testing. However, it usually also "
"involves a certain amount of modification to parts of the source code, and "
"sometimes quite a bit, depending on your target device."
msgstr ""

#: ../../porting/Intro.rst:70
msgid ""
"Luckily, there is a community of porters out there who are eager to see "
"Ubuntu Touch ported to new devices. When you run into trouble, you should "
"search the sources below (Getting help) to see if others before you have "
"solved the issue. There are online Telegram chat groups you can join to ask "
"for help, but please bear in mind that those participating are doing so in "
"their spare time."
msgstr ""

#: ../../porting/Intro.rst:75
msgid "Prior knowledge and skills"
msgstr ""

#: ../../porting/Intro.rst:77
msgid ""
"Porters come in all sizes and shapes, so to speak. Therefore, this guide "
"does not presuppose extensive knowledge or skills in any particular field. "
"You should, however, as a bare minimum be familiar with some common shell "
"commands and be comfortable working from the terminal on you host PC. "
"Furthermore, the guide is based on a host PC running Linux. If you have some "
"knowledge of programming, this will come in handy at some point, especially "
"if you are familiar with C / C++. Also, you should familiarize yourself with "
"git, setup a github account and start documenting your steps as described in "
"this guide and `the Halium porting guide <http://docs.halium.org/en/latest/"
"porting/first-steps.html>`_ from the very beginning."
msgstr ""

#: ../../porting/Intro.rst:79
msgid ""
"We have attempted to give a certain amount of explanations along the way, "
"but this guide is in not an in-depth reference into architecture and inner "
"workings of Ubuntu Touch, and gaining a deeper understanding will "
"consequently require an amount of research on your part."
msgstr ""

#: ../../porting/Intro.rst:84
msgid "Getting community help"
msgstr "获取社区帮助"

#: ../../porting/Intro.rst:86
msgid ""
"When you run into trouble, and you will, refer to one or more of the sources "
"below:"
msgstr ""

#: ../../porting/Intro.rst:88
msgid "`Telegram: @halium <https://t.me/halium>`_"
msgstr ""

#: ../../porting/Intro.rst:89
#, fuzzy
msgid "`Telegram: @ubports_porting <https://t.me/ubports_porting>`_"
msgstr "Telegram: @ubports_porting"

#: ../../porting/Intro.rst:90
#, fuzzy
msgid "`The UBports Forum <https://forums.ubports.com/category/33/porting>`_"
msgstr "论坛：`forums.ubports.com <https://forums.ubports.com>`__"

#: ../../porting/Intro.rst:91
#, fuzzy
msgid "IRC: #halium on Freenode"
msgstr "IRC: #ubports-porting on freenode"

#: ../../porting/Intro.rst:92
msgid "Matrix: #halium:matrix.org"
msgstr ""

#: ../../porting/Intro.rst:97
msgid "General advice"
msgstr ""

#: ../../porting/Intro.rst:99
msgid ""
"The more rigorous you are at making notes and documenting your steps, the "
"less time you will spend backtracking your steps and guessing your way "
"along. When dealing with issues that arise along the way, it is wise to work "
"on them one at a time. If you try to correct several things at once, you "
"risk ending up trying to guess which changes solved a given issue, which "
"easily leads to breaking the issue in question once more."
msgstr ""

#: ../../porting/Intro.rst:101
msgid ""
"If you are not discouraged after reading this, we wish you the best of luck!"
msgstr ""

#: ../../porting/Preparations.rst:4
msgid ""
"Not all devices can be made to run Ubuntu Touch. Research your target device "
"before you start."
msgstr ""

#: ../../porting/Preparations.rst:6
msgid ""
"To determine your device's specifications, search for it on `GSM Arena "
"<https://www.gsmarena.com>`_ and/or `Device Specification <https://www."
"devicespecifications.com/en>`_."
msgstr ""

#: ../../porting/Preparations.rst:8
msgid ""
"Refer to the `Halium Porting Guide <http://docs.halium.org/en/latest/porting/"
"first-steps.html#pick-an-android-target-device>`_ for further information on "
"requirements and how to check if your device qualifies."
msgstr ""

#: ../../porting/Preparations.rst:13
msgid "Locate relevant guides and other information"
msgstr ""

#: ../../porting/Preparations.rst:15
msgid ""
"If your desired target device complies to the above, the next thing to do is "
"to locate the available guides and other documentation. This step will help "
"you later on when you run into issues developing your port. For now, the "
"main thing to look for is how to unlock your bootloader. (See below)."
msgstr ""

#: ../../porting/Preparations.rst:17
msgid ""
"Head over to the `LineageOS Wiki <https://wiki.lineageos.org/>`_. Look up "
"your device and read and bookmark the guides that are listed there. Try a "
"web search for additional information, specifying both its retail name and "
"the code name you found on the LineageOS site. Be careful to check that the "
"information you gather applies to your specific device, keeping in mind that "
"many devices are sold in a number of different variants with different "
"hardware specifications."
msgstr ""

#: ../../porting/Preparations.rst:19
msgid ""
"Another rich source of information is the `XDA Developers Forum <https://www."
"xda-developers.com/>`_."
msgstr ""

#: ../../porting/Preparations.rst:24
msgid "Unlock the bootloader"
msgstr ""

#: ../../porting/Preparations.rst:26
msgid ""
"Vendors usually provide their devices in a locked bootloader state. This is "
"a kind of software \"seal\" intended to prevent modifications directly to "
"the operating system and system software. If you unlock the bootloader, you "
"will be able to make such modifications, but in this state your device's "
"warranty might be void. The choice is yours, but this step is mandatory if "
"you wish to install Ubuntu Touch on the device."
msgstr ""

#: ../../porting/Preparations.rst:28
msgid ""
"Devices differ and there is no general method that covers all makes and "
"models. Therefore, you need to check the aforementioned guides for "
"instructions on how to unlock the bootloader of your particular device."
msgstr ""

#: ../../porting/Preparations.rst:33
msgid "Install TWRP recovery"
msgstr ""

#: ../../porting/Preparations.rst:35
msgid ""
"You need to install a custom recovery image on your device in order to "
"handle formatting and flashing image files onto it. Head over to the `Team "
"Win Recovery Project <https://twrp.me/Devices/>`_  and locate the image file "
"for your device. Follow the installation instructions provided on the "
"website."
msgstr ""

#: ../../porting/Preparations.rst:40
msgid "Recommendations for the host/build PC"
msgstr ""

#: ../../porting/Preparations.rst:42
msgid ""
"The remainder of this guide presumes you are using a build PC running Linux. "
"Although high performance always is nice, stability and sufficient RAM and "
"harddisk space are the main concerns here. You do not need the latest and "
"the best hardware, nor do you need the latest distribution release. In fact, "
"it is not uncommon to run into issues when choosing the very newest release, "
"as some of the software needed may not yet have been built for it. For "
"example, as of writing the latest release of Ubuntu Linux is 20.04, but many "
"still recommend using the previous long term support release, 18.04."
msgstr ""

#: ../../porting/Preparations.rst:44
msgid ""
"Having completed the steps above, you are now ready to set up your build "
"environment and start the porting process per se (next section)."
msgstr ""

#: ../../porting/UBports_installer.rst:2
msgid "Configuring the UBports installer"
msgstr ""

#: ../../porting/UBports_installer.rst:4 ../../porting/UBports_recovery.rst:4
#: ../../porting/halium_7-1/Configuring.rst:122
#: ../../porting/halium_9/Halium_9_GSI_porting.rst:4
#: ../../porting/halium_9/Halium_9_common_errors.rst:4
msgid "*Work in progress*"
msgstr ""

#: ../../porting/UBports_installer.rst:6 ../../porting/UBports_recovery.rst:6
msgid ""
"For the time being, Halium 7.1 porters should refer to the UBports porting "
"notes on `the UBPorts installer and System image <https://github.com/ubports/"
"porting-notes/wiki/HowTo:-UBports-Installer-&-System-Image-(Halium-7.1)>`_."
msgstr ""

#: ../../porting/UBports_recovery.rst:2
msgid "Building UBports recovery"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:2
#, fuzzy
msgid "Building the images"
msgstr "构建镜像"

#: ../../porting/halium_7-1/Building.rst:4
msgid "A Halium 7.1 - Ubuntu Touch port consists of the following parts:"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:6
msgid "The boot image, halium-boot.img"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:7
msgid "The system image, system.img"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:8
msgid ""
"The UBports - Ubuntu Touch - root file system (hereafter referred to as the "
"*rootfs*)"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:10
msgid ""
"The boot image contains the Linux kernel, the heart of the operating system, "
"which needs to be built from source code for each specific device. The "
"system image is also specific to the device and is similarly built from "
"source code. The rootfs, on the other hand, is maintained by the UBports "
"project and is downloadable in the form of a prebuilt .tar.gz bundle which "
"is then installed together with the system.img."
msgstr ""

#: ../../porting/halium_7-1/Building.rst:15
#, fuzzy
msgid "Build the Halium system image"
msgstr "构建镜像"

#: ../../porting/halium_7-1/Building.rst:17
msgid ""
"First you need to build the Halium system image according to the Halium "
"porting guide. This is not a build you need to install. It is simply a "
"preparation for the actual build for your port. In other words it a test to "
"confirm that you have set up a viable source tree that can be used to do the "
"final build."
msgstr ""

#: ../../porting/halium_7-1/Building.rst:19
#, fuzzy
msgid ""
"Head over to `the Halium porting guide <http://docs.halium.org/en/latest/"
"porting/first-steps.html#set-up-your-build-device>`_ and follow the steps "
"described there remembering that you are building Halium 7.1."
msgstr ""
"在开始前，你需要先去`the Halium porting guide <http://docs.halium.org/en/"
"latest/porting/first-steps.html>`并成功构建你的``systemimage``。一旦你到达安"
"装rootfs这一步，你可以回到此处。"

#: ../../porting/halium_7-1/Building.rst:21
msgid ""
"Once the system image has been successfully built (without errors), you then "
"know that your source tree is correctly set up to proceed. You then return "
"here and proceed."
msgstr ""

#: ../../porting/halium_7-1/Building.rst:26
#, fuzzy
msgid "Build the images for Ubuntu Touch"
msgstr "构建镜像"

#: ../../porting/halium_7-1/Building.rst:29
#, fuzzy
msgid "Fix mount points"
msgstr "修复挂载"

#: ../../porting/halium_7-1/Building.rst:31
#, fuzzy
msgid ""
"Halium-boot's ``mount`` is not aware of SELinux contexts. If your device's "
"file system table (``fstab`` file) includes any contexts, the partition that "
"they are on will fail to mount and your port will not work correctly."
msgstr ""
"Halium-boot的``mount``不知道SELinux的内容。 如果您的设备的``fstab``文件包含任"
"何内容，则它们所在的分区将无法安装，并且您的端口将无法正常工作。"

#: ../../porting/halium_7-1/Building.rst:33
#, fuzzy
msgid ""
"Start by locating your fstab file. This will commonly be inside ``BUILDDIR/"
"device/MANUFACTUER/CODENAME/rootdir/etc`` (e.g. for the Samsung S7 - "
"codename *herolte*: ``halium/device/samsung/herolte/rootdir/etc``) and it is "
"named either ``fstab.qcom`` or ``fstab.devicename``. Open the file for "
"editing."
msgstr ""
"Halium-boot这个过程的第一步是确定你的fstab实际上在哪里。 对于大多数人来说，这"
"是在``BUILDDIR / device / MANUFACTUER / CODENAME / rootdir / etc``中，它被命"
"名为``fstab.qcom``或``fstab.devicename``。 打开文件进行编辑。"

#: ../../porting/halium_7-1/Building.rst:35
#, fuzzy
msgid ""
"If the type of the 'data' or 'userdata' partition is ``f2fs``, you need to "
"change it to ``ext4``."
msgstr ""
"如果 “data” 或 “userdata” 分区的类型是 ``f2fs`` ，则需要将其更改为` "
"`ext4`` 。"

#: ../../porting/halium_7-1/Building.rst:37
msgid ""
"With the file open, remove all ``context=`` options from all block devices "
"in the file. The option will start at the text ``context=`` and end at the "
"comma following it."
msgstr ""
"打开文件后，从文件中的所有块设备中删除所有``context =``选项。 该选项将从文本"
"``context =``开始，并以逗号后面的逗号结束。"

#: ../../porting/halium_7-1/Building.rst:39
msgid ""
"For example, the line ``ro,nosuid,nodev,context=u:object_r:firmware_file:s0,"
"barrier=0`` should become ``ro,nosuid,nodev,barrier=0``"
msgstr ""
"例如，这一行``ro，nosuid，nodev，context = u：object_r：firmware_file：s0，"
"barrier = 0``应该变为``ro，nosuid，nodev，barrier = 0``"

#: ../../porting/halium_7-1/Building.rst:41
msgid "Save and exit."
msgstr "保存并退出。"

#: ../../porting/halium_7-1/Building.rst:46
msgid "Edit kernel config"
msgstr "修改内核配置"

#: ../../porting/halium_7-1/Building.rst:48
#, fuzzy
msgid ""
"Ubuntu Touch requires a slightly different kernel config than Halium, "
"including enabling Apparmor. This is done using a script, ``check-kernel-"
"config``, which is included in the halium-boot repository. Simply run it on "
"your config as follows::"
msgstr ""
"Ubuntu Touch需要与Halium略有不同的内核配置，包括启用应用甲。 幸运的是，我们有"
"一个很好的脚本用于此目的，``check-kernel-config``。 它包含在halium-boot存储库"
"中。 只需在您的配置上运行它，如下所示::"

#: ../../porting/halium_7-1/Building.rst:52
msgid ""
"You may have to do this twice. It will likely fix things both times. Then, "
"run the script without the ``-w`` flag to see if there are any more errors. "
"If there are, fix them manually. Once finished, run the script without the "
"``-w`` flag one more time to make sure everything is correct."
msgstr ""
"你可能要做两次。 它可能会解决问题。 然后，运行没有`-w``标志的脚本，看看是否还"
"有错误。 如果有，请手动修复它们。 完成后，再次运行不带“-w``标志的脚本，以确保"
"一切正确。"

#: ../../porting/halium_7-1/Building.rst:57
msgid "Ubuntu Touch requires setting console=tty0"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:59
msgid ""
"The halium-boot initramfs expects ``/dev/console`` to be a console device "
"and will not start init if it is not available. This is commonly the case on "
"recent devices, because they either have UART disabled or ``console=`` is "
"not specified (null) by default. This can be fixed by supplying "
"``console=tty0`` as the last argument in the kernel cmdline. To achieve "
"this, proceed as follows:"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:61
msgid ""
"It should be done in the makefile named ``BoardConfig.mk`` (or "
"``BoardConfigCommon.mk``) located in the root directory of your device tree, "
"e.g. ``~/halium/device/<vendor>/<model_codename>/BoardConfig.mk``"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:63
msgid "Add the following line::"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:67
msgid ""
"If your makefile already includes a line beginning with "
"``BOARD_KERNEL_CMDLINE``, you may add it just below that to keep things tidy."
msgstr ""

#: ../../porting/halium_7-1/Building.rst:70
msgid ""
"The above method, although the preferred one, may not work for some Samsung "
"devices. The result will be that you cannot get access to the device through "
"ssh after boot, and Unity 8 will not be able to start. If you run into this "
"problem, you can specify the setting in your device's kernel config file "
"instead. Add the following lines::"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:76
msgid ""
"In rare cases the bootloader overwrites the kernel command line argument, "
"rendering the setting above useless. This is the case for the Google Pixel "
"3a (sargo). To deal with this issue, replicate `this commit <https://github."
"com/fredldotme/android_kernel_google_bonito/commit/"
"d0741dded3907f2cf4ecdc02bfcb74fc252763ff>`_."
msgstr ""

#: ../../porting/halium_7-1/Building.rst:79
#, fuzzy
msgid "Build halium-boot.img and system.img"
msgstr "构建 halium-boot"

#: ../../porting/halium_7-1/Building.rst:81
msgid ""
"You are now ready to build the two image files to incorporate the changes "
"you have made. These changes have an impact on both the boot image and the "
"system image, so you will need to rebuild both. The procedure is a simple "
"and straight forward one. Run the sequence of commands below, where BUILDDIR "
"is the root of your halium source tree (e.g. ``~/halium``):"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:83
msgid "``cd BUILDDIR``"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:84
msgid "``source build/envsetup.sh``"
msgstr "``source build/envsetup.sh``"

#: ../../porting/halium_7-1/Building.rst:85
msgid "``breakfast devicename``"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:86
msgid "``mka halium-boot``"
msgstr "``mka halium-boot``"

#: ../../porting/halium_7-1/Building.rst:87
msgid "``mka systemimage``"
msgstr "``mka systemimage``"

#: ../../porting/halium_7-1/Building.rst:90
msgid "Troubleshooting the build process"
msgstr ""

#: ../../porting/halium_7-1/Building.rst:92
msgid ""
"Refer to the `Halium porting guide <http://docs.halium.org/en/latest/porting/"
"build-sources.html#documented-errors>`_"
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:2
#: ../../porting/halium_9/Halium_9_common_errors.rst:2
#, fuzzy
msgid "Common errors"
msgstr "常见问题"

#: ../../porting/halium_7-1/Common_errors.rst:7
msgid "Known issues when building the images for UT"
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:9
msgid ""
"Some known issues you may encounter when building the boot and system images "
"are described in the `Halium porting guide <http://docs.halium.org/en/latest/"
"porting/build-sources.html#documented-errors>`_."
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:14
msgid "Known issues with initial boot"
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:16
msgid ""
"The following are some of the known issues you may encounter in connection "
"with the initial boot process."
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:19
msgid "SSH hangs when trying to connect"
msgstr "尝试连接时 SSH 挂起"

#: ../../porting/halium_7-1/Common_errors.rst:21
msgid ""
"The SSH connection may hang indefinitely when trying to connect. Attempts to "
"stop the connection with Control-C may or may not return you to a shell "
"prompt. If you run ``ssh -vvvv phablet@10.15.19.82``, you only get the "
"following output before the program stops::"
msgstr ""
"尝试连接时，SSH连接可能会无限期挂起。 尝试停止与Control-C的连接可能会也可能不"
"会返回到shell提示符。 如果你运行``ssh -vvvv phablet @ 10.15.19.82``，你只能在"
"程序停止之前得到以下输出::"

#: ../../porting/halium_7-1/Common_errors.rst:29
msgid ""
"This seems to be a common error on arm64 devices with kernel 3.10 when "
"rsyslogd is enabled. If you have this error, please add your voice to "
"`ubports/ubuntu-touch#560`_ and then try the following workaround:"
msgstr ""
"启用rsyslogd时，这似乎是内核3.10的arm64设备上的常见错误。 如果您有此错误，请"
"将您的声音添加到`ubports / ubuntu-touch＃560`_然后尝试以下解决方法："

#: ../../porting/halium_7-1/Common_errors.rst:31
msgid "Reboot the device to recovery and connect with ``adb shell``"
msgstr "重新启动设备进入恢复模式并连接“adb shell”"

#: ../../porting/halium_7-1/Common_errors.rst:32
msgid "Run the following commands to disable rsyslogd::"
msgstr "运行以下命令来禁用 rsyslogd::"

#: ../../porting/halium_7-1/Common_errors.rst:40
msgid ""
"You may now reboot the device. You should be able to connect to SSH once it "
"comes back online."
msgstr "您现在可以重启设备。 一旦重新联机，您应该能够连接到 SSH。"

#: ../../porting/halium_7-1/Common_errors.rst:43
msgid "Device reboots after a minute"
msgstr "一分钟后设备重启"

#: ../../porting/halium_7-1/Common_errors.rst:45
msgid ""
"The device may reboot cleanly after about a minute of uptime. If you are "
"logged in when the reboot occurs, you will see the following message::"
msgstr ""
"在正常运行一分钟后，设备将可以顺利地重启。 如果您在重新启动时登录，您将看到以"
"下消息:"

#: ../../porting/halium_7-1/Common_errors.rst:52
msgid ""
"This happens because ``lightdm``, the Ubuntu Touch display manager, is "
"crashing repeatedly. The system watchdog process sees this and reboots the "
"device."
msgstr ""
"发生这种情况的原因是 Ubuntu Touch 的显示管理器 ``lightdm`` 反复崩溃，系统 "
"watchdog 进程看到了于是重启了设备。"

#: ../../porting/halium_7-1/Common_errors.rst:54
msgid ""
"To fix this problem, log in before the reboot occurs and run the following "
"command::"
msgstr "要解决此问题，请在重新引导之前登录并运行以下命令::"

#: ../../porting/halium_7-1/Common_errors.rst:63
msgid "Known issues when bringing up Unity 8"
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:65
msgid ""
"Below is are a few things to check when you are having trouble bringing up "
"Unity 8."
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:68
msgid "Nothing shows on screen"
msgstr "屏幕上没有显示任何内容"

#: ../../porting/halium_7-1/Common_errors.rst:70
#, fuzzy
msgid ""
"If nothing shows on screen even after adding udev rules to your port, you "
"likely have a problem with graphical applications crashing. This can be "
"caused by Mir servers crashing."
msgstr ""
"如果即使在向端口添加udev规则后屏幕上也没有显示任何内容，则可能是图形应用程序"
"崩溃时出现问题。 有关详细信息，请参阅“Mir服务器崩溃”。"

#: ../../porting/halium_7-1/Common_errors.rst:72
msgid ""
"Mir servers crashing can be caused by many different problems with the port. "
"To troubleshoot more, you can try the following:"
msgstr ""
"Mir服务器崩溃可能是由端口的许多不同问题引起的。 要解决更多问题，您可以尝试以"
"下操作："

#: ../../porting/halium_7-1/Common_errors.rst:75
msgid "Is the Android container running?"
msgstr "Android容器是否正在运行？"

#: ../../porting/halium_7-1/Common_errors.rst:77
msgid ""
"If the Android container is not running, many parts of Ubuntu Touch will not "
"work. Run this command to check on the container's status::"
msgstr ""
"如果Android容器未运行，Ubuntu Touch的许多部分将无法运行。 运行此命令以检查容"
"器的状态::"

#: ../../porting/halium_7-1/Common_errors.rst:81
msgid ""
"If you get output similar to the following, the Android container is running "
"and you can move on to the next troubleshooting step::"
msgstr ""
"如果输出类似于以下内容，则Android容器正在运行，您可以继续执行下一个故障排除步"
"骤::"

#: ../../porting/halium_7-1/Common_errors.rst:88
#, fuzzy
msgid ""
"If you do not get ``State: RUNNING``, the container is stopped. You can run "
"``sudo start lxc-android-config`` to attempt to start it. If the container "
"does not start after that, you can run ``sudo lxc-start -n android -F`` to "
"get a more detailed log to determine why it failed."
msgstr ""
"如果你没有得到“State：RUNNING”，容器就会停止。 你可以运行“sudo start lxc-"
"android-config”来尝试启动它。 如果容器在此之后没有启动，你可以运行“sudo lxc-"
"start -n android -F”来获得更详细的失败原因日志。"

#: ../../porting/halium_7-1/Common_errors.rst:91
msgid "Are all of the Android partitions mounted?"
msgstr "所有 Android 分区都被挂载了么？"

#: ../../porting/halium_7-1/Common_errors.rst:93
msgid ""
"If some partitions used for Android drivers are not mounted, the container "
"may start but not work correctly."
msgstr ""
"如果未安装用于Android驱动程序的某些分区，则容器可能会启动但无法正常工作。"

#: ../../porting/halium_7-1/Common_errors.rst:95
msgid ""
"To check the mounted Android partitions, run ``ls /android``. At least the "
"following folders should be contained within::"
msgstr ""
"要检查已安装的Android分区，请运行“ls /android”。 至少应包含以下文件夹::"

#: ../../porting/halium_7-1/Common_errors.rst:102
msgid ""
"If any of these are missing, run ``dmesg`` to get the kernel log. Mounting "
"Android partitions will start after the following line::"
msgstr ""
"如果确实这些内容，运行``dmesg``以得到内核日志。将在以下行后开始挂载Android分"
"区::"

#: ../../porting/halium_7-1/Common_errors.rst:106
msgid ""
"Try to diagnose and fix any mounting errors that you find in the log for the "
"partitions listed above."
msgstr "试着诊断与修复dmesg列出的分区日志中找到的任何挂载错误。"

#: ../../porting/halium_7-1/Common_errors.rst:110
msgid ""
"Some devices have a ``vendor`` partition that contains proprietary libraries "
"and executables required to run Android. If your device has this partition, "
"make sure that it is mounted in addition to the others listed above."
msgstr ""
"一些设备有个包含Android所需运行的专有库和可执行文件的``vendor``分区。如果你的"
"设备有此分区，确保除上面列出的其他分区之外还挂载了此分区。"

#: ../../porting/halium_7-1/Common_errors.rst:113
msgid "Getting more Mir logs"
msgstr "获取更多 Mir 日志"

#: ../../porting/halium_7-1/Common_errors.rst:115
msgid ""
"If the Android container is running and all of its partitions seem to be "
"mounted, you will need to get a few more logs before enlisting community "
"help."
msgstr ""
"如果Android容器正在运行且其所有分区已挂载，在征求社区帮助前你需要抓取更多日"
"志。"

#: ../../porting/halium_7-1/Common_errors.rst:117
msgid "First, stop the display manager if it is not already::"
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:121
msgid ""
"If you have Wi-Fi working (See `the Halium docs for Wi-Fi`_), install the "
"``libc6-dbg`` package first::"
msgstr ""
"如果你的Wi-Fi能工作（参见`the Halium docs for Wi-Fi`_），先安装``libc6-dbg``"
"包::"

#: ../../porting/halium_7-1/Common_errors.rst:126
msgid "Then, run the following commands to get all of the needed logs::"
msgstr "然后运行以下命令以抓取所有需要的日志::"

#: ../../porting/halium_7-1/Common_errors.rst:132
msgid ""
"Use ``scp`` or a similar program to copy the ``usc.log``, ``usc-gdb.log``, "
"and ``usc-logcat.log`` files from phablet's home folder to your computer. "
"Then, post the content of these files to `paste.ubuntu.com`_, Pastebin, "
"GitHub Gists, or a similar service so the people helping you can view them "
"easily."
msgstr ""
"使用``scp``或其他类似程序从phablet的家目录复制``usc.log``、``usc-gdb.log``和"
"``usc-logcat.log``文件到电脑上。接着上传这些文件内容到`paste.ubuntu.com`_，"
"Pastebin，GitHub Gists或帮你的人能够轻松浏览到的相似服务。"

#: ../../porting/halium_7-1/Common_errors.rst:135
msgid "Programs hang before crashing"
msgstr "程序在崩溃前挂起"

#: ../../porting/halium_7-1/Common_errors.rst:137
msgid ""
"Sometimes processes will hang for a very long time and then abort or "
"segfault. The reason for the hang is apport, which attempts to collect "
"useful information about the crash before allowing the program to stop."
msgstr ""
"有时进程会挂起很长时间，然后中止或出现段错误。 挂起的原因是 apport，它试图在"
"允许程序停止之前收集有关崩溃的有用信息。"

#: ../../porting/halium_7-1/Common_errors.rst:139
msgid ""
"If you don't need apport's information and would rather have the programs "
"crash faster while troubleshooting, issue the following commands::"
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:145
msgid "Enable /var/log/syslog"
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:147
msgid ""
"Normally the writing to the syslog is disabled. During porting it can be "
"useful to enable this::"
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:154
msgid ""
"Now rsyslogd will write to the file and you can use it as usual. For example "
"``less /var/log/syslog`` or ``tail -f /var/log/syslog``."
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:162
msgid "Known issues when configuring the device"
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:165
msgid "Apps crash on launch"
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:167
msgid ""
"Check if keyboard vibration works. If it does not, this is a good indication "
"that you have not properly applied the apparmor kernel patches."
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:169
msgid "Refer to section :ref:`Apply-apparmor-kernel-patches`."
msgstr ""

#: ../../porting/halium_7-1/Common_errors.rst:171
msgid "This section is a *Work in progress*"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:2
#, fuzzy
msgid "Configuring Ubuntu Touch"
msgstr "运行 Ubuntu Touch"

#: ../../porting/halium_7-1/Configuring.rst:4
msgid ""
"In the previous section you adjusted a configuration file directly in the "
"UBports rootfs. The rootfs contains a number of other configuration files "
"with some standard settings that do not necessarily conform to your device. "
"These must be modified to fit your device. The rootfs itself is read only "
"and identical for all devices. You cannot modify the rootfs itself. Instead, "
"the correct way to adjust the configuration is with overlay files, as "
"described below."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:9
msgid "Overlay files"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:11
msgid ""
"Note that as a rule of thumb, the method described below applies if the file "
"you need to edit can be found in the /etc directory (or a subdirectory of "
"this) on your device. You should not attempt to overwrite files located "
"elsewhere with overlay files using this method."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:13
msgid ""
"In your device directory, create a subdirectory named 'ubuntu'. Collect the "
"files you wish to inject into your build in this directory."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:18
msgid "Relevant files are for example (but this list is incomplete):"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:16
msgid "70-android.rules (the udev rules for your device, see previous section)"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:17
msgid "android.conf (for display scaling, see below)"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:18
msgid "touch.pa (for pulseaudio sound configuration/initialization, see below)"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:20
msgid ""
"These files are then injected by adding a code block to the file ``device."
"mk`` in your device directory. For the three files above add the following "
"code::"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:29
msgid "Explanation:"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:31
msgid ""
"The string before the colon '$(LOCAL_PATH)/ubuntu/70-android.rules' "
"specifies the path to the source file to be injected. The string after the "
"colon 'system/halium/lib/udev/rules.d/70-android.rules' specifies where you "
"want it placed on the device."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:37
msgid "The general steps to follow are thus:"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:34
msgid ""
"Copy the file you wish to modify to the 'ubuntu' directory you have created "
"in your device source tree."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:35
msgid "Edit the file as needed."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:36
msgid ""
"Add a line to the PRODUCT_COPY_FILES section of your device.mk file as shown "
"above."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:37
msgid "Rebuild your system.img and reflash together with the ubports rootfs."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:41
msgid ""
"The target paths for the files mentioned above are *not* randomly chosen. "
"You must use the specified paths."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:45
msgid ""
"When you specify target path 'system/halium/etc/myfilename' your file "
"'myfilename' will end up in the '/etc' directory of your device (i.e. "
"without the leading 'system/halium')"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:50
#, fuzzy
msgid "Rebuild system.img"
msgstr "包含在构建系统中的内容"

#: ../../porting/halium_7-1/Configuring.rst:52
msgid ""
"When you have made the adjustments you need and prepared your source as "
"described above, you have to rebuild your system.img: ``mka systemimage``. "
"When rebuilding the system image after small changes like these, you need "
"not ``mka clean`` first. However, changes to PRODUCT_PROPERTY_OVERRIDES "
"might not get detected by the build system. Go to your output folder, enter "
"the system folder and delete ``build.prop`` in order to get it regenerated."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:55
#, fuzzy
msgid "Udev rules"
msgstr "添加 udev 规则"

#: ../../porting/halium_7-1/Configuring.rst:57
msgid ""
"Extract the file 70-android.rules which you created in the previous section "
"using ``adb pull`` or ``scp`` and copy it to the 'ubuntu' directory of your "
"device source tree. Complete steps 3 and 4 above."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:62
#: ../../porting/halium_7-1/Reference_material.rst:10
msgid "Display scaling"
msgstr "显示缩放"

#: ../../porting/halium_7-1/Configuring.rst:64
#, fuzzy
msgid ""
"There are two variables that set the content scaling for Unity 8 and Ubuntu "
"Touch applications: ``GRID_UNIT_PX`` and ``QTWEBKIT_DPR``."
msgstr ""
"当设备启动时，你应当认识到所有的东西都很小。有两个变量设置Unity 8和Ubuntu "
"Touch应用的内容缩放：``GRID_UNIT_PX``和``QTWEBKIT_DPR``。"

#: ../../porting/halium_7-1/Configuring.rst:66
#, fuzzy
msgid ""
"There are also other options available that may be useful for you depending "
"on your device's form factor. These are mentioned below and all of these "
"settings are explained in depth in the reference section on :ref:`Display-"
"settings`."
msgstr ""
"根据设备的外形尺寸，其他一些可用的选项可能对您有用。下面将讨论这些内容。"

#: ../../porting/halium_7-1/Configuring.rst:68
#, fuzzy
msgid ""
"All of these settings are guessed by Unity 8 if none are set. There are many "
"cases, however, where the guess is wrong (for example, very high resolution "
"phone displays will be identified as desktop computers). To manually set a "
"value for these variables, simply edit the file at ``etc/ubuntu-touch-"
"session.d/android.conf`` specifying them. For example, this is the file for "
"the Nexus 7 tablet::"
msgstr ""
"如果没有设置，Unity 8会猜测所有这些设置。然而有很多种情况会猜错（如，高分辨率"
"手机显示会被辨认为桌面电脑）。要手动设置这些变量，只需在``/etc/ubuntu-"
"session.d/[codename].conf``创建文件并指定它们。例如这是Nexus 7平板的文件::"

#: ../../porting/halium_7-1/Configuring.rst:76
#, fuzzy
msgid ""
"The :ref:`Display-settings` section details methods for deriving values for "
"these variables."
msgstr "这些变量的取值方法如下。"

#: ../../porting/halium_7-1/Configuring.rst:78
msgid ""
"Once you have adjusted the ``android.conf`` file to the display settings "
"needed for your device, this file should be incorporated into your build."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:80
msgid ""
"Create the file android.conf in your 'ubuntu' directory and enter the "
"settings you determined and tested in the previous section. Complete steps 3 "
"and 4 above, taking care to remember the note on how to :ref:`Rebuild-system."
"img`."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:85
msgid "Apply apparmor kernel patches"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:87
msgid "`What is apparmor? <https://wiki.ubuntu.com/AppArmor>`_"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:89
msgid ""
"Start by downloading the backported `apparmor patch <https://github.com/"
"ubports/apparmor-backports-ut>`_ corresponding to your device's kernel "
"version. Your kernel version is specified at the beginning of your kernel "
"defconfig file, i.e. the one you edited in section :ref:`Edit-kernel-config` "
"above."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:91
msgid ""
"You now need to delete your entire BUILDDIR/kernel/VENDOR/MODEL/security/"
"apparmor subdirectory and replace it with the one you downloaded. Then "
"rebuild halium-boot."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:93
msgid ""
"If you get errors when building, you will need to resolve them one by one, "
"modifying your source code as needed. Note that you should only modify the "
"code in the apparmor subdirectory if at all possible. Modifying code "
"elsewhere will more than likely just compound your problems."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:95
msgid ""
"Seek help as needed from one of the sources mentioned in section :ref:"
"`Getting-community-help`."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:98
msgid "Sound configuration"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:100
msgid ""
"The supplied touch.pa file located in the /etc/pulse directory of your "
"device needs adjustment. Extract the file and copy it to your 'ubuntu' "
"directory."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:102
msgid "Locate the line::"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:106
msgid "and replace it with this::"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:110
msgid "At the end of the file, append this::"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:117
msgid ""
"Now complete steps 3 and 4, taking care to remember the note on how to :ref:"
"`Rebuild-system.img`."
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:120
msgid "Further configuration"
msgstr ""

#: ../../porting/halium_7-1/Configuring.rst:124
msgid ""
"For the time being, refer to the `porting faq <https://pad.ubports.com/p/"
"porting-faq>`_ and `porting check list <https://pad.ubports.com/p/"
"PortChecklist>`_."
msgstr ""

#: ../../porting/halium_7-1/Installing.rst:2
msgid "Installing"
msgstr ""

#: ../../porting/halium_7-1/Installing.rst:7
msgid "Install and debug initial boot"
msgstr ""

#: ../../porting/halium_7-1/Installing.rst:11
#, fuzzy
msgid ""
"These steps  will wipe **all** of the data on your device. If there is "
"anything that you would like to keep, ensure it is backed up and copied to a "
"safe location before continuing."
msgstr ""
"这些步骤将清除设备上的**所有**数据。 如果您有任何需要保留的内容，请确保在继续"
"之前将其备份并从设备上复制下来。"

#: ../../porting/halium_7-1/Installing.rst:13
#, fuzzy
msgid ""
"Now that you have built halium-boot, you are ready to install Ubuntu Touch "
"on your device."
msgstr ""
"如今你已经:doc:`built halium-boot <building-halium-boot>`，我们已准备好在你的"
"设备上安装Ubuntu Touch。"

#: ../../porting/halium_7-1/Installing.rst:15
#, fuzzy
msgid ""
"In order to install Ubuntu Touch, you will need a recovery with Busybox, "
"such as TWRP, installed on your phone. If you have not done so yet, refer to "
"section :ref:`Install-TWRP-recovery` and install it now."
msgstr ""
"为了安装 Ubuntu Touch，您需要在手机上安装带有 Busybox 的 Recovery （比如 "
"TWRP）。 您还需要确保 /data 分区使用 ext4 文件系统格式化，并且没有任何进行加"
"密。"

#: ../../porting/halium_7-1/Installing.rst:17
msgid ""
"You will also need to ensure the ``/data`` partition is formatted with "
"``ext4`` and does not have any encryption on it. Boot into the recovery "
"image you just installed, check and adjust as necessary."
msgstr ""

#: ../../porting/halium_7-1/Installing.rst:20
#, fuzzy
msgid "Flash halium-boot"
msgstr "``mka halium-boot``"

#: ../../porting/halium_7-1/Installing.rst:22
#, fuzzy
msgid ""
"To install halium-boot, reboot your phone into fastboot mode. Then do the "
"following from your Halium tree::"
msgstr ""
"我们需要在安装镜像之前安装 halium-boot 镜像。 重新启动手机进入 fastboot 模"
"式，然后在 Halium 树中执行以下操作::"

#: ../../porting/halium_7-1/Installing.rst:27
msgid ""
"If you have trouble accessing your device in fastboot mode, but are able to "
"access it in TWRP recovery mode using adb, then boot into recovery mode and "
"try the following alternative method::"
msgstr ""

#: ../../porting/halium_7-1/Installing.rst:32
msgid ""
"On your device, choose *Install* in the TWRP menu, navigate to the sdcard "
"directory, choose *Image*, select your image file, select *Boot* and swipe "
"to flash."
msgstr ""

#: ../../porting/halium_7-1/Installing.rst:35
msgid ""
"Samsung devices: Flashing halium-boot.img on Samsung devices is done using "
"the Heimdall flashing utility (on Linux) or the Odin utility (on Windows) "
"after first bringing the device into 'download mode'. See more information "
"on these utilities `here <http://docs.halium.org/en/latest/porting/install-"
"build/reference-rootfs.html#install-hybris-boot-img-on-samsung-devices>`_. "
"Follow the instructions for the utility you choose, including the specific "
"flashing command for flashing the boot partition. Install system.img and "
"rootfs (below) with the device in recovery mode."
msgstr ""

#: ../../porting/halium_7-1/Installing.rst:38
msgid "Install system.img and rootfs"
msgstr "安装 system.img 和 rootfs 文件系统"

#: ../../porting/halium_7-1/Installing.rst:40
msgid ""
"Next you need to download the appropriate rootfs for your device. At the "
"moment there are two available versions, a 32 bit and a 64 bit one."
msgstr ""

#: ../../porting/halium_7-1/Installing.rst:42
msgid ""
"Simply download ``ubports-touch.rootfs-xenial-armhf.tar.gz`` (32 bit) from "
"`our CI server <https://ci.ubports.com/job/xenial-rootfs-armhf/>`__."
msgstr ""

#: ../../porting/halium_7-1/Installing.rst:44
msgid ""
"If you have a 64-bit ARM (aarch64) device, this same rootfs should work for "
"you. You can also try the 64 bit version keeping in mind that you may "
"possibly run into more issues with this owing to the current state of "
"development of this rootfs. (If you have an x86 device, let us know. There "
"is no rootfs available for these yet.)"
msgstr ""

#: ../../porting/halium_7-1/Installing.rst:46
msgid ""
"Clone or download the `halium-install repository <https://gitlab.com/"
"JBBgameich/halium-install>`_. This repository contains tools that can be "
"used to install a Halium system image and distribution rootfs. Reboot your "
"device to recovery (e.g. TWRP), to get adb access again. Now use the "
"``halium-install`` script to install Ubuntu Touch on your device::"
msgstr ""

#: ../../porting/halium_7-1/Installing.rst:51
#, fuzzy
msgid ""
"The script will copy and extract the files to their proper places, then "
"allow you to set the user password for your device (the *phablet* user's "
"password)."
msgstr "脚本将复制和解压文件到合适位置，然后会允许你设置平板电脑用户的密码。"

#: ../../porting/halium_7-1/Installing.rst:54
msgid "Get SSH access"
msgstr "获得 SSH 访问权限"

#: ../../porting/halium_7-1/Installing.rst:56
#, fuzzy
msgid ""
"When your device boots, it will likely stay at the bootloader screen. "
"However, you should also get a new network connection on the computer you "
"have it plugged in to. You will need to use this to debug the system."
msgstr ""
"当您的设备启动时，它可能会卡在引导界面上。 但是，您还应该在插入设备的计算机上"
"获得新的网络连接。 我们将使用它来调试系统。"

#: ../../porting/halium_7-1/Installing.rst:58
#, fuzzy
msgid ""
"To confirm that your device has booted correctly, on your host computer, run "
"``dmesg -w`` and watch for \"GNU/Linux device\" in the output. If you "
"instead get something similar to \"Halium initrd Failed to boot\", please "
"get in contact with us so we can find out why."
msgstr ""
"要确认设备正确启动，运行``dmesg -w``并留意输出中的\"GNU/Linux device\"。如果"
"你观察到类似于\"Halium initrd Failed to boot\"的信息，请联系我们以便我们排查"
"原因。"

#: ../../porting/halium_7-1/Installing.rst:60
#, fuzzy
msgid ""
"Similar to the Halium reference rootfs, you should `set your computer's IP "
"on the newly connected RNDIS interface <http://docs.halium.org/en/latest/"
"porting/debug-build/logging-in.html>`__ to ``10.15.19.100`` if you don't get "
"one automatically. Then, run the following to access your device::"
msgstr ""
"类似于`Halium reference rootfs <http://docs.halium.org/en/latest/porting/"
"debug-build/logging-in.html>`__，如果你并不想自动获得IP，可以在电脑新连接的"
"RNDIS接口上设置的IP为``10.15.19.100``。接着运行以下命令以访问你的设备::"

#: ../../porting/halium_7-1/Installing.rst:64
msgid "The password will be the one that you set while running halium-install."
msgstr "密码将是您在运行 halium-install 时设置的密码。"

#: ../../porting/halium_7-1/Installing.rst:67
msgid "Troubleshooting initial boot"
msgstr ""

#: ../../porting/halium_7-1/Installing.rst:69
msgid "Refer to :ref:`Known-issues-with-initial-boot`."
msgstr ""

#: ../../porting/halium_7-1/Reference_material.rst:2
msgid "Reference material"
msgstr ""

#: ../../porting/halium_7-1/Reference_material.rst:7
msgid "Display settings"
msgstr "显示设置"

#: ../../porting/halium_7-1/Reference_material.rst:12
msgid ""
"``GRID_UNIT_PX`` (Pixels per Grid Unit or Px/GU) is specific to each device. "
"Its goal is to make the user interface of the system and its applications "
"the same *perceived* size regardless of the device they are displayed on. It "
"is primarily dependent on the pixel density of the device’s screen and the "
"distance to the screen the user is at. The latter value cannot be "
"automatically detected and is based on heuristics. We assume that tablets "
"and laptops are the same distance and that they are held at 1.235 times the "
"distance phones tend to be held at."
msgstr ""
"``GRID_UNIT_PX`` (Pixels per Grid Unit or Px/GU)用于每个设备。目标是使系统用"
"户界面和应用具有一致的“感官”大小，而不管它们显示在什么设备上。它主要取决于设"
"备屏幕的像素密度和用户到屏幕的距离。后一个值不能自动检测，它是基于启发式的。"
"我们假设平板电脑和笔记本电脑的距离是一样的，它们的距离是手机的1.235倍。"

#: ../../porting/halium_7-1/Reference_material.rst:14
msgid ""
"``QTWEBKIT_DPR`` sets the display scaling for the Oxide web engine, so "
"changes to this value will affect the scale of the browser and webapps."
msgstr ""
"``QTWEBKIT_DPR``设置Oxide网页引擎的显示尺寸，本值的改变将影响浏览器和web应用"
"的尺寸。"

#: ../../porting/halium_7-1/Reference_material.rst:16
msgid ""
"A reference device has been chosen from which we derive the values for all "
"other devices. The reference device is a laptop with a 120ppi screen. "
"However, there is no exact formula since these options are set for "
"*perceived* size rather than *physical* size. Here are some values for other "
"devices so you may derive the correct one for yours:"
msgstr ""
"选择了一个参考设备，可从中得出所有其他设备的值。参考设备是一个120ppi屏幕的手"
"持电脑。但是，由于这些选项是针对*感知*大小而不是*物理*大小设置的，因此没有确"
"切的公式。 以下是其他设备的一些值，因此你可以为自己的设备得出正确的值："

#: ../../porting/halium_7-1/Reference_material.rst:19
msgid "Device"
msgstr "设备"

#: ../../porting/halium_7-1/Reference_material.rst:19
msgid "Resolution"
msgstr "分辨率"

#: ../../porting/halium_7-1/Reference_material.rst:19
msgid "Display Size"
msgstr "显示大小"

#: ../../porting/halium_7-1/Reference_material.rst:19
msgid "PPI"
msgstr "PPI"

#: ../../porting/halium_7-1/Reference_material.rst:19
msgid "Px/GU"
msgstr "Px/GU"

#: ../../porting/halium_7-1/Reference_material.rst:19
msgid "QtWebKit DPR"
msgstr "QtWebKit DPR"

#: ../../porting/halium_7-1/Reference_material.rst:21
msgid "'Normal' density laptop"
msgstr "“正常”密度笔记本"

#: ../../porting/halium_7-1/Reference_material.rst:21
#: ../../porting/halium_7-1/Reference_material.rst:23
msgid "N/A"
msgstr "N/A"

#: ../../porting/halium_7-1/Reference_material.rst:21
msgid "96-150"
msgstr "96-150"

#: ../../porting/halium_7-1/Reference_material.rst:21
msgid "8"
msgstr "8"

#: ../../porting/halium_7-1/Reference_material.rst:21
msgid "1.0"
msgstr "1.0"

#: ../../porting/halium_7-1/Reference_material.rst:22
msgid "ASUS Nexus 7"
msgstr "ASUS Nexus 7"

#: ../../porting/halium_7-1/Reference_material.rst:22
msgid "1280x800"
msgstr "1280x800"

#: ../../porting/halium_7-1/Reference_material.rst:22
msgid "7\""
msgstr "7 英寸"

#: ../../porting/halium_7-1/Reference_material.rst:22
msgid "216"
msgstr "216"

#: ../../porting/halium_7-1/Reference_material.rst:22
msgid "12"
msgstr "12"

#: ../../porting/halium_7-1/Reference_material.rst:22
#: ../../porting/halium_7-1/Reference_material.rst:24
#: ../../porting/halium_7-1/Reference_material.rst:25
#: ../../porting/halium_7-1/Reference_material.rst:26
msgid "2.0"
msgstr "2.0"

#: ../../porting/halium_7-1/Reference_material.rst:23
msgid "'High' density laptop"
msgstr "高密度笔记本"

#: ../../porting/halium_7-1/Reference_material.rst:23
msgid "150-250"
msgstr "150-250"

#: ../../porting/halium_7-1/Reference_material.rst:23
msgid "16"
msgstr "16"

#: ../../porting/halium_7-1/Reference_material.rst:23
msgid "1.5"
msgstr "1.5"

#: ../../porting/halium_7-1/Reference_material.rst:24
msgid "Samsung Galaxy Nexus"
msgstr "Samsung Galaxy Nexus"

#: ../../porting/halium_7-1/Reference_material.rst:24
msgid "1280x720"
msgstr "1280x720"

#: ../../porting/halium_7-1/Reference_material.rst:24
#, fuzzy
msgid "4.65\""
msgstr "4.65\""

#: ../../porting/halium_7-1/Reference_material.rst:24
msgid "316"
msgstr "316"

#: ../../porting/halium_7-1/Reference_material.rst:24
#: ../../porting/halium_7-1/Reference_material.rst:25
msgid "18"
msgstr "18"

#: ../../porting/halium_7-1/Reference_material.rst:25
msgid "LG Nexus 4"
msgstr "LG Nexus 4"

#: ../../porting/halium_7-1/Reference_material.rst:25
msgid "1280x768"
msgstr "1280x768"

#: ../../porting/halium_7-1/Reference_material.rst:25
#, fuzzy
msgid "4.7\""
msgstr "4.7\""

#: ../../porting/halium_7-1/Reference_material.rst:25
msgid "320"
msgstr "320"

#: ../../porting/halium_7-1/Reference_material.rst:26
msgid "Samsung Nexus 10"
msgstr "Samsung Nexus 10"

#: ../../porting/halium_7-1/Reference_material.rst:26
msgid "2560x1600"
msgstr "2560x1600"

#: ../../porting/halium_7-1/Reference_material.rst:26
#, fuzzy
msgid "10.1\""
msgstr "10.1\""

#: ../../porting/halium_7-1/Reference_material.rst:26
msgid "299"
msgstr "299"

#: ../../porting/halium_7-1/Reference_material.rst:26
msgid "20"
msgstr "20"

#: ../../porting/halium_7-1/Reference_material.rst:27
msgid "Fairphone 2"
msgstr "Fairphone 2"

#: ../../porting/halium_7-1/Reference_material.rst:27
#: ../../porting/halium_7-1/Reference_material.rst:28
msgid "1080x1920"
msgstr "1080x1920"

#: ../../porting/halium_7-1/Reference_material.rst:27
msgid "5\""
msgstr "5 英寸"

#: ../../porting/halium_7-1/Reference_material.rst:27
msgid "440"
msgstr "440"

#: ../../porting/halium_7-1/Reference_material.rst:27
#: ../../porting/halium_7-1/Reference_material.rst:28
msgid "23"
msgstr "23"

#: ../../porting/halium_7-1/Reference_material.rst:27
#: ../../porting/halium_7-1/Reference_material.rst:28
msgid "2.5"
msgstr "2.5"

#: ../../porting/halium_7-1/Reference_material.rst:28
msgid "LG Nexus 5"
msgstr "LG Nexus 5"

#: ../../porting/halium_7-1/Reference_material.rst:28
#, fuzzy
msgid "4.95\""
msgstr "4.95\""

#: ../../porting/halium_7-1/Reference_material.rst:28
msgid "445"
msgstr "445"

#: ../../porting/halium_7-1/Reference_material.rst:31
msgid ""
"Experiment with a few values to find one that feels good when compared to "
"the Ubuntu Touch experience on other devices. If you are unsure of which is "
"the best, share some pictures (including some object for scale) along with "
"the device specs with us."
msgstr ""

#: ../../porting/halium_7-1/Reference_material.rst:33
msgid "There are two other settings that may be of interest to you:"
msgstr ""

#: ../../porting/halium_7-1/Reference_material.rst:36
msgid "Form factor"
msgstr ""

#: ../../porting/halium_7-1/Reference_material.rst:38
msgid ""
"``FORM_FACTOR`` specifies the device's form factor. This value is set as the "
"device's Chassis, which you can find by running ``hostnamectl``. The "
"acceptable values are ``handset``, ``tablet``, ``laptop`` and ``desktop``. "
"Apps such as the gallery use this information to change their functionality. "
"For more information on the Chassis, see the freedesktop.org hostnamed "
"specification."
msgstr ""

#: ../../porting/halium_7-1/Reference_material.rst:41
msgid "Native orientation"
msgstr ""

#: ../../porting/halium_7-1/Reference_material.rst:43
msgid ""
"``NATIVE_ORIENTATION`` sets the display orientation for the device's built-"
"in screen. This value is used whenever autorotation isn't working correctly "
"or when an app wishes to be locked to the device's native orientation. "
"Acceptable values are ``landscape``, which is normally used for tablets, "
"laptops, and desktops; and ``portrait``, which is usually used for phone "
"handsets."
msgstr ""

#: ../../porting/halium_7-1/Unity8.rst:2
msgid "The graphical UI"
msgstr ""

#: ../../porting/halium_7-1/Unity8.rst:7
msgid "Bring up Unity 8 (the graphical UI)"
msgstr ""

#: ../../porting/halium_7-1/Unity8.rst:9
msgid ""
"Now that you're logged in, there remain a number of things to be configured "
"before Ubuntu Touch will be fully functional on your device. The correct way "
"to do this is by storing these settings in overlay files (:ref:`Overlay-"
"files`), and not by making the root directory writeable, as described below. "
"However, in order to quickly set up udev rules which are necessary to "
"complete subsequent steps, you can use this method for first time setup."
msgstr ""

#: ../../porting/halium_7-1/Unity8.rst:12
msgid "Make / writable"
msgstr "让 / （根目录）可写"

#: ../../porting/halium_7-1/Unity8.rst:14
#, fuzzy
msgid ""
"Before you make any changes to the rootfs (which will be required for the "
"next steps), you'll need to remount it with write permissions. To do that, "
"run the following command::"
msgstr ""
"在我们对你的rootfs更改前（下一步需要），你需要用写权限重新挂载它。要做到这一"
"点，运行以下命令::"

#: ../../porting/halium_7-1/Unity8.rst:19
msgid "Add udev rules"
msgstr "添加 udev 规则"

#: ../../porting/halium_7-1/Unity8.rst:21
msgid ""
"You must create some udev rules to allow Ubuntu Touch software to access "
"your hardware. Run the following command, replacing [codename] with your "
"device's codename::"
msgstr ""
"你必须创建一些udev规则以允许Ubuntu Touch软件访问你的硬件。运行以下命令，替换"
"[codename]为你设备的codename::"

#: ../../porting/halium_7-1/Unity8.rst:26
msgid ""
"Now, reboot the device. If all has gone well, you will eventually see the "
"Ubuntu Touch spinner followed by Unity 8. Your lock password is the same as "
"you set for SSH."
msgstr ""
"现在重启设备。如果一切正常，你最终将看到Ubuntu Touch spinner紧跟着Unity 8。锁"
"定密码和你SSH设置的密码相同。"

#: ../../porting/halium_7-1/Unity8.rst:28
msgid ""
"When Unity 8 is first brought up on your device, you will probably notice "
"that everything is very small. The :ref:`Display-scaling` section describes "
"how to deal with this."
msgstr ""

#: ../../porting/halium_7-1/Unity8.rst:31
#, fuzzy
msgid "Problems when bringing up Unity 8"
msgstr "运行 Ubuntu Touch 的平常问题"

#: ../../porting/halium_7-1/Unity8.rst:33
msgid "Refer to :ref:`Known-issues-when-bringing-up-Unity-8`."
msgstr ""

#: ../../porting/halium_7-1/index.rst:2
msgid "Halium 7.1"
msgstr ""

#: ../../porting/halium_7-1/index.rst:4
msgid ""
"The four first sections below will take you through the porting steps "
"described in the introduction."
msgstr ""

#: ../../porting/halium_7-1/index.rst:6
msgid ""
"The next section is a collection of documented errors and how to deal with "
"them. These have been kept separate from the porting instructions themselves "
"for the sake of keeping these brief. However, each section of the porting "
"instructions concludes with a direct link to the relevant information on "
"issues and errors."
msgstr ""

#: ../../porting/halium_7-1/index.rst:8
msgid "The final section contains reference material that may be useful."
msgstr ""

#: ../../porting/halium_9/Halium_9_GSI_porting.rst:2
msgid "GSI Porting"
msgstr ""

#: ../../porting/halium_9/Halium_9_GSI_porting.rst:6
msgid ""
"For the time being, refer to the UBports porting notes on `the generic "
"system image (GSI) <https://github.com/ubports/porting-notes/wiki/Generic-"
"system-image-(GSI)>`_ and `Halium 9 porting <https://github.com/ubports/"
"porting-notes/wiki/Halium-9>`_."
msgstr ""

#: ../../porting/halium_9/index.rst:2
msgid "Halium 9"
msgstr ""

#~ msgid ""
#~ "Halium-boot is a new proposed boot image in the Halium project, replacing "
#~ "hybris-boot. We will be building and using it for Ubuntu Touch."
#~ msgstr ""
#~ "Halium-boot是 Halium 项目新推出的启动映像，用以取代 hybris-boot。 我们将"
#~ "为 Ubuntu Touch 构建和使用它。"

#~ msgid ""
#~ "Once halium-boot is in place, you can build it quite simply. You will "
#~ "also need to rebuild system.img due to our changes."
#~ msgstr ""
#~ "一旦 halium-boot 到位，您就可以非常简单地构建它。 但由于我们的改动了它，您"
#~ "还需要重建 system.img。"

#~ msgid "``cd`` to your Halium BUILDDIR"
#~ msgstr "``cd`` （切换到）您的 Halium 编译目录（BUILDDIR）"

#~ msgid "Run ``breakfast`` or ``lunch``, whichever you use for your device"
#~ msgstr "运行``breakfast``或``lunch``，无论您使用哪种设备"

#~ msgid "Continue on"
#~ msgstr "继续"

#~ msgid ""
#~ "Now that you have halium-boot built, you can move on to :doc:"
#~ "`installing-16-04`."
#~ msgstr "现在您已经构建了 halium-boot，请移步到 :doc:`installing-16-04`。"

#~ msgid "Common installation problems"
#~ msgstr "常见安装问题"

#~ msgid ""
#~ "This page details problems commonly faced while following the :doc:"
#~ "`installing-16-04` page."
#~ msgstr "此页面详细说明了遵循：doc：`installing-16-04`页面时常遇到的问题。"

#~ msgid ""
#~ "This page details problems commonly faced while following the :doc:"
#~ "`running-ut` page."
#~ msgstr "本页面详细说明按照:doc:`running-ut`页面操作遇到的常见问题。"

#~ msgid "Mir servers crash"
#~ msgstr "Mir 服务器崩溃"

#~ msgid "Installing Ubuntu Touch 16.04 images on Halium"
#~ msgstr "在 Halium 上构建 Ubuntu Touch 16.04 镜像"

#~ msgid "Install halium-boot"
#~ msgstr "安装 halium-boot"

#~ msgid "Download the rootfs"
#~ msgstr "下载 rootfs 文件系统"

#~ msgid ""
#~ "Next we'll need to download the rootfs (root filesystem) that's "
#~ "appropriate for your device. Right now, we only have one available. "
#~ "Simply download ``ubports-touch.rootfs-xenial-armhf.tar.gz`` from `our CI "
#~ "server <https://ci.ubports.com/job/xenial-rootfs-armhf/>`__. If you have "
#~ "a 64-bit ARM (aarch64) device, this same rootfs should work for you. If "
#~ "you have an x86 device, let us know. We do not have a rootfs available "
#~ "for these yet."
#~ msgstr ""
#~ "接下来我们需要下载适合你设备的rootfs（root filesystem，根文件系统）。如今"
#~ "我们只有一种可用，只需从`our CI server <https://ci.ubports.com/job/xenial-"
#~ "rootfs-armhf/>`__上下载``ubports-touch.rootfs-xenial-armhf.tar.gz``。如果"
#~ "你有一个64位ARM(aach64)设备，这个rootfs就很适合。如果你有一个x86设备，请告"
#~ "知我们。我们目前暂时没有这些（x86设备）可用的rootfs。"

#~ msgid "Todo"
#~ msgstr "待定"

#~ msgid ""
#~ "Change the rootstock link to point to UBports once the actuallyfixit PR "
#~ "is merged."
#~ msgstr "一旦actuallyfixit PR被合并，会更改rootstock链接指向UBports。"

#~ msgid ""
#~ "Download the halium-install-standalone script from `jbbgameich/halium-"
#~ "install's releases <https://github.com/JBBgameich/halium-install/releases/"
#~ ">`_ (`direct link to download <https://github.com/JBBgameich/halium-"
#~ "install/releases/download/continuous/halium-install-standalone.sh>`__). "
#~ "Boot your device into recovery and run the script as follows::"
#~ msgstr ""
#~ "从`jbbgameich/halium-install's releases <https://github.com/JBBgameich/"
#~ "halium-install/releases/>`_ (`direct link to download <https://github.com/"
#~ "JBBgameich/halium-install/releases/download/continuous/halium-install-"
#~ "standalone.sh>`__)上下载halium-install-standalone脚本，重启设备进入"
#~ "recovery并按如下方式运行脚本::"

#~ msgid ""
#~ "If you have any errors while performing these steps, check see if any of "
#~ "the following suggestions match what you are seeing. If you have "
#~ "installed successfully, skip down to `Continue on`_."
#~ msgstr ""
#~ "如果在执行这些步骤时有任何错误，请检查以下建议是否与你看到的相符。如果你已"
#~ "经安装成功，跳转到`Continue on`_。"

#~ msgid ""
#~ "Congratulations! Ubuntu Touch has now booted on your device. Move on to :"
#~ "doc:`running-ut` to learn about more specific steps you will need to take "
#~ "for a complete port."
#~ msgstr ""
#~ "恭喜！Ubuntu Touch现已在你设备上启动。移步:doc:`running-ut`以学习完整移植"
#~ "的更多相关步骤。"

#~ msgid "Porting information"
#~ msgstr "移植信息"

#~ msgid ""
#~ "If you are looking for information on installing Ubuntu Touch on a "
#~ "supported device, or if you would like to check if your device is "
#~ "supported, please see `this page <https://devices.ubuntu-touch.io/>`_."
#~ msgstr ""
#~ "如果你在查找关于已支持设备上安装Ubuntu Touch的信息，或你想检查你的设备是否"
#~ "受支持，请参见`this page <https://devices.ubuntu-touch.io/>`_。"

#~ msgid ""
#~ "This section will introduce you to some of the specifics of porting "
#~ "Ubuntu Touch to an Android device."
#~ msgstr "本节将向您介绍将 Ubuntu Touch 移植到 Android 设备的一些细节。"

#~ msgid ""
#~ "Start at :doc:`building-halium-boot` if you'd like to install the UBports "
#~ "Ubuntu Touch 16.04 rootfs."
#~ msgstr ""
#~ "如果你要安装UBports Ubuntu Touch 16.04 rootfs，参见:doc:`building-halium-"
#~ "boot`。"

#~ msgid ""
#~ "If you're having trouble with the porting steps after building your "
#~ "Halium systemimage, check out the \"Common Problems\" section of the page "
#~ "you're stuck on. If none of the suggestions are helpful, you can get help "
#~ "from the community via the following channels:"
#~ msgstr ""
#~ "如果你在构建Halium系统镜像之后的步骤遇到了困难，请查看（对应困难步骤）页面"
#~ "的常见问题部分。如果这些建议都没用，你可以从以下频道获取社区帮助:"

#~ msgid ""
#~ "Now that you're logged in, there are a few more steps before Ubuntu Touch "
#~ "will be fully functional on your device."
#~ msgstr "现在你已登录，在Ubuntu Touch完整的在你设备上运行前还有一些步骤。"

#~ msgid ""
#~ "Ubuntu Touch uses Upstart rather than Systemd for its init daemon. "
#~ "Because of this, it is not fully Halium-compatible and is not able to use "
#~ "the vanilla hybris-boot that Halium produces. For this reason, we need to "
#~ "build ubports-boot."
#~ msgstr ""
#~ "Ubuntu Touch 使用 Upstart 而不是 Systemd 作为它的 init 守护进程。 因此，它"
#~ "不完全符合 Halium 标准，并且不能使用Halium 的 hybris-boot。 出于这个原因，"
#~ "我们需要构建 ubports-boot。"

#~ msgid "Add source to Halium tree"
#~ msgstr "添加源码到 Halium 树"

#~ msgid ""
#~ "The first thing that needs to be done is adding the ubports-boot source "
#~ "to your Halium tree. You may choose to do this by adding it to your local "
#~ "manifests (recommended) or simply cloning it in place."
#~ msgstr ""
#~ "首先需要做的是将 ubports-boot 源添加到你的 Halium 树。 您可以选择将其添加"
#~ "到您的本地清单（推荐），或者只是将其简单地克隆到某个地方。"

#~ msgid "Add to local manifest"
#~ msgstr "添加到本地清单"

#~ msgid ""
#~ "Create a new file in ``.repo/local_manifests`` called ``ubports-boot."
#~ "xml``. Add the following to the file:"
#~ msgstr ""
#~ "在 ``.repo/local_manifests`` 中创建叫 ``ubports-boot.xml`` 的文件。在文件"
#~ "中添加下列内容："

#~ msgid "Now, just do a ``repo sync`` to download the new source."
#~ msgstr "现在，只需要执行 ``repo sync`` 便可下载新的源码。"

#~ msgid "Manual clone"
#~ msgstr "手动克隆"

#~ msgid ""
#~ "You may also choose to clone the `ubports-boot repository <https://github."
#~ "com/ubports/ubports-boot>`_ into your tree manually. It should be placed "
#~ "into ``BUILDDIR/halium/ubports-boot``."
#~ msgstr ""
#~ "您也可以选择手动克隆 `ubports-boot repository <https://github.com/ubports/"
#~ "ubports-boot>`_ 到树。它应放在 ``BUILDDIR/halium/ubports-boot`` 中。"

#~ msgid ""
#~ "If you share your code and build instructions, please note that you've "
#~ "done this."
#~ msgstr "如果您共享代码和构建说明，请注意您已完成此操作。"

#~ msgid ""
#~ "The android build system won't know where to find ubports-boot normally. "
#~ "To fix this, open the file ``BUILDDIR/build/core/main.mk`` in a text "
#~ "editor. Find the comment ``# Specific projects for Halium`` and add "
#~ "``halium/ubports-boot`` to the list of ``subdirs`` ::"
#~ msgstr ""
#~ "Android 构建系统一般情况下不知道哪里可以寻找 ubports-boot。为了解决这个问"
#~ "题，请使用文本编辑器打开文件 ``BUILDDIR/build/core/main.mk`` 。找到注释 "
#~ "``# Specific projects for Halium``，并将 ``halium/ubports-boot``添加到 "
#~ "``subdirs`` 列表中::"

#~ msgid "Edit init.rc"
#~ msgstr "编辑 init.rc"

#~ msgid ""
#~ "Some Android services conflict with ofono in 16.04 and will cause your "
#~ "device to reboot without warning, about 30-60 seconds after it boots. We "
#~ "will need to disable these services until the issue is resolved."
#~ msgstr ""
#~ "有些 Android 服务在 16.04 中与 ofono 产生冲突，导致设备在启动后大约 30-60 "
#~ "秒内没有警告就会重启。 我们需要禁用这些服务，直到问题得到解决。"
