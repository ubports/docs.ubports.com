# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, The UBports project (Creative Commons BY-SA 4.0)
# This file is distributed under the same license as the UBports package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
msgid ""
msgstr ""
"Project-Id-Version: UBports 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-07-11 15:02-0500\n"
"PO-Revision-Date: 2018-08-09 09:27+0000\n"
"Last-Translator: Luo Yufan <njlyf2011@hotmail.com>\n"
"Language-Team: Chinese (Simplified) <https://translate.ubports.com/projects/"
"ubports-docs/documentation-appdev/zh_Hans/>\n"
"Language: zh_Hans\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 2.20\n"

#: ../../appdev/apparmor.rst:2
msgid "AppArmor Policy Groups"
msgstr "AppArmor 策略组"

#: ../../appdev/apparmor.rst:4
msgid ""
"This document contains a full list of Ubuntu Touch's available policy groups "
"and a description of what they give your app permission to access."
msgstr "本文档包含 Ubuntu Touch 可用策略组的完整列表，以及它们为您的应用程序提供访问权限的说明。"

#: ../../appdev/apparmor.rst:6
msgid "Each entry follows this format"
msgstr "每个条目都遵循此格式"

#: ../../appdev/apparmor.rst:21
msgid ""
"Policy usage affects whether your app will be accepted by the OpenStore. "
"Apps containing policies with common usage are generally accepted "
"immediately, while reserved usage policies will need to be manually reviewed."
msgstr ""

#: ../../appdev/apparmor.rst:24
msgid "accounts"
msgstr "帐号"

#: ../../appdev/apparmor.rst:26
msgid "Description: Can use Online Accounts."
msgstr "描述：可使用在线账户。"

#: ../../appdev/apparmor.rst:28 ../../appdev/apparmor.rst:38
#: ../../appdev/apparmor.rst:70 ../../appdev/apparmor.rst:80
#: ../../appdev/apparmor.rst:100 ../../appdev/apparmor.rst:110
#: ../../appdev/apparmor.rst:155 ../../appdev/apparmor.rst:163
#: ../../appdev/apparmor.rst:173 ../../appdev/apparmor.rst:201
#: ../../appdev/apparmor.rst:231 ../../appdev/apparmor.rst:239
#: ../../appdev/apparmor.rst:249 ../../appdev/apparmor.rst:259
#: ../../appdev/apparmor.rst:287
msgid "Usage: common"
msgstr "用法：普通"

#: ../../appdev/apparmor.rst:30
msgid ""
"The accounts policy gives your app the permissions it needs to access the "
"`Online Accounts API`_."
msgstr ""

#: ../../appdev/apparmor.rst:34
msgid "audio"
msgstr "audio"

#: ../../appdev/apparmor.rst:36
msgid ""
"Description: Can play audio (allows playing remote content via media-hub)"
msgstr "描述：可播放音频（允许通过媒体播放器播放远程内容）"

#: ../../appdev/apparmor.rst:40
msgid ""
"The audio policy is needed for your app to play audio via pulseaudio or "
"media-hub. The permission also gives it the ability to send album art to the "
"thumbnailer service, which is then shown on the sound indicator."
msgstr ""

#: ../../appdev/apparmor.rst:44
msgid "bluetooth"
msgstr "bluetooth"

#: ../../appdev/apparmor.rst:46
msgid "Description: Use bluetooth (bluez5) as an administrator."
msgstr ""

#: ../../appdev/apparmor.rst:48 ../../appdev/apparmor.rst:58
#: ../../appdev/apparmor.rst:90 ../../appdev/apparmor.rst:120
#: ../../appdev/apparmor.rst:128 ../../appdev/apparmor.rst:137
#: ../../appdev/apparmor.rst:147 ../../appdev/apparmor.rst:181
#: ../../appdev/apparmor.rst:191 ../../appdev/apparmor.rst:211
#: ../../appdev/apparmor.rst:221 ../../appdev/apparmor.rst:267
#: ../../appdev/apparmor.rst:277
msgid "Usage: reserved"
msgstr ""

#: ../../appdev/apparmor.rst:50
msgid ""
"This policy grants unrestricted access to Bluetooth devices. It is provided "
"for administration of bluetooth and as a stepping stone towards developing a "
"safe bluetooth API all apps can access."
msgstr ""

#: ../../appdev/apparmor.rst:54
msgid "calendar"
msgstr "日历"

#: ../../appdev/apparmor.rst:56
msgid "Description: Can access the calendar."
msgstr "描述：可访问相机。"

#: ../../appdev/apparmor.rst:60
msgid ""
"Calendar grants access to the Evolution dataserver's calendar and alarms "
"APIs. It also grants access to sync-monitor."
msgstr "Calendar 允许访问 Evolution 数据服务器的日历和警报API。 它还授予访问同步监视器的权限。"

#: ../../appdev/apparmor.rst:62
msgid ""
"This policy is reserved since it grants free access to all calendars on the "
"device at any time. The legacy bug about this situation is `LP #1227824`_ ."
msgstr ""

#: ../../appdev/apparmor.rst:66
msgid "camera"
msgstr "相机"

#: ../../appdev/apparmor.rst:68
msgid "Description: Can access the camera(s)"
msgstr "描述：可访问的相机"

#: ../../appdev/apparmor.rst:72
msgid "The camera policy grants access to device cameras."
msgstr "相机策略允许您访问设备相机。"

#: ../../appdev/apparmor.rst:76
msgid "connectivity"
msgstr ""

#: ../../appdev/apparmor.rst:78
msgid "Description: Can access coarse network connectivity information"
msgstr ""

#: ../../appdev/apparmor.rst:82
msgid ""
"The connectivity policy allows apps to determine rough information about the "
"device's connectivity. This includes whether the device is connected to the "
"Internet and whether it is connected via a Wi-Fi or mobile data connection."
msgstr ""

#: ../../appdev/apparmor.rst:86
msgid "contacts"
msgstr "contacts"

#: ../../appdev/apparmor.rst:88
#, fuzzy
msgid "Description: Can access contacts."
msgstr "location：可访问地理位置"

#: ../../appdev/apparmor.rst:92
msgid ""
"The contacts policy allows apps to access the device user's contacts list. "
"It is marked as reserved because it allows access to sync-monitor and "
"unfettered access to the address book."
msgstr ""

#: ../../appdev/apparmor.rst:96
msgid "content_exchange"
msgstr "content_exchange"

#: ../../appdev/apparmor.rst:98
msgid "Description: Can request/import data from other applications"
msgstr ""

#: ../../appdev/apparmor.rst:102
msgid ""
"Using the content_exchange policy allows your app to be a consumer of "
"content on content-hub."
msgstr ""

#: ../../appdev/apparmor.rst:106
msgid "content_exchange_source"
msgstr "content_exchange_source"

#: ../../appdev/apparmor.rst:108
msgid "Description: Can provide/export data to other applications"
msgstr ""

#: ../../appdev/apparmor.rst:112
msgid ""
"The content_exchange_source policy allows your app to provide content on "
"content-hub."
msgstr ""

#: ../../appdev/apparmor.rst:116
msgid "debug"
msgstr "debug"

#: ../../appdev/apparmor.rst:118
msgid ""
"Description: Use special debugging tools. This should only be used in "
"development and not for production packages. Note: use of this policy group "
"provides significantly different confinement than normal and is not "
"considered secure. You should never run untrusted programs using this policy "
"group."
msgstr ""

#: ../../appdev/apparmor.rst:124
msgid "document_files"
msgstr ""

#: ../../appdev/apparmor.rst:126
msgid ""
"Description: Can read and write to document files. This policy group is "
"reserved for certain applications, such as document viewers. Developers "
"should typically use the content_exchange policy group and API to access "
"document files instead."
msgstr ""

#: ../../appdev/apparmor.rst:130
msgid ""
"This policy allows apps to read and write to the \"Documents\" folders in "
"the user's home directory and external media."
msgstr ""

#: ../../appdev/apparmor.rst:133
msgid "document_files_read"
msgstr ""

#: ../../appdev/apparmor.rst:135
msgid ""
"Description: Can read all document files. This policy group is reserved for "
"certain applications, such as document viewers. Developers should typically "
"use the content_exchange policy group and API to access document files "
"instead."
msgstr ""

#: ../../appdev/apparmor.rst:139
msgid ""
"This policy allows apps to read the \"Documents\" folders in the user's home "
"directory and external media."
msgstr "此策略允许应用程序读取用户主目录和外部媒体中的“文档”文件夹。"

#: ../../appdev/apparmor.rst:143
msgid "history"
msgstr "历史"

#: ../../appdev/apparmor.rst:145
msgid ""
"Description: Can access the history-service. This policy group is reserved "
"for vetted applications only in this version of the policy. A future version "
"of the policy may move this out of reserved status."
msgstr ""

#: ../../appdev/apparmor.rst:151
msgid "keep-display-on"
msgstr "keep-display-on"

#: ../../appdev/apparmor.rst:153
msgid "Description: Can request keeping the screen on"
msgstr "描述：可以请求保持屏幕开启"

#: ../../appdev/apparmor.rst:159
msgid "location"
msgstr "位置"

#: ../../appdev/apparmor.rst:161
#, fuzzy
msgid "Description: Can access Location"
msgstr "location：可访问地理位置"

#: ../../appdev/apparmor.rst:165
msgid "Allows an app to request access to the device's current location."
msgstr "允许应用请求访问设备的当前位置。"

#: ../../appdev/apparmor.rst:169
msgid "microphone"
msgstr "麦克风"

#: ../../appdev/apparmor.rst:171
#, fuzzy
msgid "Description: Can access the microphone"
msgstr "microphone：可访问的麦克风"

#: ../../appdev/apparmor.rst:177
msgid "music_files"
msgstr "music_files"

#: ../../appdev/apparmor.rst:179
msgid ""
"Description: Can read and write to music files. This policy group is "
"reserved for certain applications, such as music players. Developers should "
"typically use the content_exchange policy group and API to access music "
"files instead."
msgstr ""

#: ../../appdev/apparmor.rst:183
msgid ""
"The music_files policy group allows an app to read or write to the Music "
"directories in the user's home folder or on external media."
msgstr "music_files 策略组允许应用程序读写用户主文件夹或外部媒体上的音乐目录。"

#: ../../appdev/apparmor.rst:187
msgid "music_files_read"
msgstr "music_files_read"

#: ../../appdev/apparmor.rst:189
msgid ""
"Description: Can read all music files. This policy group is reserved for "
"certain applications, such as music players. Developers should typically use "
"the content_exchange policy group and API to access music files instead."
msgstr ""

#: ../../appdev/apparmor.rst:193
msgid ""
"The music_files_read policy group allows an app to read the Music "
"directories in the user's home folder or on external media."
msgstr ""

#: ../../appdev/apparmor.rst:197
msgid "networking"
msgstr "networking"

#: ../../appdev/apparmor.rst:199
msgid "Description: Can access the network"
msgstr "描述：克访问互联网"

#: ../../appdev/apparmor.rst:203
msgid ""
"The networking policy group allows an app to contact network devices and use "
"the `download manager`_."
msgstr ""

#: ../../appdev/apparmor.rst:207
msgid "picture_files"
msgstr "picture_files"

#: ../../appdev/apparmor.rst:209
msgid ""
"Description: Can read and write to picture files. This policy group is "
"reserved for certain applications, such as gallery applications. Developers "
"should typically use the content_exchange policy group and API to access "
"picture files instead."
msgstr ""
"描述：可读写图片文件。 此策略组保留用于某些应用程序，例如相册类应用。 开发人员通常应使用 content_exchange 策略组和 API "
"来访问图片文件。"

#: ../../appdev/apparmor.rst:213
msgid ""
"The picture_files policy group allows an app to read and write to the "
"Pictures directories in the user's home folder or on external media."
msgstr ""

#: ../../appdev/apparmor.rst:217
msgid "picture_files_read"
msgstr "picture_files_read"

#: ../../appdev/apparmor.rst:219
msgid ""
"Description: Can read all picture files. This policy group is reserved for "
"certain applications, such as gallery applications. Developers should "
"typically use the content_exchange policy group and API to access picture "
"files instead."
msgstr ""

#: ../../appdev/apparmor.rst:223
msgid ""
"The picture_files_read policy group allows an app to read the Pictures "
"directories in the user's home folder or on external media."
msgstr ""

#: ../../appdev/apparmor.rst:227
msgid "push-notification-client"
msgstr ""

#: ../../appdev/apparmor.rst:229
msgid "Description: Can use push notifications as a client"
msgstr "描述：可作为客户端推送通知"

#: ../../appdev/apparmor.rst:235
msgid "sensors"
msgstr "传感器"

#: ../../appdev/apparmor.rst:237
msgid "Description: Can access the sensors"
msgstr "描述：可访问传感器"

#: ../../appdev/apparmor.rst:241
msgid "Allows apps to access `device sensors`_"
msgstr ""

#: ../../appdev/apparmor.rst:245
msgid "usermetrics"
msgstr "usermetrics"

#: ../../appdev/apparmor.rst:247
msgid "Description: Can use UserMetrics to update the InfoGraphic"
msgstr ""

#: ../../appdev/apparmor.rst:251
msgid ""
"Allows an app to write metrics to the UserMetrics service so they can be "
"displayed on the InfoGraphic."
msgstr ""

#: ../../appdev/apparmor.rst:255
msgid "video"
msgstr "video"

#: ../../appdev/apparmor.rst:257
msgid ""
"Description: Can play video (allows playing remote content via media-hub)"
msgstr ""

#: ../../appdev/apparmor.rst:263
msgid "video_files"
msgstr "video_files"

#: ../../appdev/apparmor.rst:265
msgid ""
"Description: Can read and write to video files. This policy group is "
"reserved for certain applications, such as gallery applications. Developers "
"should typically use the content_exchange policy group and API to access "
"video files instead."
msgstr ""

#: ../../appdev/apparmor.rst:269
msgid ""
"The video_files policy group allows an app to read and write to the Videos "
"directories in the user's home folder or on external media."
msgstr "video_files 策略组允许应用程序读取和写入用户主文件夹或外部媒体上的视频目录。"

#: ../../appdev/apparmor.rst:273
msgid "video_files_read"
msgstr "video_files_read"

#: ../../appdev/apparmor.rst:275
msgid ""
"Description: Can read all video files. This policy group is reserved for "
"certain applications, such as gallery applications. Developers should "
"typically use the content_exchange policy group and API to access video "
"files instead."
msgstr ""
"描述：可以读取所有视频文件。 此策略组保留用于某些应用程序，例如相册应用程序。开发人员通常应使用content_exchange 策略组和 API "
"来访问视频文件。"

#: ../../appdev/apparmor.rst:279
msgid ""
"The video_files_read policy group allows an app to read the Videos "
"directories in the user's home folder or on external media."
msgstr ""

#: ../../appdev/apparmor.rst:283
msgid "webview"
msgstr "webview"

#: ../../appdev/apparmor.rst:285
msgid "Description: Can use the UbuntuWebview"
msgstr "描述：可使用 UbuntuWebview"

#: ../../appdev/apparmor.rst:289
msgid "The webview policy group allows apps to embed a `web browser view`_."
msgstr ""

#: ../../appdev/cookbook.rst:2
msgid "App development cookbook"
msgstr "应用开发指南"

#: ../../appdev/cookbook.rst:5
msgid "Unofficial resources"
msgstr "非官方资源"

#: ../../appdev/cookbook.rst:7
msgid ""
"In this section you will find links to external resources about creating "
"applications for Ubuntu Touch."
msgstr "在本节中，您将找到有关为 Ubuntu Touch 创建应用程序的外部资源的链接。"

#: ../../appdev/cookbook.rst:9
msgid ""
"`Ubuntu Touch programming book <https://www.gitbook.com/book/mimecar/ubuntu-"
"touch-programming-course/details>`__"
msgstr ""
"`Ubuntu Touch 编程手册 <https://www.gitbook.com/book/mimecar/ubuntu-touch-"
"programming-course/details>`__"

#: ../../appdev/cookbook.rst:12
msgid "Playground"
msgstr ""

#: ../../appdev/cookbook.rst:14
msgid ""
"In a completely free and open source community, it is natural to have "
"community members exploring the limits of the platform in many many "
"directions. In this section you will find links to external resources that "
"do exactly that: Explore. The purpose of this list is to show the unlimited "
"possibilities of an open platform like Ubuntu Touch."
msgstr ""

#: ../../appdev/cookbook.rst:17
msgid ""
"The resources listed here do not neccessarily represent the officially "
"endorsed way of developing applications for Ubuntu Touch, but are "
"interesting experiments."
msgstr ""

#: ../../appdev/cookbook.rst:19
msgid ""
"`Free Pascal development for Ubuntu Touch <http://kriscode.blogspot."
"tw/2016/09/freepascal-development-for-ubuntu-phone.html>`__"
msgstr ""

#: ../../appdev/cookbook.rst:20
msgid ""
"`Lazarus development for Ubuntu Touch <http://kriscode.blogspot.tw/2016/10/"
"lazarus-development-for-ubuntu-phone.html>`__"
msgstr ""

#: ../../appdev/cookbook.rst:21
msgid ""
"`Geany on Ubuntu Touch device as text editor, source code editor, debugger "
"and compiler for multiple languages <http://kriscode.blogspot.tw/2017/10/"
"geany-on-ubuntu-touch-device-as-text.html>`__"
msgstr ""

#: ../../appdev/index.rst:2
msgid "App development"
msgstr "应用开发"

#: ../../appdev/index.rst:4
msgid ""
"Welcome to an open source and free platform under constant scrutiny and "
"improvement by a vibrant global community, whose energy, connectedness, "
"talent and commitment is unmatched. Ubuntu is also the third most deployed "
"desktop OS in the world."
msgstr ""

#: ../../appdev/index.rst:7
msgid "Introduction"
msgstr "引言"

#: ../../appdev/index.rst:9
msgid ""
"Ubuntu Touch has three types of applications: `Web applications`_ (WebApps), "
"Scopes (deprecated) and `Native applications`_. Applications are packaged, "
"distributed and deployed using a format called `click <https://click."
"readthedocs.io/en/latest/>`_ packaging. App UIs can be created using QML or "
"HTML5 and behavior can be created using JS, Qt, C++, Python, or Go."
msgstr ""

#: ../../appdev/index.rst:14
msgid "Click package overview"
msgstr ""

#: ../../appdev/index.rst:16
msgid "Every ``click`` application package must embed at least 3 files:"
msgstr ""

#: ../../appdev/index.rst:38
msgid "``manifest.json`` file"
msgstr "``manifest.json`` 文件"

#: ../../appdev/index.rst:19
msgid ""
"Contains application declarations such as application name, description, "
"author, framework sdk target, and version."
msgstr ""

#: ../../appdev/index.rst:21
msgid "Example ``manifest.json`` file::"
msgstr "``manifest.json`` 文件示例::"

#: ../../appdev/index.rst:41
msgid "AppArmor profile policy file"
msgstr ""

#: ../../appdev/index.rst:41
msgid ""
"Contains which policy the app needs to work properly. See `Security and app "
"isolation`_ below for more information on this file."
msgstr ""

#: ../../appdev/index.rst:64
msgid "``.desktop`` file"
msgstr "``.desktop`` 文件"

#: ../../appdev/index.rst:44
msgid ""
"The launcher file will tell UT how to launch the app, which name and icon to "
"display on the home screen, and some other properties."
msgstr ""

#: ../../appdev/index.rst:46
msgid "Example of ``app.desktop``::"
msgstr "``app.desktop``示例::"

#: ../../appdev/index.rst:56
msgid "Non exhaustive list of properties:"
msgstr ""

#: ../../appdev/index.rst:58
msgid "Name: Application title has shown in the dash"
msgstr ""

#: ../../appdev/index.rst:59
msgid "Exec: Path to the executable file"
msgstr "Exec：可执行文件路径"

#: ../../appdev/index.rst:60
msgid "Icon: Path to the icon to display"
msgstr "Icon：显示的图标路径"

#: ../../appdev/index.rst:61
msgid "Terminal: ``false`` if will not run in terminal window"
msgstr ""

#: ../../appdev/index.rst:62
msgid ""
"Type: Specifies the type of the launcher file. The type can be Application, "
"Link or Directory."
msgstr ""

#: ../../appdev/index.rst:63
msgid "X-Ubuntu-Touch: ``true`` to make the app visible"
msgstr ""

#: ../../appdev/index.rst:64
msgid "X-Ubuntu-XMir-Enable: ``true`` if your app is built for X"
msgstr ""

#: ../../appdev/index.rst:71
msgid "Security and app isolation"
msgstr ""

#: ../../appdev/index.rst:73
msgid ""
"All Ubuntu apps and scopes are confined respecting AppArmor access control "
"mechanism (see `Application Confinement <https://wiki.ubuntu.com/"
"SecurityTeam/Specifications/"
"ApplicationConfinement#App_confinement_with_AppArmor>`_) , meaning they only "
"have access to their own resources and are isolated from other apps and "
"parts of the system. The developer must declare which policy groups are "
"needed for the app or scope to function properly with an apparmor ``.json`` "
"file."
msgstr ""

#: ../../appdev/index.rst:75
msgid "Example ``apparmor.json`` file::"
msgstr ""

#: ../../appdev/index.rst:87
msgid "For a full list of available policy groups, see :doc:`apparmor`."
msgstr ""

#: ../../appdev/index.rst:97
msgid "Ubuntu Touch platform"
msgstr "Ubuntu Touch 平台"

#: ../../appdev/index.rst:99
msgid "Platform key notes:"
msgstr ""

#: ../../appdev/index.rst:102
msgid "Content Hub"
msgstr ""

#: ../../appdev/index.rst:102
msgid ""
"Each application can expose content outside its sandbox, giving the user "
"precise control over what can be imported, exported or shared with the world "
"and other apps."
msgstr ""

#: ../../appdev/index.rst:105
msgid "Push notifications"
msgstr "推送通知"

#: ../../appdev/index.rst:105
msgid ""
"By using a push server and a companion client, instantly serve users with "
"the latest information from their network and apps."
msgstr ""

#: ../../appdev/index.rst:108
msgid "URL dispatcher"
msgstr ""

#: ../../appdev/index.rst:108
msgid ""
"Help users navigate between your apps and drive their journey with the URL "
"dispatcher."
msgstr ""

#: ../../appdev/index.rst:112
msgid "Online accounts"
msgstr "在线账户"

#: ../../appdev/index.rst:111
msgid ""
"Simplify user access to online services by integrating with the online "
"accounts API. Accounts added by the user on the device are registered in a "
"centralized hub, allowing other apps to re-use them."
msgstr ""

#: ../../appdev/index.rst:114
msgid "`Read the docs <https://docs.ubuntu.com/phone/en/platform/>`__"
msgstr ""

#: ../../appdev/index.rst:121
msgid "Getting started"
msgstr "入门"

#: ../../appdev/index.rst:123
msgid ""
"`Clickable <http://clickable.bhdouglass.com/en/latest/>`_ is a meta-build "
"system for Ubuntu Touch applications that allows you to compile, build, test "
"and publish `click` packages and provides various templates to get you "
"started with UT app developpment. It is currently the easiest and most "
"convenient way of building click packages for Ubuntu Touch. Also, looking at "
"existing published app source code is a good way to learn: `see openstore "
"<https://open-store.io>`_"
msgstr ""

#: ../../appdev/index.rst:128
msgid "Ubuntu UI-Toolkit"
msgstr "Ubuntu UI 工具箱"

#: ../../appdev/index.rst:130
msgid ""
"Here you can find `the API documentation <https://api-docs.ubports.com/>`_ "
"for the Ubuntu UI toolkit."
msgstr ""
"Here you can find `the API documentation <https://api-docs.ubports.com/>`_ "
"for the Ubuntu UI toolkit."

#: ../../appdev/index.rst:132
msgid "`QML API <https://api-docs.ubports.com/sdk/apps/qml/index.html>`__"
msgstr ""

#: ../../appdev/index.rst:133
msgid ""
"`Cordova HTML5 API <https://api-docs.ubports.com/sdk/apps/html5/index."
"html>`__"
msgstr ""

#: ../../appdev/index.rst:134
msgid "`Click packages <https://click.readthedocs.io/en/latest/>`__"
msgstr ""

#: ../../appdev/index.rst:137
msgid "Ubuntu SDK IDE (unsupported)"
msgstr "Ubuntu SDK IDE (不支持）"

#: ../../appdev/index.rst:139
msgid ""
"The `Ubuntu SDK IDE <https://docs.ubuntu.com/phone/en/platform/sdk>`__ is no "
"longer supported by Canonical, and UBports does not currently have the the "
"time and manpower to get it to a working state."
msgstr ""

#: ../../appdev/index.rst:143
msgid "It can still be installed in Ubuntu 16.04, but issues are expected."
msgstr ""

#: ../../appdev/index.rst:153 ../../appdev/system-software.rst:2
msgid "System Software"
msgstr "系统软件"

#: ../../appdev/index.rst:155
msgid "Working on system components"
msgstr ""

#: ../../appdev/index.rst:164 ../../appdev/webapp/index.rst:2
msgid "Web applications"
msgstr "Web 应用程序"

#: ../../appdev/index.rst:166
msgid ""
"Ubuntu webapps are web-hosted sites displayed inside an Ubuntu app "
"container. They are true apps that users install, see, launch and use, but "
"their content is provided through URLs."
msgstr ""

#: ../../appdev/index.rst:175 ../../appdev/nativeapp/index.rst:2
msgid "Native applications"
msgstr "本地应用程序"

#: ../../appdev/index.rst:184
msgid "Cookbook"
msgstr "指南"

#: ../../appdev/index.rst:186
msgid "A collection of external resources"
msgstr "外部资源的集合"

#: ../../appdev/system-software.rst:4
msgid ""
"In this page you'll find information on how to develop system software, "
"including how to build it, cross-compile it and make it available to other "
"users. Most of the software preinstalled in your Ubports device is shipped "
"in the device image in the form of a Debian package. This format is used by "
"several Linux distributions (such as Debian, Ubuntu, Mint) and `plenty of "
"documentation <https://www.debian.org/doc/manuals/maint-guide/index.en."
"html>`__ is available out there on how to work with it, so we won't be "
"covering it here. Besides, in most cases you'll find yourself in need of "
"modifying existing software, rather than developing new packages from "
"scratch; for this reason, this guide is mostly about recompiling an existing "
"Ubports package."
msgstr ""

#: ../../appdev/system-software.rst:17
msgid ""
"There are essentially three ways of developing Ubports system software: "
"building it directly on device, cross-compiling it or uploading the source "
"code to a Launchpad PPA and have it built by Launchpad. We'll examine all of "
"the three methods, and use `address-book-app <https://github.com/ubports/"
"address-book-app>`__ (the Contacts application) as an example."
msgstr ""

#: ../../appdev/system-software.rst:25
msgid "Building on the device itself"
msgstr "在设备中构建"

#: ../../appdev/system-software.rst:27
msgid ""
"This is the fastest and simplest method to develop small changes and test "
"them in nearly real-time. Depending on your device resources, however, it "
"might not be possible to follow this path: if you don't have enough free "
"space in your root filesystem you won't be able to install all the package "
"build dependencies; or, your device's RAM might not be enough for the "
"compiler. Assuming that you are lucky enough not to run into these "
"restrictions, and that you don't mind reflashing your device afterwards (to "
"clear it from all the development packages you installed), please read on."
msgstr ""

#: ../../appdev/system-software.rst:37
msgid ""
"You can ssh to the device (via ``phablet-shell``, for example) and then "
"install all the packages needed to rebuild the component you want to modify "
"(the Contacts app, in this example):"
msgstr ""

#: ../../appdev/system-software.rst:46
msgid ""
"This will install a bunch of packages into your device's rootfs. "
"Additionally, you probably want to install ``git`` in order to get your "
"app's source code in the device and later push your changes back into the "
"repository:"
msgstr ""

#: ../../appdev/system-software.rst:57
msgid "Now, you are ready to build the package:"
msgstr ""

#: ../../appdev/system-software.rst:63
msgid ""
"and finally, install it. The ``dpkg-buildpackage`` command will print out "
"the list of generated packages, and it's those filenames you will need to "
"pass to the next command:"
msgstr ""

#: ../../appdev/system-software.rst:71
msgid ""
"Note, however, that you might not need to install all the packages: "
"generally, you can skip all packages whose name ends with ``-doc`` or "
"``dev``, since they don't contain code used by the device."
msgstr ""

#: ../../appdev/system-software.rst:76
msgid "Cross-building with crossbuilder"
msgstr "使用交叉编译器进行交叉编译"

#: ../../appdev/system-software.rst:78
msgid ""
"This is the recommended way to develop non trivial changes, and it's "
"suitable for all devices since the build happens on your desktop PC (will "
"call it \"host\" from now on) and not on the target device. It's also "
"extremely fast and easy to use."
msgstr ""

#: ../../appdev/system-software.rst:83
msgid "Start with installing ``crossbuilder`` in your host:"
msgstr ""

#: ../../appdev/system-software.rst:89
msgid ""
"It's a shell script, so you don't need to build it. Instead, you will need "
"to add its directory to your ``PATH`` environment variable, so that you can "
"execute it from any directory:"
msgstr "它是一个 shell 脚本，因此您不需要构建它。 不过，您需要将其目录添加到 ``PATH`` 环境变量中，以便您可以从任何目录执行它："

#: ../../appdev/system-software.rst:99
msgid ""
"Then, you need to setup LXD; luckily, crossbuilder has a command which does "
"everything for you; you just need to carefully follow its instructions:"
msgstr ""

#: ../../appdev/system-software.rst:107
msgid ""
"If this is the first time you used LXD, you might need to reboot your host "
"once everything has completed. After LXD has been setup, using crossbuilder "
"is as easy as it can get: just move to the directory where the source code "
"of your project is (for example, ``~/src/git/address-book-app``) and launch "
"it like this:"
msgstr ""

#: ../../appdev/system-software.rst:118
msgid ""
"*Note: if your device is connected to the PC, you don't need to specify the "
"``--ubuntu=15.04`` parameter because crossbuilder will figure out the proper "
"Ubuntu version by itself. If you don't specify any parameter and have no "
"device connected to your PC, crossbuilder will assume ``16.04`` (Xenial).*"
msgstr ""

#: ../../appdev/system-software.rst:124
msgid ""
"Crossbuilder will do everything for you: it will create the LXD container, "
"download the development image, install all your package build dependencies, "
"perform the build and finally, if your device is connected to your host, it "
"will copy the packages over to the target and install them. The first two "
"steps (creating the LXD image and getting the dependencies) can take a few "
"minutes, but will be executed only the first time you launch crossbuilder "
"for a new package."
msgstr ""

#: ../../appdev/system-software.rst:132
msgid ""
"Now, whenever you change the source code in your git repository, the same "
"changes will be available inside the container, and the next time you'll "
"type the ``crossbuilder`` command, only the changed files will be rebuilt. "
"This makes iterative development blazing fast."
msgstr ""

#: ../../appdev/system-software.rst:138
msgid "Unit tests"
msgstr ""

#: ../../appdev/system-software.rst:140
msgid ""
"By default crossbuilder does not run unit tests; that's both for speed "
"reasons, and because the container created by crossbuilder is not meant to "
"run native (target) executables: the development tools (qmake/cmake, make, "
"gcc, etc.) are all run in the host architecture, with no emulation (again, "
"for speed reasons). However, qemu emulation is available inside the "
"container, so it should be possible to run unit tests inside the container. "
"You can do that by getting a shell inside the container with"
msgstr ""

#: ../../appdev/system-software.rst:152
msgid ""
"and then find the unit tests and execute them. Be aware that the emulation "
"is not perfect, so there's a very good chance that the tests will fail even "
"when they'd otherwise succeed, when run into a proper environment. For that "
"reason, it's probably wiser not to worry about unit tests when working with "
"crossbuilder, and run them only when not cross-compiling."
msgstr ""

#: ../../appdev/system-software.rst:160
msgid "Developing in the host architecture, deploying via PPA"
msgstr ""

#: ../../appdev/system-software.rst:162
msgid ""
"Another way to develop system software is to develop it locally on your "
"desktop machine, and then push the source code to a Launchpad PPA and have "
"it built there for the armhf architecture. Depending on whether the feature "
"you are developing can be reasonably tested in your local machine, and "
"whether you can wait for Launchpad's builders to start working on your "
"package (this could take some hours), this might or might not be a suitable "
"way of device development."
msgstr ""

#: ../../appdev/system-software.rst:170
msgid ""
"*Note: as of late 2017, Launchpad has dropped support for vivid-based PPAs. "
"So, if you target the current 15.04 Ubports devices, this method is not "
"suitable for you.*"
msgstr ""

#: ../../appdev/system-software.rst:174
msgid ""
"Start by getting `VirtualBox <https://www.virtualbox.org/wiki/Downloads>`__ "
"and an Ubuntu image matching the base image of your device. You can get the "
"Ubuntu image here:"
msgstr ""

#: ../../appdev/system-software.rst:179
msgid ""
"``16.04 (Xenial)``: http://releases.ubuntu.com/16.04/ubuntu-16.04.3-desktop-"
"amd64.iso"
msgstr ""
"``16.04 (Xenial)``: http://releases.ubuntu.com/16.04/ubuntu-16.04.3-desktop-"
"amd64.iso"

#: ../../appdev/system-software.rst:182
msgid ""
"Boot your VirtualBox machine with the Ubuntu image you downloaded, and once "
"the installation is completed and you get to a terminal, add the `Stable "
"Phone Overlay PPA <https://launchpad.net/~ci-train-ppa-service/+archive/"
"ubuntu/stable-phone-overlay>`__ like this:"
msgstr ""
"使用下载的 Ubuntu 镜像启动 VirtualBox 虚拟机，当完成安装进入终端时，像这样添加 `Stable Phone Overlay PPA "
"<https://launchpad.net/~ci-train-ppa-service/+archive/ubuntu/stable-phone-"
"overlay>`__："

#: ../../appdev/system-software.rst:194
msgid ""
"You can then install the development tools you need, as well as the build "
"dependencies of the component you want to work on:"
msgstr ""

#: ../../appdev/system-software.rst:202
msgid "and then build the package locally:"
msgstr ""

#: ../../appdev/system-software.rst:208
msgid ""
"Change the ``parallel`` option according to how many processor cores you've "
"made available to VirtualBox in order to amximize the build speed. The "
"command above will build your package and also run all unit tests associated "
"with it, so it's an easy (though not sufficient!) way to check that your "
"changes won't break existing functionality. You can now develop your changes "
"and test them locally (though, if your component needs access to phone "
"hardware, that will obviously not work), until you are satisfied with the "
"result."
msgstr ""

#: ../../appdev/system-software.rst:217
msgid ""
"Once you get to a state where you believe that your changes should work, you "
"can push them into a PPA, so that they'll be built for your Ubports device "
"and you (and other users) will be able to test them. First, create a PPA by "
"visiting https://launchpad.net/~/+activate-ppa; enter a name and a "
"description, then push the Create button, and on the next page pick the "
"\"Change details\" link near the upper right corner. You can then enable "
"your phone's architecture (with most likelihood, it's \"ARM ARMv7 Hard Float"
"\"), disable all the architectures you don't care about, and click on \"Save"
"\". Supposing that your Launchpad username is \"ubdeveloper\" and the PPA is "
"called \"myppa\", then the commands to push your changes to the PPA will be "
"as follows:"
msgstr ""

#: ../../appdev/system-software.rst:234
msgid ""
"where the exact filename of the ``.changes`` file will be printed by the "
"debuild command near the end of its output. Note that in order for the "
"upload to succeed you will need to have a valid GPG key setup, and it must "
"be `added to Launchpad <https://launchpad.net/~/+editpgpkeys>`__. If you are "
"new to this stuff, it's recommended that you carefully read the "
"`documentation in Launchpad <https://help.launchpad.net/Packaging/PPA/"
"Uploading>`__."
msgstr ""

#: ../../appdev/system-software.rst:242
msgid ""
"After the package has been uploaded, you should receive an e-mail by "
"launchpad telling you whether the upload was accepted; if it was, then it "
"means that Launchpad will try to build the source package for all the "
"architectures supported by your PPA and, if successful, will finally publish "
"the resulting package(s) in it. Now all what is left to do is to install the "
"packages in your phone: to accomplish that, you can use ``phablet-shell`` to "
"get access to your phone, and from there type the following commands:"
msgstr ""

#: ../../appdev/system-software.rst:257
msgid ""
"You can also give the same installation instructions to other community "
"members, if you want them to test your changes before submitting them "
"upstream for review."
msgstr ""

#: ../../appdev/webapp/guide.rst:2 ../../appdev/webapp/index.rst:13
msgid "Guide"
msgstr "指南"

#: ../../appdev/webapp/guide.rst:5
msgid "How the webapp fits into the shell"
msgstr "如何让 Web 应用适应 Shell"

#: ../../appdev/webapp/guide.rst:7
msgid ""
"A web app displays in a webview inside a webapp-container that runs as an "
"Ubuntu app in the Ubuntu/Unity shell."
msgstr ""

#: ../../appdev/webapp/guide.rst:9
msgid "Taking a closer look:"
msgstr ""

#: ../../appdev/webapp/guide.rst:11
msgid ""
"At the innermost level, there is a website that the developer identifies by "
"URL. The website is rendered and runs in an Oxide webview. Oxide is a Blink/"
"Chrome webview that is customized for Ubuntu. The Oxide webview runs and "
"displays in the webapp-container. The webapp-container is the executable app "
"runtime that is integrated with the Ubuntu/unity shell."
msgstr ""

#: ../../appdev/webapp/guide.rst:16
msgid "Launching"
msgstr "启动"

#: ../../appdev/webapp/guide.rst:18
msgid "You can launch a webapp from the terminal with:::"
msgstr ""

#: ../../appdev/webapp/guide.rst:22
msgid "For example:::"
msgstr "示例::"

#: ../../appdev/webapp/guide.rst:26
msgid ""
"This simple form works, but almost every webapp also uses other features, "
"such as URL containment with URL patterns as described below."
msgstr ""

#: ../../appdev/webapp/guide.rst:29
msgid "User interface"
msgstr "用户界面"

#: ../../appdev/webapp/guide.rst:31
msgid ""
"A webapp generally fills the entire app screen space, without the need of "
"the UI controls generally found on standard browsers."
msgstr ""

#: ../../appdev/webapp/guide.rst:33
msgid ""
"In some cases some navigation controls are appropriate, such as Back and "
"Forward buttons, or a URL address bar. These are added as command line "
"arguments:"
msgstr ""

#: ../../appdev/webapp/guide.rst:35
msgid ""
"``--enable-back-forward`` Enable the display of the back and forward buttons "
"in the toolbar (at the bottom of the webapp window)"
msgstr ""

#: ../../appdev/webapp/guide.rst:36
msgid ""
"``--enable-addressbar`` Enable the display of the address bar (at the bottom "
"of the webapp window)"
msgstr ""

#: ../../appdev/webapp/guide.rst:39
msgid "URL patterns"
msgstr ""

#: ../../appdev/webapp/guide.rst:41
msgid ""
"Webapp authors often want to contain browsing to the target website. That "
"is, the developer wants to control the URLs that can be opened in the webapp "
"(all other URls are opened in the browser). This is done with URL patterns "
"as part of the webapp command line."
msgstr ""

#: ../../appdev/webapp/guide.rst:43
msgid ""
"However, many web apps use pages that are hosted over multiple sites or that "
"use external resources and pages."
msgstr ""

#: ../../appdev/webapp/guide.rst:45
msgid ""
"HoweverBoth containment and access to specified external URLs are "
"implemented with URL patterns provided as arguments at launch time. Let’s "
"take a closer look."
msgstr ""

#: ../../appdev/webapp/guide.rst:48
msgid "Uncontained by default"
msgstr ""

#: ../../appdev/webapp/guide.rst:50
msgid ""
"By default, there is no URL containment. Suppose you launch a webapp without "
"any patters and only a starting URL like this:::"
msgstr ""

#: ../../appdev/webapp/guide.rst:54
msgid ""
"The user can navigate to any URL without limitation. For example, if they "
"click the Developer button at the top, they navigate to developer.ubuntu."
"com, and it displays in the webapp."
msgstr ""

#: ../../appdev/webapp/guide.rst:56
msgid ""
"Tip: You can see the URL of the current page by enabling the address bar "
"with ``--enable-addressbar``."
msgstr ""

#: ../../appdev/webapp/guide.rst:59
msgid "Simple containment to the site"
msgstr ""

#: ../../appdev/webapp/guide.rst:61
msgid ""
"One often wants to contain users to the site itself. That is, if the website "
"is www.ubuntu.com, it may be useful to contain webapp users only to subpages "
"of www.ubuntu.com. This is done by adding a wildcard URL pattern to the "
"launch command, as follows:::"
msgstr ""

#: ../../appdev/webapp/guide.rst:67
msgid "``--webappUrlPatterns=`` indicates a pattern is next"
msgstr ""

#: ../../appdev/webapp/guide.rst:66
msgid ""
"http://www.ubuntu.com/* is the pattern The asterix is a wildcard that "
"matches any valid sequence of trailing (right-most) characters in a URL"
msgstr ""

#: ../../appdev/webapp/guide.rst:69
msgid ""
"With this launch command and URL pattern, the user can navigate to and open "
"in the webapp any URL that starts with http://www.ubuntu.com/. For example, "
"they can click on the Phone button (http://www.ubuntu.com/phone) in the "
"banner and it opens in the webapp, or the Tablet button (http://www.ubuntu."
"com/tablet). But, clicking Developer opens the corresponding URL in the "
"browser."
msgstr ""

#: ../../appdev/webapp/guide.rst:71
msgid ""
"Tip: Make sure to fully specify the subdomain in your starting URL, that is, "
"use http://www.ubuntu.com instead of www.ubuntu.com. Not specifying the "
"subdomain would create an ambiguous URL and thus introduces security "
"concerns. More complex wildcard patterns"
msgstr ""

#: ../../appdev/webapp/guide.rst:74
msgid ""
"You might want to limit access to only some subpages of your site from "
"within the webapp. This is easy with wildcard patterns. (Links to other "
"subpages are opened in the browser.) For example, the following allows "
"access to www.ubuntu.com/desktop/features and www.ubuntu.com/phone/features "
"while not allowing access to www.ubuntu.com/desktop or www.ubuntu.com/phone::"
msgstr ""

#: ../../appdev/webapp/guide.rst:80
msgid "Multiple patterns"
msgstr "多模式"

#: ../../appdev/webapp/guide.rst:82
msgid ""
"You can use multiple patterns by separating them with a comma. For example, "
"the following allows access only to www.ubuntu.com/desktop/features and www."
"ubuntu.com/phone/features:::"
msgstr ""

#: ../../appdev/webapp/guide.rst:86
msgid ""
"Tip: Multiple patterns are often necessary to achieve the intended "
"containment behavior."
msgstr ""

#: ../../appdev/webapp/guide.rst:90
msgid "Adding a specific subdomain"
msgstr ""

#: ../../appdev/webapp/guide.rst:92
msgid ""
"Many URLs have one or more subdomains. (For example, in the following, "
"“developer” is the subdomain: developer.ubuntu.com.) You can allow access to "
"a single subdomain (and all of its subpages) with a pattern like this:::"
msgstr ""

#: ../../appdev/webapp/guide.rst:96
msgid ""
"However, one usually wants the user to be able to navigate back to the "
"starting URL (and its subpages). So, if the starting URL is http://www."
"ubuntu.com, a second pattern is needed:::"
msgstr ""

#: ../../appdev/webapp/guide.rst:100
msgid ""
"Putting these together, here’s an example that starts on http://www.ubuntu."
"com and allows navigation to http://developer.ubuntu.com and subpages and "
"back to http://www.ubuntu.com and subpages:::"
msgstr ""

#: ../../appdev/webapp/guide.rst:105
msgid "Adding subdomains with a wildcard"
msgstr ""

#: ../../appdev/webapp/guide.rst:107
msgid ""
"Some URLs have multiple subdomains. For example, www.ubuntu.com has design."
"ubuntu.com, developer.ubuntu.com and more. You can add access to all "
"subdomains with a wildcard in the subdomain position:::"
msgstr ""

#: ../../appdev/webapp/guide.rst:111
msgid ""
"Note: An asterisk in the subdomain position matches any valid single "
"subdomain. This single pattern is sufficient to enable browsing to any "
"subdomain and subpages, including back to the starting URL (http://www."
"ubuntu.com) and its subpages."
msgstr ""

#: ../../appdev/webapp/guide.rst:114
msgid "Adding https"
msgstr "添加 https"

#: ../../appdev/webapp/guide.rst:116
msgid ""
"Sometimes a site uses https for some of its URLs. Here is an example that "
"allows https and https as access within the webapp to www.launchpad.net (and "
"all subpages due to the wildcard):::"
msgstr ""

#: ../../appdev/webapp/guide.rst:120
msgid ""
"Note: the question mark in https?. This means the preceding character (the "
"‘s’) is optional. If https is always required, omit the question mark."
msgstr ""

#: ../../appdev/webapp/guide.rst:123
msgid "Command line arguments"
msgstr "命令行参数"

#: ../../appdev/webapp/guide.rst:125
msgid ""
"The webapp-container accepts many options to fine tune how it hosts various "
"web applications."
msgstr ""

#: ../../appdev/webapp/guide.rst:127
msgid "See all help with:::"
msgstr ""

#: ../../appdev/webapp/guide.rst:131
msgid "Note: Only the following options apply to converged Ubuntu.::"
msgstr ""

#: ../../appdev/webapp/guide.rst:145
msgid "Chrome options (if none specified, no chrome is shown by default):::"
msgstr ""

#: ../../appdev/webapp/guide.rst:150
msgid ""
"Note: The other available options are specific to desktop webapps. It is "
"recommended to not use them anymore."
msgstr ""

#: ../../appdev/webapp/guide.rst:153
msgid "User-Agent string override"
msgstr "UA 字符串覆盖"

#: ../../appdev/webapp/guide.rst:155
msgid ""
"Some websites check specific portions of the web engine identity, aka the "
"User-Agent string, to adjust their presentation or enable certain features. "
"While not a recommended practice, it is sometimes necessary to change the "
"default string sent by the webapp container."
msgstr ""

#: ../../appdev/webapp/guide.rst:157
msgid "To change the string from the command line, use the following option:::"
msgstr ""

#: ../../appdev/webapp/guide.rst:162
msgid "Browser data containment"
msgstr ""

#: ../../appdev/webapp/guide.rst:164
msgid ""
"The webapp experience is contained and isolated from the browser data point "
"of view. That is webapps do not access data from any other installed "
"browser, such as history, cookies and so on. Other browser on the system do "
"not access the webapp’s data. Storage"
msgstr ""

#: ../../appdev/webapp/guide.rst:167
msgid ""
"W3C allows apps to use local storage, and Oxide/Webapp-container supports "
"the main standards here: LocalStorage, IndexedDB, WebSQL."
msgstr ""

#: ../../appdev/webapp/index.rst:4
msgid ""
"Ubuntu Webapps are a great way to deliver online web applications into "
"Ubuntu."
msgstr "Ubuntu Web 应用程序是向 Ubuntu 提供在线 Web 应用程序的绝佳方式。"

#: ../../appdev/webapp/index.rst:6
msgid ""
"The Ubuntu platform provides an advanced web engine container to run online "
"applications on the Ubuntu client devices."
msgstr "Ubuntu 平台提供了一个高级 Web 引擎容器，用于在 Ubuntu 客户端设备上运行在线应用程序。"

#: ../../appdev/webapp/index.rst:8
msgid ""
"Web applications are hosted online. They can be as simple as a website, like "
"an online news site, or they can distribute content like videos. They can "
"also have a rich user interface or use the WebGL extension to deliver games "
"online."
msgstr ""

#: ../../appdev/webapp/index.rst:10
msgid ""
"Note: Ubuntu webapps and Ubuntu HTML5 apps are similar but not identical. "
"The main difference is that the content of a webapp is provided through a "
"URL, whereas HTML5 apps install their content (and usually provide an Ubuntu "
"HTML5 GUI). Webapps also have restricted access to platform APIs."
msgstr ""
"注意：Ubuntu Web 应用程序和 Ubuntu HTML5 应用程序是相似的，但并不相同。两者的主要区别是：Web 应用程序的内容是通过 URL "
"提供的，而 HTML5 应用程序安装了它们的内容(通常提供 Ubuntu HTML5 图形用户界面)， 且 Web 应用程序对平台 API "
"的访问也有限制。"

#: ../../appdev/webapp/index.rst:15
msgid ""
"This guide targets webapps for converged Ubuntu, that is, Ubuntu for Devices "
"(phones and tablets). The Ubuntu Desktop has additional webapps support not "
"covered here. Support for webapps on converged Ubuntu will continue to grow, "
"and of course the future of Ubuntu is convergence, so stay tuned."
msgstr ""
"本指南针对融合版 Ubuntu 的 Web 应用程序，即 Ubuntu for Devices（手机和平板电脑）。 Ubuntu "
"桌面具有此处未涉及的其他 Web 应用程序支持。 在融合版 Ubuntu 上支持 Web 应用程序将继续增长，当然Ubuntu的未来是融合，敬请期待。"

#: ../../appdev/webapp/index.rst:24
msgid "Quick start"
msgstr "快速开始"

#: ../../appdev/webapp/index.rst:26
msgid ""
"There are several tools to help you package and deploy your webapp to your "
"device:"
msgstr ""

#: ../../appdev/webapp/index.rst:28
msgid ""
"`Webapp creator <https://open-store.io/app/webapp-creator.jujuyeh>`_ "
"application available from the openstore"
msgstr ""

#: ../../appdev/webapp/index.rst:29
msgid "`Clickable <http://clickable.bhdouglass.com/en/latest/>`_ CLI"
msgstr ""

#: ../../appdev/webapp/index.rst:33
msgid "Debugging your webapp"
msgstr "调试你的 Web 应用"

#: ../../appdev/webapp/index.rst:35
msgid "This guide give you some tips to help you debug your webapp."
msgstr ""

#: ../../appdev/webapp/webdebug.rst:2
msgid "Debug web application"
msgstr "调试 Web 应用程序"

#: ../../appdev/webapp/webdebug.rst:4
msgid ""
"Most web-devs will probably want do most of their coding and debugging in "
"the usual browser environment. The Ubuntu Touch browser is compliant with "
"modern web standards, and most webapps will just work without further "
"changes."
msgstr ""

#: ../../appdev/webapp/webdebug.rst:6
msgid ""
"For those (hopefully) rare cases where further debugging is needed, there "
"are two ways to gain further information on the failure."
msgstr ""

#: ../../appdev/webapp/webdebug.rst:9
msgid "Watch the logs"
msgstr "查看日志"

#: ../../appdev/webapp/webdebug.rst:11
msgid ""
"If you are comfortable in a CLI environment, most Javascript errors will "
"leave an entry in the app log file::"
msgstr ""

#: ../../appdev/webapp/webdebug.rst:17
msgid "Debugging in the browser"
msgstr "在浏览器中调试"

#: ../../appdev/webapp/webdebug.rst:20
msgid ""
"The default Ubuntu Touch browser is based on the Blink technology that is "
"also used in Chrome/Chromium. By starting the browser in a special mode, you "
"have access to the regular Chrome-style debugger."
msgstr ""

#: ../../appdev/webapp/webdebug.rst:22
msgid "On your phone, start the browser in inspector mode:::"
msgstr ""

#: ../../appdev/webapp/webdebug.rst:26
msgid ""
"Now on your computer, launch Chrome/Chromium browser, and point address to "
"``http://YOUR_UT_IP_ADDRESS:9221``"
msgstr ""
"现在打开您的计算机，开启 Chrome/Chromium 浏览器，地址栏中输入 ``http://"
"YOUR_UT_IP_ADDRESS:9221``。"

#~ msgid "audio: Can play audio"
#~ msgstr "audio：可播放音乐"

#~ msgid "video: Can play video"
#~ msgstr "video：可播放视频"
